(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-node_modules_highcharts_highcharts-more_js"],{

/***/ "./node_modules/highcharts/highcharts-more.js":
/*!****************************************************!*\
  !*** ./node_modules/highcharts/highcharts-more.js ***!
  \****************************************************/
/***/ (function(module) {

!/**
 * Highcharts JS v12.1.0 (2024-12-17)
 * @module highcharts/highcharts-more
 * @requires highcharts
 *
 * (c) 2009-2024 Torstein Honsi
 *
 * License: www.highcharts.com/license
 */function(t,e){ true?module.exports=e(t._Highcharts,t._Highcharts.SeriesRegistry,t._Highcharts.Series,t._Highcharts.Series.types.column,t._Highcharts.Color,t._Highcharts.Templating,t._Highcharts.Point,t._Highcharts.Chart,t._Highcharts.SVGElement,t._Highcharts.StackItem):0}("undefined"==typeof window?this:window,(t,e,i,s,o,a,r,n,l,h)=>(()=>{"use strict";var p,d,c,u={960:t=>{t.exports=n},620:t=>{t.exports=o},260:t=>{t.exports=r},28:t=>{t.exports=l},448:t=>{t.exports=s},820:t=>{t.exports=i},512:t=>{t.exports=e},184:t=>{t.exports=h},984:t=>{t.exports=a},944:e=>{e.exports=t}},g={};function f(t){var e=g[t];if(void 0!==e)return e.exports;var i=g[t]={exports:{}};return u[t](i,i.exports,f),i.exports}f.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return f.d(e,{a:e}),e},f.d=(t,e)=>{for(var i in e)f.o(e,i)&&!f.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},f.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var m={};f.d(m,{default:()=>oi});var b=f(944),y=f.n(b),x=f(512),P=f.n(x),v=f(820),M=f.n(v);let{deg2rad:L}=y(),{fireEvent:k,isNumber:w,pick:A,relativeLength:S}=y();!function(t){t.getCenter=function(){let t=this.options,e=this.chart,i=2*(t.slicedOffset||0),s=e.plotWidth-2*i,o=e.plotHeight-2*i,a=t.center,r=Math.min(s,o),n=t.thickness,l,h=t.size,p=t.innerSize||0,d,c;"string"==typeof h&&(h=parseFloat(h)),"string"==typeof p&&(p=parseFloat(p));let u=[A(a?.[0],"50%"),A(a?.[1],"50%"),A(h&&h<0?void 0:t.size,"100%"),A(p&&p<0?void 0:t.innerSize||0,"0%")];for(!e.angular||this instanceof M()||(u[3]=0),d=0;d<4;++d)c=u[d],l=d<2||2===d&&/%$/.test(c),u[d]=S(c,[s,o,r,u[2]][d])+(l?i:0);return u[3]>u[2]&&(u[3]=u[2]),w(n)&&2*n<u[2]&&n>0&&(u[3]=u[2]-2*n),k(this,"afterGetCenter",{positions:u}),u},t.getStartAndEndRadians=function(t,e){let i=w(t)?t:0,s=w(e)&&e>i&&e-i<360?e:i+360;return{start:L*(i+-90),end:L*(s+-90)}}}(p||(p={}));let T=p,{addEvent:C,correctFloat:N,defined:X,pick:Y}=y();function I(t){let e;let i=this;return t&&i.pane.forEach(s=>{R(t.chartX-i.plotLeft,t.chartY-i.plotTop,s.center)&&(e=s)}),e}function R(t,e,i,s,o){let a=!0,r=i[0],n=i[1],l=Math.sqrt(Math.pow(t-r,2)+Math.pow(e-n,2));if(X(s)&&X(o)){let i=Math.atan2(N(e-n,8),N(t-r,8));o!==s&&(a=s>o?i>=s&&i<=Math.PI||i<=o&&i>=-Math.PI:i>=s&&i<=N(o,8))}return l<=Math.ceil(i[2]/2)&&a}function E(t){this.polar&&(t.options.inverted&&([t.x,t.y]=[t.y,t.x]),t.isInsidePlot=this.pane.some(e=>R(t.x,t.y,e.center,e.axis&&e.axis.normalizedStartAngleRad,e.axis&&e.axis.normalizedEndAngleRad)))}function z(t){let e=this.chart;t.hoverPoint&&t.hoverPoint.plotX&&t.hoverPoint.plotY&&e.hoverPane&&!R(t.hoverPoint.plotX,t.hoverPoint.plotY,e.hoverPane.center)&&(t.hoverPoint=void 0)}function D(t){let e=this.chart;e.polar?(e.hoverPane=e.getHoverPane(t),t.filter=function(i){return i.visible&&!(!t.shared&&i.directTouch)&&Y(i.options.enableMouseTracking,!0)&&(!e.hoverPane||i.xAxis.pane===e.hoverPane)}):e.hoverPane=void 0}let O={pane:{center:["50%","50%"],size:"85%",innerSize:"0%",startAngle:0},background:{shape:"circle",borderRadius:0,borderWidth:1,borderColor:"#cccccc",backgroundColor:{linearGradient:{x1:0,y1:0,x2:0,y2:1},stops:[[0,"#ffffff"],[1,"#e6e6e6"]]},from:-Number.MAX_VALUE,innerRadius:0,to:Number.MAX_VALUE,outerRadius:"105%"}},{extend:H,merge:B,splat:W}=y();class F{constructor(t,e){this.coll="pane",this.init(t,e)}init(t,e){this.chart=e,this.background=[],e.pane.push(this),this.setOptions(t)}setOptions(t){this.options=t=B(O.pane,this.chart.angular?{background:{}}:void 0,t)}render(){let t=this.options,e=this.chart.renderer;this.group||(this.group=e.g("pane-group").attr({zIndex:t.zIndex||0}).add()),this.updateCenter();let i=this.options.background;if(i){let t=Math.max((i=W(i)).length,this.background.length||0);for(let e=0;e<t;e++)i[e]&&this.axis?this.renderBackground(B(O.background,i[e]),e):this.background[e]&&(this.background[e]=this.background[e].destroy(),this.background.splice(e,1))}}renderBackground(t,e){let i={class:"highcharts-pane "+(t.className||"")},s="animate";this.chart.styledMode||H(i,{fill:t.backgroundColor,stroke:t.borderColor,"stroke-width":t.borderWidth}),this.background[e]||(this.background[e]=this.chart.renderer.path().add(this.group),s="attr"),this.background[e][s]({d:this.axis.getPlotBandPath(t.from,t.to,t)}).attr(i)}updateCenter(t){this.center=(t||this.axis||{}).center=T.getCenter.call(this)}update(t,e){B(!0,this.options,t),this.setOptions(this.options),this.render(),this.chart.axes.forEach(function(t){t.pane===this&&(t.pane=null,t.update({},e))},this)}}F.compose=function(t,e){let i=t.prototype;i.getHoverPane||(i.collectionsWithUpdate.push("pane"),i.getHoverPane=I,C(t,"afterIsInsidePlot",E),C(e,"afterGetHoverData",z),C(e,"beforeGetHoverData",D))};let{area:{prototype:{pointClass:G,pointClass:{prototype:q}}}}=P().seriesTypes,{defined:V,isNumber:_}=y(),U=class extends G{setState(){let t=this.state,e=this.series,i=e.chart.polar;V(this.plotHigh)||(this.plotHigh=e.yAxis.toPixels(this.high,!0)),V(this.plotLow)||(this.plotLow=this.plotY=e.yAxis.toPixels(this.low,!0)),e.lowerStateMarkerGraphic=e.stateMarkerGraphic,e.stateMarkerGraphic=e.upperStateMarkerGraphic,this.graphic=this.graphics&&this.graphics[1],this.plotY=this.plotHigh,i&&_(this.plotHighX)&&(this.plotX=this.plotHighX),q.setState.apply(this,arguments),this.state=t,this.plotY=this.plotLow,this.graphic=this.graphics&&this.graphics[0],i&&_(this.plotLowX)&&(this.plotX=this.plotLowX),e.upperStateMarkerGraphic=e.stateMarkerGraphic,e.stateMarkerGraphic=e.lowerStateMarkerGraphic,e.lowerStateMarkerGraphic=void 0;let s=e.modifyMarkerSettings();q.setState.apply(this,arguments),e.restoreMarkerSettings(s)}haloPath(){let t=this.series.chart.polar,e=[];return this.plotY=this.plotLow,t&&_(this.plotLowX)&&(this.plotX=this.plotLowX),this.isInside&&(e=q.haloPath.apply(this,arguments)),this.plotY=this.plotHigh,t&&_(this.plotHighX)&&(this.plotX=this.plotHighX),this.isTopInside&&(e=e.concat(q.haloPath.apply(this,arguments))),e}isValid(){return _(this.low)&&_(this.high)}},{noop:K}=y(),{area:Z,area:{prototype:j},column:{prototype:$}}=P().seriesTypes,{addEvent:Q,defined:J,extend:tt,isArray:te,isNumber:ti,pick:ts,merge:to}=y();class ta extends Z{toYData(t){return[t.low,t.high]}highToXY(t){let e=this.chart,i=this.xAxis.postTranslate(t.rectPlotX||0,this.yAxis.len-(t.plotHigh||0));t.plotHighX=i.x-e.plotLeft,t.plotHigh=i.y-e.plotTop,t.plotLowX=t.plotX}getGraphPath(t){let e=[],i=[],s=j.getGraphPath,o=this.options,a=this.chart.polar,r=a&&!1!==o.connectEnds,n=o.connectNulls,l,h,p,d=o.step;for(l=(t=t||this.points).length;l--;){h=t[l];let s=a?{plotX:h.rectPlotX,plotY:h.yBottom,doCurve:!1}:{plotX:h.plotX,plotY:h.plotY,doCurve:!1};h.isNull||r||n||t[l+1]&&!t[l+1].isNull||i.push(s),p={polarPlotY:h.polarPlotY,rectPlotX:h.rectPlotX,yBottom:h.yBottom,plotX:ts(h.plotHighX,h.plotX),plotY:h.plotHigh,isNull:h.isNull},i.push(p),e.push(p),h.isNull||r||n||t[l-1]&&!t[l-1].isNull||i.push(s)}let c=s.call(this,t);d&&(!0===d&&(d="left"),o.step=({left:"right",center:"center",right:"left"})[d]);let u=s.call(this,e),g=s.call(this,i);o.step=d;let f=[].concat(c,u);return!this.chart.polar&&g[0]&&"M"===g[0][0]&&(g[0]=["L",g[0][1],g[0][2]]),this.graphPath=f,this.areaPath=c.concat(g),f.isArea=!0,f.xMap=c.xMap,this.areaPath.xMap=c.xMap,f}drawDataLabels(){let t,e,i,s,o;let a=this.points,r=a.length,n=[],l=this.options.dataLabels,h=this.chart.inverted;if(l){if(te(l)?(s=l[0]||{enabled:!1},o=l[1]||{enabled:!1}):((s=tt({},l)).x=l.xHigh,s.y=l.yHigh,(o=tt({},l)).x=l.xLow,o.y=l.yLow),s.enabled||this.hasDataLabels?.()){for(t=r;t--;)if(e=a[t]){let{plotHigh:o=0,plotLow:a=0}=e;i=s.inside?o<a:o>a,e.y=e.high,e._plotY=e.plotY,e.plotY=o,n[t]=e.dataLabel,e.dataLabel=e.dataLabelUpper,e.below=i,h?s.align||(s.align=i?"right":"left"):s.verticalAlign||(s.verticalAlign=i?"top":"bottom")}for(this.options.dataLabels=s,j.drawDataLabels&&j.drawDataLabels.apply(this,arguments),t=r;t--;)(e=a[t])&&(e.dataLabelUpper=e.dataLabel,e.dataLabel=n[t],delete e.dataLabels,e.y=e.low,e.plotY=e._plotY)}if(o.enabled||this.hasDataLabels?.()){for(t=r;t--;)if(e=a[t]){let{plotHigh:t=0,plotLow:s=0}=e;i=o.inside?t<s:t>s,e.below=!i,h?o.align||(o.align=i?"left":"right"):o.verticalAlign||(o.verticalAlign=i?"bottom":"top")}this.options.dataLabels=o,j.drawDataLabels&&j.drawDataLabels.apply(this,arguments)}if(s.enabled)for(t=r;t--;)(e=a[t])&&(e.dataLabels=[e.dataLabelUpper,e.dataLabel].filter(function(t){return!!t}));this.options.dataLabels=l}}alignDataLabel(){$.alignDataLabel.apply(this,arguments)}modifyMarkerSettings(){let t={marker:this.options.marker,symbol:this.symbol};if(this.options.lowMarker){let{options:{marker:t,lowMarker:e}}=this;this.options.marker=to(t,e),e.symbol&&(this.symbol=e.symbol)}return t}restoreMarkerSettings(t){this.options.marker=t.marker,this.symbol=t.symbol}drawPoints(){let t,e;let i=this.points.length,s=this.modifyMarkerSettings();for(j.drawPoints.apply(this,arguments),this.restoreMarkerSettings(s),t=0;t<i;)(e=this.points[t]).graphics=e.graphics||[],e.origProps={plotY:e.plotY,plotX:e.plotX,isInside:e.isInside,negative:e.negative,zone:e.zone,y:e.y},(e.graphic||e.graphics[0])&&(e.graphics[0]=e.graphic),e.graphic=e.graphics[1],e.plotY=e.plotHigh,J(e.plotHighX)&&(e.plotX=e.plotHighX),e.y=ts(e.high,e.origProps.y),e.negative=e.y<(this.options.threshold||0),this.zones.length&&(e.zone=e.getZone()),this.chart.polar||(e.isInside=e.isTopInside=void 0!==e.plotY&&e.plotY>=0&&e.plotY<=this.yAxis.len&&e.plotX>=0&&e.plotX<=this.xAxis.len),t++;for(j.drawPoints.apply(this,arguments),t=0;t<i;)(e=this.points[t]).graphics=e.graphics||[],(e.graphic||e.graphics[1])&&(e.graphics[1]=e.graphic),e.graphic=e.graphics[0],e.origProps&&(tt(e,e.origProps),delete e.origProps),t++}hasMarkerChanged(t,e){let i=t.lowMarker,s=e.lowMarker||{};return i&&(!1===i.enabled||s.symbol!==i.symbol||s.height!==i.height||s.width!==i.width)||super.hasMarkerChanged(t,e)}}ta.defaultOptions=to(Z.defaultOptions,{lineWidth:1,threshold:null,tooltip:{pointFormat:'<span style="color:{series.color}">●</span> {series.name}: <b>{point.low}</b> - <b>{point.high}</b><br/>'},trackByArea:!0,dataLabels:{align:void 0,verticalAlign:void 0,xLow:0,xHigh:0,yLow:0,yHigh:0}}),Q(ta,"afterTranslate",function(){"low,high"===this.pointArrayMap.join(",")&&this.points.forEach(t=>{let e=t.high,i=t.plotY;t.isNull?t.plotY=void 0:(t.plotLow=i,t.plotHigh=ti(e)?this.yAxis.translate(this.dataModify?this.dataModify.modifyValue(e):e,!1,!0,void 0,!0):void 0,this.dataModify&&(t.yBottom=t.plotHigh))})},{order:0}),Q(ta,"afterTranslate",function(){this.points.forEach(t=>{if(this.chart.polar)this.highToXY(t),t.plotLow=t.plotY,t.tooltipPos=[((t.plotHighX||0)+(t.plotLowX||0))/2,((t.plotHigh||0)+(t.plotLow||0))/2];else{let e=t.pos(!1,t.plotLow),i=t.pos(!1,t.plotHigh);e&&i&&(e[0]=(e[0]+i[0])/2,e[1]=(e[1]+i[1])/2),t.tooltipPos=e}})},{order:3}),tt(ta.prototype,{deferTranslatePolar:!0,pointArrayMap:["low","high"],pointClass:U,pointValKey:"low",setStackedPoints:K}),P().registerSeriesType("arearange",ta);let tr=ta,{spline:{prototype:tn}}=P().seriesTypes,{merge:tl,extend:th}=y();class tp extends tr{}tp.defaultOptions=tl(tr.defaultOptions),th(tp.prototype,{getPointSpline:tn.getPointSpline}),P().registerSeriesType("areasplinerange",tp);var td=f(448),tc=f.n(td);let{noop:tu}=y(),{crisp:tg,extend:tf,merge:tm,pick:tb,relativeLength:ty}=y();class tx extends tc(){pointAttribs(){return{}}getWhiskerPair(t,e,i,s,o){let a=o.whiskers.strokeWidth(),r=(i,s)=>{let o=ty(i,2*t)/2,r=tg(s,a);return[["M",tg(e-o),r],["L",tg(e+o),r]]};return[...r(i,o.highPlot),...r(s,o.lowPlot)]}translate(){let t=this.yAxis,e=this.pointArrayMap;super.translate.apply(this),this.points.forEach(function(i){e.forEach(function(e){null!==i[e]&&(i[e+"Plot"]=t.translate(i[e],0,1,0,1))}),i.plotHigh=i.highPlot})}drawPoints(){let t,e,i,s,o,a,r,n,l,h,p;let d=this.points,c=this.options,u=this.chart,g=u.renderer,f=!1!==this.doQuartiles,m=this.options.whiskerLength;for(let b of d){let d=(n=b.graphic)?"animate":"attr",y=b.shapeArgs,x={},P={},v={},M={},L=b.color||this.color,k=b.options.whiskerLength||m;if(void 0!==b.plotY){let w;l=y.width,p=(h=y.x)+l,t=f?b.q1Plot:b.lowPlot,e=f?b.q3Plot:b.lowPlot,i=b.highPlot,s=b.lowPlot,n||(b.graphic=n=g.g("point").add(this.group),b.stem=g.path().addClass("highcharts-boxplot-stem").add(n),m&&(b.whiskers=g.path().addClass("highcharts-boxplot-whisker").add(n)),f&&(b.box=g.path(r).addClass("highcharts-boxplot-box").add(n)),b.medianShape=g.path(a).addClass("highcharts-boxplot-median").add(n)),u.styledMode||(P.stroke=b.stemColor||c.stemColor||L,P["stroke-width"]=tb(b.stemWidth,c.stemWidth,c.lineWidth),P.dashstyle=b.stemDashStyle||c.stemDashStyle||c.dashStyle,b.stem.attr(P),k&&(v.stroke=b.whiskerColor||c.whiskerColor||L,v["stroke-width"]=tb(b.whiskerWidth,c.whiskerWidth,c.lineWidth),v.dashstyle=b.whiskerDashStyle||c.whiskerDashStyle||c.dashStyle,b.whiskers.attr(v)),f&&(x.fill=b.fillColor||c.fillColor||L,x.stroke=c.lineColor||L,x["stroke-width"]=c.lineWidth||0,x.dashstyle=b.boxDashStyle||c.boxDashStyle||c.dashStyle,b.box.attr(x)),M.stroke=b.medianColor||c.medianColor||L,M["stroke-width"]=tb(b.medianWidth,c.medianWidth,c.lineWidth),M.dashstyle=b.medianDashStyle||c.medianDashStyle||c.dashStyle,b.medianShape.attr(M));let A=tg((b.plotX||0)+(this.pointXOffset||0)+(this.barW||0)/2,b.stem.strokeWidth());if(w=[["M",A,e],["L",A,i],["M",A,t],["L",A,s]],b.stem[d]({d:w}),f){let i=b.box.strokeWidth();t=tg(t,i),e=tg(e,i),w=[["M",h=tg(h,i),e],["L",h,t],["L",p=tg(p,i),t],["L",p,e],["L",h,e],["Z"]],b.box[d]({d:w})}if(k){let t=l/2,e=this.getWhiskerPair(t,A,b.upperWhiskerLength??c.upperWhiskerLength??k,b.lowerWhiskerLength??c.lowerWhiskerLength??k,b);b.whiskers[d]({d:e})}w=[["M",h,o=tg(b.medianPlot,b.medianShape.strokeWidth())],["L",p,o]],b.medianShape[d]({d:w})}}}toYData(t){return[t.low,t.q1,t.median,t.q3,t.high]}}tx.defaultOptions=tm(tc().defaultOptions,{threshold:null,tooltip:{pointFormat:'<span style="color:{point.color}">●</span> <b>{series.name}</b><br/>Maximum: {point.high}<br/>Upper quartile: {point.q3}<br/>Median: {point.median}<br/>Lower quartile: {point.q1}<br/>Minimum: {point.low}<br/>'},whiskerLength:"50%",fillColor:"#ffffff",lineWidth:1,medianWidth:2,whiskerWidth:2}),tf(tx.prototype,{pointArrayMap:["low","q1","median","q3","high"],pointValKey:"high",drawDataLabels:tu,setStackedPoints:tu}),P().registerSeriesType("boxplot",tx);let tP=tx,tv={borderColor:void 0,borderWidth:2,className:void 0,color:void 0,connectorClassName:void 0,connectorColor:void 0,connectorDistance:60,connectorWidth:1,enabled:!1,labels:{className:void 0,allowOverlap:!1,format:"",formatter:void 0,align:"right",style:{fontSize:"0.9em",color:"#000000"},x:0,y:0},maxSize:60,minSize:10,legendIndex:0,ranges:{value:void 0,borderColor:void 0,color:void 0,connectorColor:void 0},sizeBy:"area",sizeByAbsoluteValue:!1,zIndex:1,zThreshold:0};var tM=f(620),tL=f.n(tM),tk=f(984),tw=f.n(tk);let{parse:tA}=tL(),{noop:tS}=y(),{arrayMax:tT,arrayMin:tC,isNumber:tN,merge:tX,pick:tY,stableSort:tI}=y(),tR=class{constructor(t,e){this.setState=tS,this.init(t,e)}init(t,e){this.options=t,this.visible=!0,this.chart=e.chart,this.legend=e}addToLegend(t){t.splice(this.options.legendIndex,0,this)}drawLegendSymbol(t){let e;let i=tY(t.options.itemDistance,20),s=this.legendItem||{},o=this.options,a=o.ranges,r=o.connectorDistance;if(!a||!a.length||!tN(a[0].value)){t.options.bubbleLegend.autoRanges=!0;return}tI(a,function(t,e){return e.value-t.value}),this.ranges=a,this.setOptions(),this.render();let n=this.getMaxLabelSize(),l=this.ranges[0].radius,h=2*l;e=(e=r-l+n.width)>0?e:0,this.maxLabel=n,this.movementX="left"===o.labels.align?e:0,s.labelWidth=h+e+i,s.labelHeight=h+n.height/2}setOptions(){let t=this.ranges,e=this.options,i=this.chart.series[e.seriesIndex],s=this.legend.baseline,o={zIndex:e.zIndex,"stroke-width":e.borderWidth},a={zIndex:e.zIndex,"stroke-width":e.connectorWidth},r={align:this.legend.options.rtl||"left"===e.labels.align?"right":"left",zIndex:e.zIndex},n=i.options.marker.fillOpacity,l=this.chart.styledMode;t.forEach(function(h,p){l||(o.stroke=tY(h.borderColor,e.borderColor,i.color),o.fill=tY(h.color,e.color,1!==n?tA(i.color).setOpacity(n).get("rgba"):i.color),a.stroke=tY(h.connectorColor,e.connectorColor,i.color)),t[p].radius=this.getRangeRadius(h.value),t[p]=tX(t[p],{center:t[0].radius-t[p].radius+s}),l||tX(!0,t[p],{bubbleAttribs:tX(o),connectorAttribs:tX(a),labelAttribs:r})},this)}getRangeRadius(t){let e=this.options,i=this.options.seriesIndex,s=this.chart.series[i],o=e.ranges[0].value,a=e.ranges[e.ranges.length-1].value,r=e.minSize,n=e.maxSize;return s.getRadius.call(this,a,o,r,n,t)}render(){let t=this.legendItem||{},e=this.chart.renderer,i=this.options.zThreshold;for(let s of(this.symbols||(this.symbols={connectors:[],bubbleItems:[],labels:[]}),t.symbol=e.g("bubble-legend"),t.label=e.g("bubble-legend-item").css(this.legend.itemStyle||{}),t.symbol.translateX=0,t.symbol.translateY=0,t.symbol.add(t.label),t.label.add(t.group),this.ranges))s.value>=i&&this.renderRange(s);this.hideOverlappingLabels()}renderRange(t){let e=this.ranges[0],i=this.legend,s=this.options,o=s.labels,a=this.chart,r=a.series[s.seriesIndex],n=a.renderer,l=this.symbols,h=l.labels,p=t.center,d=Math.abs(t.radius),c=s.connectorDistance||0,u=o.align,g=i.options.rtl,f=s.borderWidth,m=s.connectorWidth,b=e.radius||0,y=p-d-f/2+m/2,x=(y%1?1:.5)-(m%2?0:.5),P=n.styledMode,v=g||"left"===u?-c:c;"center"===u&&(v=0,s.connectorDistance=0,t.labelAttribs.align="center"),l.bubbleItems.push(n.circle(b,p+x,d).attr(P?{}:t.bubbleAttribs).addClass((P?"highcharts-color-"+r.colorIndex+" ":"")+"highcharts-bubble-legend-symbol "+(s.className||"")).add(this.legendItem.symbol)),l.connectors.push(n.path(n.crispLine([["M",b,y],["L",b+v,y]],s.connectorWidth)).attr(P?{}:t.connectorAttribs).addClass((P?"highcharts-color-"+this.options.seriesIndex+" ":"")+"highcharts-bubble-legend-connectors "+(s.connectorClassName||"")).add(this.legendItem.symbol));let M=n.text(this.formatLabel(t)).attr(P?{}:t.labelAttribs).css(P?{}:o.style).addClass("highcharts-bubble-legend-labels "+(s.labels.className||"")).add(this.legendItem.symbol),L={x:b+v+s.labels.x,y:y+s.labels.y+.4*M.getBBox().height};M.attr(L),h.push(M),M.placed=!0,M.alignAttr=L}getMaxLabelSize(){let t,e;return this.symbols.labels.forEach(function(i){e=i.getBBox(!0),t=t?e.width>t.width?e:t:e}),t||{}}formatLabel(t){let e=this.options,i=e.labels.formatter,s=e.labels.format,{numberFormatter:o}=this.chart;return s?tw().format(s,t,this.chart):i?i.call(t):o(t.value,1)}hideOverlappingLabels(){let t=this.chart,e=this.options.labels.allowOverlap,i=this.symbols;!e&&i&&(t.hideOverlappingLabels(i.labels),i.labels.forEach(function(t,e){t.newOpacity?t.newOpacity!==t.oldOpacity&&i.connectors[e].show():i.connectors[e].hide()}))}getRanges(){let t=this.legend.bubbleLegend,e=t.chart.series,i=t.options.ranges,s,o,a=Number.MAX_VALUE,r=-Number.MAX_VALUE;return e.forEach(function(t){t.isBubble&&!t.ignoreSeries&&(o=t.getColumn("z").filter(tN)).length&&(a=tY(t.options.zMin,Math.min(a,Math.max(tC(o),!1===t.options.displayNegative?t.options.zThreshold:-Number.MAX_VALUE))),r=tY(t.options.zMax,Math.max(r,tT(o))))}),s=a===r?[{value:r}]:[{value:a},{value:(a+r)/2},{value:r,autoRanges:!0}],i.length&&i[0].radius&&s.reverse(),s.forEach(function(t,e){i&&i[e]&&(s[e]=tX(i[e],t))}),s}predictBubbleSizes(){let t=this.chart,e=t.legend.options,i=e.floating,s="horizontal"===e.layout,o=s?t.legend.lastLineHeight:0,a=t.plotSizeX,r=t.plotSizeY,n=t.series[this.options.seriesIndex],l=n.getPxExtremes(),h=Math.ceil(l.minPxSize),p=Math.ceil(l.maxPxSize),d=Math.min(r,a),c,u=n.options.maxSize;return i||!/%$/.test(u)?c=p:(c=(d+o)*(u=parseFloat(u))/100/(u/100+1),(s&&r-c>=a||!s&&a-c>=r)&&(c=p)),[h,Math.ceil(c)]}updateRanges(t,e){let i=this.legend.options.bubbleLegend;i.minSize=t,i.maxSize=e,i.ranges=this.getRanges()}correctSizes(){let t=this.legend,e=this.chart.series[this.options.seriesIndex].getPxExtremes();Math.abs(Math.ceil(e.maxPxSize)-this.options.maxSize)>1&&(this.updateRanges(this.options.minSize,e.maxPxSize),t.render())}},{setOptions:tE}=y(),{composed:tz}=y(),{addEvent:tD,objectEach:tO,pushUnique:tH,wrap:tB}=y();function tW(t,e,i){let s,o,a;let r=this.legend,n=tF(this)>=0;r&&r.options.enabled&&r.bubbleLegend&&r.options.bubbleLegend.autoRanges&&n?(s=r.bubbleLegend.options,o=r.bubbleLegend.predictBubbleSizes(),r.bubbleLegend.updateRanges(o[0],o[1]),s.placed||(r.group.placed=!1,r.allItems.forEach(t=>{(a=t.legendItem||{}).group&&(a.group.translateY=void 0)})),r.render(),s.placed||(this.getMargins(),this.axes.forEach(t=>{t.setScale(),t.updateNames(),tO(t.ticks,function(t){t.isNew=!0,t.isNewLabel=!0})}),this.getMargins()),s.placed=!0,t.call(this,e,i),r.bubbleLegend.correctSizes(),t_(r,tG(r))):(t.call(this,e,i),r&&r.options.enabled&&r.bubbleLegend&&(r.render(),t_(r,tG(r))))}function tF(t){let e=t.series,i=0;for(;i<e.length;){if(e[i]&&e[i].isBubble&&e[i].visible&&e[i].dataTable.rowCount)return i;i++}return -1}function tG(t){let e=t.allItems,i=[],s=e.length,o,a,r,n=0,l=0;for(n=0;n<s;n++)if(a=e[n].legendItem||{},r=(e[n+1]||{}).legendItem||{},a.labelHeight&&(e[n].itemHeight=a.labelHeight),e[n]===e[s-1]||a.y!==r.y){for(i.push({height:0}),o=i[i.length-1];l<=n;l++)e[l].itemHeight>o.height&&(o.height=e[l].itemHeight);o.step=n}return i}function tq(t){let e=this.bubbleLegend,i=this.options,s=i.bubbleLegend,o=tF(this.chart);e&&e.ranges&&e.ranges.length&&(s.ranges.length&&(s.autoRanges=!!s.ranges[0].autoRanges),this.destroyItem(e)),o>=0&&i.enabled&&s.enabled&&(s.seriesIndex=o,this.bubbleLegend=new tR(s,this),this.bubbleLegend.addToLegend(t.allItems))}function tV(t){let e;if(t.defaultPrevented)return!1;let i=t.legendItem,s=this.chart,o=i.visible;this&&this.bubbleLegend&&(i.visible=!o,i.ignoreSeries=o,e=tF(s)>=0,this.bubbleLegend.visible!==e&&(this.update({bubbleLegend:{enabled:e}}),this.bubbleLegend.visible=e),i.visible=o)}function t_(t,e){let i=t.allItems,s=t.options.rtl,o,a,r,n,l=0;i.forEach((t,i)=>{(n=t.legendItem||{}).group&&(o=n.group.translateX||0,a=n.y||0,((r=t.movementX)||s&&t.ranges)&&(r=s?o-t.options.maxSize/2:o+r,n.group.attr({translateX:r})),i>e[l].step&&l++,n.group.attr({translateY:Math.round(a+e[l].height/2)}),n.y=a+e[l].height/2)})}let tU={compose:function(t,e){tH(tz,"Series.BubbleLegend")&&(tE({legend:{bubbleLegend:tv}}),tB(t.prototype,"drawChartBox",tW),tD(e,"afterGetAllItems",tq),tD(e,"itemClick",tV))}};var tK=f(260),tZ=f.n(tK);let{seriesTypes:{scatter:{prototype:{pointClass:tj}}}}=P(),{extend:t$}=y();class tQ extends tj{haloPath(t){let e=(t&&this.marker&&this.marker.radius||0)+t;if(this.series.chart.inverted){let t=this.pos()||[0,0],{xAxis:i,yAxis:s,chart:o}=this.series;return o.renderer.symbols.circle(i.len-t[1]-e,s.len-t[0]-e,2*e,2*e)}return tZ().prototype.haloPath.call(this,e)}}t$(tQ.prototype,{ttBelow:!1});let{parse:tJ}=tL(),{composed:t0,noop:t1}=y(),{series:t2,seriesTypes:{column:{prototype:t3},scatter:t5}}=P(),{addEvent:t8,arrayMax:t6,arrayMin:t4,clamp:t9,extend:t7,isNumber:et,merge:ee,pick:ei,pushUnique:es}=y();function eo(){let t=this.len,{coll:e,isXAxis:i,min:s}=this,o=(this.max||0)-(s||0),a=0,r=t,n=t/o,l;("xAxis"===e||"yAxis"===e)&&(this.series.forEach(t=>{if(t.bubblePadding&&t.reserveSpace()){this.allowZoomOutside=!0,l=!0;let e=t.getColumn(i?"x":"y");if(i&&((t.onPoint||t).getRadii(0,0,t),t.onPoint&&(t.radii=t.onPoint.radii)),o>0){let i=e.length;for(;i--;)if(et(e[i])&&this.dataMin<=e[i]&&e[i]<=this.max){let o=t.radii&&t.radii[i]||0;a=Math.min((e[i]-s)*n-o,a),r=Math.max((e[i]-s)*n+o,r)}}}}),l&&o>0&&!this.logarithmic&&(r-=t,n*=(t+Math.max(0,a)-Math.min(r,t))/t,[["min","userMin",a],["max","userMax",r]].forEach(t=>{void 0===ei(this.options[t[0]],this[t[1]])&&(this[t[0]]+=t[2]/n)})))}function ea(){let{ticks:t,tickPositions:e,dataMin:i=0,dataMax:s=0,categories:o}=this,a=this.options.type;if((o?.length||"category"===a)&&this.series.find(t=>t.bubblePadding)){let o=e.length;for(;o--;){let a=t[e[o]],r=a.pos||0;(r>s||r<i)&&a.label?.hide()}}}class er extends t5{static compose(t,e,i){tU.compose(e,i),es(t0,"Series.Bubble")&&(t8(t,"foundExtremes",eo),t8(t,"afterRender",ea))}animate(t){!t&&this.points.length<this.options.animationLimit&&this.points.forEach(function(t){let{graphic:e,plotX:i=0,plotY:s=0}=t;e&&e.width&&(this.hasRendered||e.attr({x:i,y:s,width:1,height:1}),e.animate(this.markerAttribs(t),this.options.animation))},this)}getRadii(){let t=this.getColumn("z"),e=this.getColumn("y"),i=[],s,o,a,r=this.chart.bubbleZExtremes,{minPxSize:n,maxPxSize:l}=this.getPxExtremes();if(!r){let t,e=Number.MAX_VALUE,i=-Number.MAX_VALUE;this.chart.series.forEach(s=>{if(s.bubblePadding&&s.reserveSpace()){let o=(s.onPoint||s).getZExtremes();o&&(e=Math.min(ei(e,o.zMin),o.zMin),i=Math.max(ei(i,o.zMax),o.zMax),t=!0)}}),t?(r={zMin:e,zMax:i},this.chart.bubbleZExtremes=r):r={zMin:0,zMax:0}}for(o=0,s=t.length;o<s;o++)a=t[o],i.push(this.getRadius(r.zMin,r.zMax,n,l,a,e&&e[o]));this.radii=i}getRadius(t,e,i,s,o,a){let r=this.options,n="width"!==r.sizeBy,l=r.zThreshold,h=e-t,p=.5;if(null===a||null===o)return null;if(et(o)){if(r.sizeByAbsoluteValue&&(o=Math.abs(o-l),e=h=Math.max(e-l,Math.abs(t-l)),t=0),o<t)return i/2-1;h>0&&(p=(o-t)/h)}return n&&p>=0&&(p=Math.sqrt(p)),Math.ceil(i+p*(s-i))/2}hasData(){return!!this.dataTable.rowCount}markerAttribs(t,e){let i=super.markerAttribs(t,e),{height:s=0,width:o=0}=i;return this.chart.inverted?t7(i,{x:(t.plotX||0)-o/2,y:(t.plotY||0)-s/2}):i}pointAttribs(t,e){let i=this.options.marker.fillOpacity,s=t2.prototype.pointAttribs.call(this,t,e);return 1!==i&&(s.fill=tJ(s.fill).setOpacity(i).get("rgba")),s}translate(){super.translate.call(this),this.getRadii(),this.translateBubble()}translateBubble(){let{data:t,options:e,radii:i}=this,{minPxSize:s}=this.getPxExtremes(),o=t.length;for(;o--;){let a=t[o],r=i?i[o]:0;"z"===this.zoneAxis&&(a.negative=(a.z||0)<(e.zThreshold||0)),et(r)&&r>=s/2?(a.marker=t7(a.marker,{radius:r,width:2*r,height:2*r}),a.dlBox={x:a.plotX-r,y:a.plotY-r,width:2*r,height:2*r}):(a.shapeArgs=a.plotY=a.dlBox=void 0,a.isInside=!1)}}getPxExtremes(){let t=Math.min(this.chart.plotWidth,this.chart.plotHeight),e=e=>{let i;return"string"==typeof e&&(i=/%$/.test(e),e=parseInt(e,10)),i?t*e/100:e},i=e(ei(this.options.minSize,8)),s=Math.max(e(ei(this.options.maxSize,"20%")),i);return{minPxSize:i,maxPxSize:s}}getZExtremes(){let t=this.options,e=this.getColumn("z").filter(et);if(e.length){let i=ei(t.zMin,t9(t4(e),!1===t.displayNegative?t.zThreshold||0:-Number.MAX_VALUE,Number.MAX_VALUE)),s=ei(t.zMax,t6(e));if(et(i)&&et(s))return{zMin:i,zMax:s}}}searchKDTree(t,e,i,s=t1,o=t1){return s=(t,e,i)=>{let s=t[i]||0,o=e[i]||0,a,r=!1;return s<0&&o<0?(a=s-(t.marker?.radius||0)>=o-(e.marker?.radius||0)?t:e,r=!0):a=s<o?t:e,[a,r]},o=(t,e,i)=>!i&&t>e||t<e,super.searchKDTree(t,e,i,s,o)}}er.defaultOptions=ee(t5.defaultOptions,{dataLabels:{formatter:function(){let{numberFormatter:t}=this.series.chart,{z:e}=this.point;return et(e)?t(e,-1):""},inside:!0,verticalAlign:"middle"},animationLimit:250,marker:{lineColor:null,lineWidth:1,fillOpacity:.5,radius:null,states:{hover:{radiusPlus:0}},symbol:"circle"},minSize:8,maxSize:"20%",softThreshold:!1,states:{hover:{halo:{size:5}}},tooltip:{pointFormat:"({point.x}, {point.y}), Size: {point.z}"},turboThreshold:0,zThreshold:0,zoneAxis:"z"}),t7(er.prototype,{alignDataLabel:t3.alignDataLabel,applyZones:t1,bubblePadding:!0,isBubble:!0,keysAffectYAxis:["y"],pointArrayMap:["y","z"],pointClass:tQ,parallelArrays:["x","y","z"],trackerGroups:["group","dataLabelsGroup"],specialGroup:"group",zoneAxis:"z"}),t8(er,"updatedData",t=>{delete t.target.chart.bubbleZExtremes}),t8(er,"remove",t=>{delete t.target.chart.bubbleZExtremes}),P().registerSeriesType("bubble",er);let{seriesTypes:{column:{prototype:{pointClass:{prototype:en}}},arearange:{prototype:{pointClass:el}}}}=P(),{extend:eh,isNumber:ep}=y();class ed extends el{isValid(){return ep(this.low)}}eh(ed.prototype,{setState:en.setState});let{noop:ec}=y(),{seriesTypes:{arearange:eu,column:eg,column:{prototype:ef}}}=P(),{addEvent:em,clamp:eb,extend:ey,isNumber:ex,merge:eP,pick:ev}=y();class eM extends eu{setOptions(){return eP(!0,arguments[0],{stacking:void 0}),eu.prototype.setOptions.apply(this,arguments)}translate(){return ef.translate.apply(this)}pointAttribs(){return ef.pointAttribs.apply(this,arguments)}translate3dPoints(){return ef.translate3dPoints.apply(this,arguments)}translate3dShapes(){return ef.translate3dShapes.apply(this,arguments)}afterColumnTranslate(){let t,e,i,s;let o=this.yAxis,a=this.xAxis,r=a.startAngleRad,n=this.chart,l=this.xAxis.isRadial,h=Math.max(n.chartWidth,n.chartHeight)+999;this.points.forEach(p=>{let d=p.shapeArgs||{},c=this.options.minPointLength,u=p.plotY,g=o.translate(p.high,0,1,0,1);if(ex(g)&&ex(u)){if(p.plotHigh=eb(g,-h,h),p.plotLow=eb(u,-h,h),s=p.plotHigh,Math.abs(t=ev(p.rectPlotY,p.plotY)-p.plotHigh)<c?(e=c-t,t+=e,s-=e/2):t<0&&(t*=-1,s-=t),l&&this.polar)i=p.barX+r,p.shapeType="arc",p.shapeArgs=this.polar.arc(s+t,s,i,i+p.pointWidth);else{d.height=t,d.y=s;let{x:e=0,width:i=0}=d;p.shapeArgs=eP(p.shapeArgs,this.crispCol(e,s,i,t)),p.tooltipPos=n.inverted?[o.len+o.pos-n.plotLeft-s-t/2,a.len+a.pos-n.plotTop-e-i/2,t]:[a.left-n.plotLeft+e+i/2,o.pos-n.plotTop+s+t/2,t]}}})}}eM.defaultOptions=eP(eg.defaultOptions,eu.defaultOptions,{borderRadius:{where:"all"},pointRange:null,legendSymbol:"rectangle",marker:null,states:{hover:{halo:!1}}}),em(eM,"afterColumnTranslate",function(){eM.prototype.afterColumnTranslate.apply(this)},{order:5}),ey(eM.prototype,{directTouch:!0,pointClass:ed,trackerGroups:["group","dataLabelsGroup"],adjustForMissingColumns:ef.adjustForMissingColumns,animate:ef.animate,crispCol:ef.crispCol,drawGraph:ec,drawPoints:ef.drawPoints,getSymbol:ec,drawTracker:ef.drawTracker,getColumnMetrics:ef.getColumnMetrics}),P().registerSeriesType("columnrange",eM);let{column:eL}=P().seriesTypes,{clamp:ek,merge:ew,pick:eA}=y();class eS extends eL{translate(){let t=this.chart,e=this.options,i=this.dense=this.closestPointRange*this.xAxis.transA<2,s=this.borderWidth=eA(e.borderWidth,i?0:1),o=this.yAxis,a=e.threshold,r=eA(e.minPointLength,5),n=this.getColumnMetrics(),l=n.width,h=this.pointXOffset=n.offset,p=this.translatedThreshold=o.getThreshold(a),d=this.barW=Math.max(l,1+2*s);for(let i of(t.inverted&&(p-=.5),e.pointPadding&&(d=Math.ceil(d)),super.translate(),this.points)){let s=eA(i.yBottom,p),c=999+Math.abs(s),u=ek(i.plotY,-c,o.len+c),g=d/2,f=Math.min(u,s),m=Math.max(u,s)-f,b=i.plotX+h,y,x,P,v,M,L,k,w,A,S,T;e.centerInCategory&&(b=this.adjustForMissingColumns(b,l,i,n)),i.barX=b,i.pointWidth=l,i.tooltipPos=t.inverted?[o.len+o.pos-t.plotLeft-u,this.xAxis.len-b-g,m]:[b+g,u+o.pos-t.plotTop,m],y=a+(i.total||i.y),"percent"===e.stacking&&(y=a+(i.y<0)?-100:100);let C=o.toPixels(y,!0);P=(x=t.plotHeight-C-(t.plotHeight-p))?g*(f-C)/x:0,v=x?g*(f+m-C)/x:0,L=b-P+g,k=b+P+g,w=b+v+g,A=b-v+g,S=f-r,T=f+m,i.y<0&&(S=f,T=f+m+r),t.inverted&&(M=o.width-f,x=C-(o.width-p),P=g*(C-M)/x,v=g*(C-(M-m))/x,k=(L=b+g+P)-2*P,w=b-v+g,A=b+v+g,S=f,T=f+m-r,i.y<0&&(T=f+m+r)),i.shapeType="path",i.shapeArgs={x:L,y:S,width:k-L,height:m,d:[["M",L,S],["L",k,S],["L",w,T],["L",A,T],["Z"]]}}}}eS.defaultOptions=ew(eL.defaultOptions,{}),P().registerSeriesType("columnpyramid",eS);let{arearange:eT}=P().seriesTypes,{addEvent:eC,merge:eN,extend:eX}=y();class eY extends tP{getColumnMetrics(){return this.linkedParent&&this.linkedParent.columnMetrics||tc().prototype.getColumnMetrics.call(this)}drawDataLabels(){let t=this.pointValKey;if(eT)for(let e of(eT.prototype.drawDataLabels.call(this),this.points))e.y=e[t]}toYData(t){return[t.low,t.high]}}eY.defaultOptions=eN(tP.defaultOptions,{color:"#000000",grouping:!1,linkedTo:":previous",tooltip:{pointFormat:'<span style="color:{point.color}">●</span> {series.name}: <b>{point.low}</b> - <b>{point.high}</b><br/>'},whiskerWidth:null}),eC(eY,"afterTranslate",function(){for(let t of this.points)t.plotLow=t.plotY},{order:0}),eX(eY.prototype,{pointArrayMap:["low","high"],pointValKey:"high",doQuartiles:!1}),P().registerSeriesType("errorbar",eY);let{series:{prototype:{pointClass:eI}}}=P(),{noop:eR}=y(),{series:eE,seriesTypes:{column:ez}}=P(),{clamp:eD,isNumber:eO,extend:eH,merge:eB,pick:eW,pInt:eF,defined:eG}=y();class eq extends eE{translate(){let t=this.yAxis,e=this.options,i=t.center;this.generatePoints(),this.points.forEach(s=>{let o=eB(e.dial,s.dial),a=eF(o.radius)*i[2]/200,r=eF(o.baseLength)*a/100,n=eF(o.rearLength)*a/100,l=o.baseWidth,h=o.topWidth,p=e.overshoot,d=t.startAngleRad+t.translate(s.y,void 0,void 0,void 0,!0);(eO(p)||!1===e.wrap)&&(p=eO(p)?p/180*Math.PI:0,d=eD(d,t.startAngleRad-p,t.endAngleRad+p)),d=180*d/Math.PI,s.shapeType="path";let c=o.path||[["M",-n,-l/2],["L",r,-l/2],["L",a,-h/2],["L",a,h/2],["L",r,l/2],["L",-n,l/2],["Z"]];s.shapeArgs={d:c,translateX:i[0],translateY:i[1],rotation:d},s.plotX=i[0],s.plotY=i[1],eG(s.y)&&t.max-t.min&&(s.percentage=(s.y-t.min)/(t.max-t.min)*100)})}drawPoints(){let t=this,e=t.chart,i=t.yAxis.center,s=t.pivot,o=t.options,a=o.pivot,r=e.renderer;t.points.forEach(i=>{let s=i.graphic,a=i.shapeArgs,n=a.d,l=eB(o.dial,i.dial);s?(s.animate(a),a.d=n):i.graphic=r[i.shapeType](a).addClass("highcharts-dial").add(t.group),e.styledMode||i.graphic[s?"animate":"attr"]({stroke:l.borderColor,"stroke-width":l.borderWidth,fill:l.backgroundColor})}),s?s.animate({translateX:i[0],translateY:i[1]}):a&&(t.pivot=r.circle(0,0,a.radius).attr({zIndex:2}).addClass("highcharts-pivot").translate(i[0],i[1]).add(t.group),e.styledMode||t.pivot.attr({fill:a.backgroundColor,stroke:a.borderColor,"stroke-width":a.borderWidth}))}animate(t){let e=this;t||e.points.forEach(t=>{let i=t.graphic;i&&(i.attr({rotation:180*e.yAxis.startAngleRad/Math.PI}),i.animate({rotation:t.shapeArgs.rotation},e.options.animation))})}render(){this.group=this.plotGroup("group","series",this.visible?"inherit":"hidden",this.options.zIndex,this.chart.seriesGroup),eE.prototype.render.call(this),this.group.clip(this.chart.clipRect)}setData(t,e){eE.prototype.setData.call(this,t,!1),this.processData(),this.generatePoints(),eW(e,!0)&&this.chart.redraw()}hasData(){return!!this.points.length}}eq.defaultOptions=eB(eE.defaultOptions,{dataLabels:{borderColor:"#cccccc",borderRadius:3,borderWidth:1,crop:!1,defer:!1,enabled:!0,verticalAlign:"top",y:15,zIndex:2},dial:{backgroundColor:"#000000",baseLength:"70%",baseWidth:3,borderColor:"#cccccc",borderWidth:0,radius:"80%",rearLength:"10%",topWidth:1},pivot:{radius:5,borderWidth:0,borderColor:"#cccccc",backgroundColor:"#000000"},tooltip:{headerFormat:""},showInLegend:!1}),eH(eq.prototype,{angular:!0,directTouch:!0,drawGraph:eR,drawTracker:ez.prototype.drawTracker,fixedBox:!0,forceDL:!0,noSharedTooltip:!0,pointClass:class extends eI{setState(t){this.state=t}},trackerGroups:["group","dataLabelsGroup"]}),P().registerSeriesType("gauge",eq);let{composed:eV}=y(),{addEvent:e_,pushUnique:eU}=y();function eK(){let t,e,i;let s=this;s.container&&(t=e_(s.container,"mousedown",t=>{let o=s.hoverPoint;o&&o.series&&o.series.hasDraggableNodes&&o.series.options.draggable&&(o.series.onMouseDown(o,t),e=e_(s.container,"mousemove",t=>o&&o.series&&o.series.onMouseMove(o,t)),i=e_(s.container.ownerDocument,"mouseup",t=>(e(),i(),o&&o.series&&o.series.onMouseUp(o,t))))})),e_(s,"destroy",function(){t()})}let eZ={compose:function(t){eU(eV,"DragNodes")&&e_(t,"load",eK)},onMouseDown:function(t,e){let i=this.chart.pointer?.normalize(e)||e;t.fixedPosition={chartX:i.chartX,chartY:i.chartY,plotX:t.plotX,plotY:t.plotY},t.inDragMode=!0},onMouseMove:function(t,e){if(t.fixedPosition&&t.inDragMode){let i,s;let o=this.chart,a=o.pointer?.normalize(e)||e,r=t.fixedPosition.chartX-a.chartX,n=t.fixedPosition.chartY-a.chartY,l=o.graphLayoutsLookup;(Math.abs(r)>5||Math.abs(n)>5)&&(i=t.fixedPosition.plotX-r,s=t.fixedPosition.plotY-n,o.isInsidePlot(i,s)&&(t.plotX=i,t.plotY=s,t.hasDragged=!0,this.redrawHalo(t),l.forEach(t=>{t.restartSimulation()})))}},onMouseUp:function(t){t.fixedPosition&&(t.hasDragged&&(this.layout.enableSimulation?this.layout.start():this.chart.redraw()),t.inDragMode=t.hasDragged=!1,this.options.fixedDraggable||delete t.fixedPosition)},redrawHalo:function(t){t&&this.halo&&this.halo.attr({d:t.haloPath(this.options.states.hover.halo.size)})}},{setAnimation:ej}=y(),{composed:e$}=y(),{addEvent:eQ,pushUnique:eJ}=y();function e0(){this.graphLayoutsLookup&&(this.graphLayoutsLookup.forEach(t=>{t.updateSimulation()}),this.redraw())}function e1(){this.graphLayoutsLookup&&(this.graphLayoutsLookup.forEach(t=>{t.updateSimulation(!1)}),this.redraw())}function e2(){this.graphLayoutsLookup&&this.graphLayoutsLookup.forEach(t=>{t.stop()})}function e3(){let t,e=!1,i=i=>{i.maxIterations--&&isFinite(i.temperature)&&!i.isStable()&&!i.enableSimulation&&(i.beforeStep&&i.beforeStep(),i.step(),t=!1,e=!0)};if(this.graphLayoutsLookup){for(ej(!1,this),this.graphLayoutsLookup.forEach(t=>t.start());!t;)t=!0,this.graphLayoutsLookup.forEach(i);e&&this.series.forEach(t=>{t&&t.layout&&t.render()})}}let e5={compose:function(t){eJ(e$,"GraphLayout")&&(eQ(t,"afterPrint",e0),eQ(t,"beforePrint",e1),eQ(t,"predraw",e2),eQ(t,"render",e3))},integrations:{},layouts:{}};var e8=f(960),e6=f.n(e8);let{seriesTypes:{bubble:{prototype:{pointClass:e4}}}}=P(),e9=class extends e4{destroy(){return this.series?.layout&&this.series.layout.removeElementFromCollection(this,this.series.layout.nodes),tZ().prototype.destroy.apply(this,arguments)}firePointEvent(){let t=this.series.options;if(this.isParentNode&&t.parentNode){let e=t.allowPointSelect;t.allowPointSelect=t.parentNode.allowPointSelect,tZ().prototype.firePointEvent.apply(this,arguments),t.allowPointSelect=e}else tZ().prototype.firePointEvent.apply(this,arguments)}select(){let t=this.series.chart;this.isParentNode?(t.getSelectedPoints=t.getSelectedParentNodes,tZ().prototype.select.apply(this,arguments),t.getSelectedPoints=e6().prototype.getSelectedPoints):tZ().prototype.select.apply(this,arguments)}},{isNumber:e7}=y(),it={attractive:function(t,e,i){let s=t.getMass(),o=-i.x*e*this.diffTemperature,a=-i.y*e*this.diffTemperature;t.fromNode.fixedPosition||(t.fromNode.plotX-=o*s.fromNode/t.fromNode.degree,t.fromNode.plotY-=a*s.fromNode/t.fromNode.degree),t.toNode.fixedPosition||(t.toNode.plotX+=o*s.toNode/t.toNode.degree,t.toNode.plotY+=a*s.toNode/t.toNode.degree)},attractiveForceFunction:function(t,e){return(e-t)/t},barycenter:function(){let t=this.options.gravitationalConstant||0,e=(this.barycenter.xFactor-(this.box.left+this.box.width)/2)*t,i=(this.barycenter.yFactor-(this.box.top+this.box.height)/2)*t;this.nodes.forEach(function(t){t.fixedPosition||(t.plotX-=e/t.mass/t.degree,t.plotY-=i/t.mass/t.degree)})},getK:function(t){return Math.pow(t.box.width*t.box.height/t.nodes.length,.5)},integrate:function(t,e){let i=-t.options.friction,s=t.options.maxSpeed,o=e.prevX,a=e.prevY,r=(e.plotX+e.dispX-o)*i,n=(e.plotY+e.dispY-a)*i,l=Math.abs,h=l(r)/(r||1),p=l(n)/(n||1),d=h*Math.min(s,Math.abs(r)),c=p*Math.min(s,Math.abs(n));e.prevX=e.plotX+e.dispX,e.prevY=e.plotY+e.dispY,e.plotX+=d,e.plotY+=c,e.temperature=t.vectorLength({x:d,y:c})},repulsive:function(t,e,i){let s=e*this.diffTemperature/t.mass/t.degree;t.fixedPosition||(t.plotX+=i.x*s,t.plotY+=i.y*s)},repulsiveForceFunction:function(t,e){return(e-t)/t*(e>t?1:0)}},{noop:ie}=y(),ii={barycenter:function(){let t,e;let i=this.options.gravitationalConstant,s=this.box,o=this.nodes;for(let a of o)this.options.splitSeries&&!a.isParentNode?(t=a.series.parentNode.plotX,e=a.series.parentNode.plotY):(t=s.width/2,e=s.height/2),a.fixedPosition||(a.plotX-=(a.plotX-t)*i/(a.mass*Math.sqrt(o.length)),a.plotY-=(a.plotY-e)*i/(a.mass*Math.sqrt(o.length)))},getK:ie,integrate:it.integrate,repulsive:function(t,e,i,s){let o=e*this.diffTemperature/t.mass/t.degree,a=i.x*o,r=i.y*o;t.fixedPosition||(t.plotX+=a,t.plotY+=r),s.fixedPosition||(s.plotX-=a,s.plotY-=r)},repulsiveForceFunction:function(t,e,i,s){return Math.min(t,(i.marker.radius+s.marker.radius)/2)}},is={attractive:function(t,e,i,s){let o=t.getMass(),a=i.x/s*e,r=i.y/s*e;t.fromNode.fixedPosition||(t.fromNode.dispX-=a*o.fromNode/t.fromNode.degree,t.fromNode.dispY-=r*o.fromNode/t.fromNode.degree),t.toNode.fixedPosition||(t.toNode.dispX+=a*o.toNode/t.toNode.degree,t.toNode.dispY+=r*o.toNode/t.toNode.degree)},attractiveForceFunction:function(t,e){return t*t/e},barycenter:function(){let t=this.options.gravitationalConstant,e=this.barycenter.xFactor,i=this.barycenter.yFactor;this.nodes.forEach(function(s){if(!s.fixedPosition){let o=s.getDegree(),a=o*(1+o/2);s.dispX+=(e-s.plotX)*t*a/s.degree,s.dispY+=(i-s.plotY)*t*a/s.degree}})},getK:function(t){return Math.pow(t.box.width*t.box.height/t.nodes.length,.3)},integrate:function(t,e){e.dispX+=e.dispX*t.options.friction,e.dispY+=e.dispY*t.options.friction;let i=e.temperature=t.vectorLength({x:e.dispX,y:e.dispY});0!==i&&(e.plotX+=e.dispX/i*Math.min(Math.abs(e.dispX),t.temperature),e.plotY+=e.dispY/i*Math.min(Math.abs(e.dispY),t.temperature))},repulsive:function(t,e,i,s){t.dispX+=i.x/s*e/t.degree,t.dispY+=i.y/s*e/t.degree},repulsiveForceFunction:function(t,e){return e*e/t}};class io{constructor(t){this.body=!1,this.isEmpty=!1,this.isInternal=!1,this.nodes=[],this.box=t,this.boxSize=Math.min(t.width,t.height)}divideBox(){let t=this.box.width/2,e=this.box.height/2;this.nodes[0]=new io({left:this.box.left,top:this.box.top,width:t,height:e}),this.nodes[1]=new io({left:this.box.left+t,top:this.box.top,width:t,height:e}),this.nodes[2]=new io({left:this.box.left+t,top:this.box.top+e,width:t,height:e}),this.nodes[3]=new io({left:this.box.left,top:this.box.top+e,width:t,height:e})}getBoxPosition(t){let e=t.plotX<this.box.left+this.box.width/2,i=t.plotY<this.box.top+this.box.height/2;return e?i?0:3:i?1:2}insert(t,e){let i;this.isInternal?this.nodes[this.getBoxPosition(t)].insert(t,e-1):(this.isEmpty=!1,this.body?e?(this.isInternal=!0,this.divideBox(),!0!==this.body&&(this.nodes[this.getBoxPosition(this.body)].insert(this.body,e-1),this.body=!0),this.nodes[this.getBoxPosition(t)].insert(t,e-1)):((i=new io({top:t.plotX||NaN,left:t.plotY||NaN,width:.1,height:.1})).body=t,i.isInternal=!1,this.nodes.push(i)):(this.isInternal=!1,this.body=t))}updateMassAndCenter(){let t=0,e=0,i=0;if(this.isInternal){for(let s of this.nodes)s.isEmpty||(t+=s.mass,e+=s.plotX*s.mass,i+=s.plotY*s.mass);e/=t,i/=t}else this.body&&(t=this.body.mass,e=this.body.plotX,i=this.body.plotY);this.mass=t,this.plotX=e,this.plotY=i}}let ia=class{constructor(t,e,i,s){this.box={left:t,top:e,width:i,height:s},this.maxDepth=25,this.root=new io(this.box),this.root.isInternal=!0,this.root.isRoot=!0,this.root.divideBox()}calculateMassAndCenter(){this.visitNodeRecursive(null,null,function(t){t.updateMassAndCenter()})}insertNodes(t){for(let e of t)this.root.insert(e,this.maxDepth)}visitNodeRecursive(t,e,i){let s;if(t||(t=this.root),t===this.root&&e&&(s=e(t)),!1!==s){for(let o of t.nodes){if(o.isInternal){if(e&&(s=e(o)),!1===s)continue;this.visitNodeRecursive(o,e,i)}else o.body&&e&&e(o.body);i&&i(o)}t===this.root&&i&&i(t)}}},{win:ir}=y(),{clamp:il,defined:ih,isFunction:ip,fireEvent:id,pick:ic}=y();class iu{constructor(){this.box={},this.currentStep=0,this.initialRendering=!0,this.links=[],this.nodes=[],this.series=[],this.simulation=!1}static compose(t){e5.compose(t),e5.integrations.euler=is,e5.integrations.verlet=it,e5.layouts["reingold-fruchterman"]=iu}init(t){this.options=t,this.nodes=[],this.links=[],this.series=[],this.box={x:0,y:0,width:0,height:0},this.setInitialRendering(!0),this.integration=e5.integrations[t.integration],this.enableSimulation=t.enableSimulation,this.attractiveForce=ic(t.attractiveForce,this.integration.attractiveForceFunction),this.repulsiveForce=ic(t.repulsiveForce,this.integration.repulsiveForceFunction),this.approximation=t.approximation}updateSimulation(t){this.enableSimulation=ic(t,this.options.enableSimulation)}start(){let t=this.series,e=this.options;this.currentStep=0,this.forces=t[0]&&t[0].forces||[],this.chart=t[0]&&t[0].chart,this.initialRendering&&(this.initPositions(),t.forEach(function(t){t.finishedAnimating=!0,t.render()})),this.setK(),this.resetSimulation(e),this.enableSimulation&&this.step()}step(){let t=this.series;for(let t of(this.currentStep++,"barnes-hut"===this.approximation&&(this.createQuadTree(),this.quadTree.calculateMassAndCenter()),this.forces||[]))this[t+"Forces"](this.temperature);if(this.applyLimits(),this.temperature=this.coolDown(this.startTemperature,this.diffTemperature,this.currentStep),this.prevSystemTemperature=this.systemTemperature,this.systemTemperature=this.getSystemTemperature(),this.enableSimulation){for(let e of t)e.chart&&e.render();this.maxIterations--&&isFinite(this.temperature)&&!this.isStable()?(this.simulation&&ir.cancelAnimationFrame(this.simulation),this.simulation=ir.requestAnimationFrame(()=>this.step())):(this.simulation=!1,this.series.forEach(t=>{id(t,"afterSimulation")}))}}stop(){this.simulation&&ir.cancelAnimationFrame(this.simulation)}setArea(t,e,i,s){this.box={left:t,top:e,width:i,height:s}}setK(){this.k=this.options.linkLength||this.integration.getK(this)}addElementsToCollection(t,e){for(let i of t)-1===e.indexOf(i)&&e.push(i)}removeElementFromCollection(t,e){let i=e.indexOf(t);-1!==i&&e.splice(i,1)}clear(){this.nodes.length=0,this.links.length=0,this.series.length=0,this.resetSimulation()}resetSimulation(){this.forcedStop=!1,this.systemTemperature=0,this.setMaxIterations(),this.setTemperature(),this.setDiffTemperature()}restartSimulation(){this.simulation?this.resetSimulation():(this.setInitialRendering(!1),this.enableSimulation?this.start():this.setMaxIterations(1),this.chart&&this.chart.redraw(),this.setInitialRendering(!0))}setMaxIterations(t){this.maxIterations=ic(t,this.options.maxIterations)}setTemperature(){this.temperature=this.startTemperature=Math.sqrt(this.nodes.length)}setDiffTemperature(){this.diffTemperature=this.startTemperature/(this.options.maxIterations+1)}setInitialRendering(t){this.initialRendering=t}createQuadTree(){this.quadTree=new ia(this.box.left,this.box.top,this.box.width,this.box.height),this.quadTree.insertNodes(this.nodes)}initPositions(){let t=this.options.initialPositions;if(ip(t))for(let e of(t.call(this),this.nodes))ih(e.prevX)||(e.prevX=e.plotX),ih(e.prevY)||(e.prevY=e.plotY),e.dispX=0,e.dispY=0;else"circle"===t?this.setCircularPositions():this.setRandomPositions()}setCircularPositions(){let t;let e=this.box,i=this.nodes,s=2*Math.PI/(i.length+1),o=i.filter(function(t){return 0===t.linksTo.length}),a={},r=this.options.initialPositionRadius,n=t=>{for(let e of t.linksFrom||[])a[e.toNode.id]||(a[e.toNode.id]=!0,l.push(e.toNode),n(e.toNode))},l=[];for(let t of o)l.push(t),n(t);if(l.length)for(let t of i)-1===l.indexOf(t)&&l.push(t);else l=i;for(let i=0,o=l.length;i<o;++i)(t=l[i]).plotX=t.prevX=ic(t.plotX,e.width/2+r*Math.cos(i*s)),t.plotY=t.prevY=ic(t.plotY,e.height/2+r*Math.sin(i*s)),t.dispX=0,t.dispY=0}setRandomPositions(){let t;let e=this.box,i=this.nodes,s=i.length+1,o=t=>{let e=t*t/Math.PI;return e-Math.floor(e)};for(let a=0,r=i.length;a<r;++a)(t=i[a]).plotX=t.prevX=ic(t.plotX,e.width*o(a)),t.plotY=t.prevY=ic(t.plotY,e.height*o(s+a)),t.dispX=0,t.dispY=0}force(t,...e){this.integration[t].apply(this,e)}barycenterForces(){this.getBarycenter(),this.force("barycenter")}getBarycenter(){let t=0,e=0,i=0;for(let s of this.nodes)e+=s.plotX*s.mass,i+=s.plotY*s.mass,t+=s.mass;return this.barycenter={x:e,y:i,xFactor:e/t,yFactor:i/t},this.barycenter}barnesHutApproximation(t,e){let i,s;let o=this.getDistXY(t,e),a=this.vectorLength(o);return t!==e&&0!==a&&(e.isInternal?e.boxSize/a<this.options.theta&&0!==a?(s=this.repulsiveForce(a,this.k),this.force("repulsive",t,s*e.mass,o,a),i=!1):i=!0:(s=this.repulsiveForce(a,this.k),this.force("repulsive",t,s*e.mass,o,a))),i}repulsiveForces(){if("barnes-hut"===this.approximation)for(let t of this.nodes)this.quadTree.visitNodeRecursive(null,e=>this.barnesHutApproximation(t,e));else{let t,e,i;for(let s of this.nodes)for(let o of this.nodes)s===o||s.fixedPosition||(i=this.getDistXY(s,o),0!==(e=this.vectorLength(i))&&(t=this.repulsiveForce(e,this.k),this.force("repulsive",s,t*o.mass,i,e)))}}attractiveForces(){let t,e,i;for(let s of this.links)s.fromNode&&s.toNode&&(t=this.getDistXY(s.fromNode,s.toNode),0!==(e=this.vectorLength(t))&&(i=this.attractiveForce(e,this.k),this.force("attractive",s,i,t,e)))}applyLimits(){for(let t of this.nodes)t.fixedPosition||(this.integration.integrate(this,t),this.applyLimitBox(t,this.box),t.dispX=0,t.dispY=0)}applyLimitBox(t,e){let i=t.radius;t.plotX=il(t.plotX,e.left+i,e.width-i),t.plotY=il(t.plotY,e.top+i,e.height-i)}coolDown(t,e,i){return t-e*i}isStable(){return 1e-5>Math.abs(this.systemTemperature-this.prevSystemTemperature)||this.temperature<=0}getSystemTemperature(){let t=0;for(let e of this.nodes)t+=e.temperature;return t}vectorLength(t){return Math.sqrt(t.x*t.x+t.y*t.y)}getDistR(t,e){let i=this.getDistXY(t,e);return this.vectorLength(i)}getDistXY(t,e){let i=t.plotX-e.plotX,s=t.plotY-e.plotY;return{x:i,y:s,absX:Math.abs(i),absY:Math.abs(s)}}}let ig=iu,{addEvent:im,pick:ib}=y();function iy(){let t=this.series,e=[];return t.forEach(t=>{t.parentNode&&t.parentNode.selected&&e.push(t.parentNode)}),e}function ix(){this.allDataPoints&&delete this.allDataPoints}class iP extends ig{constructor(){super(...arguments),this.index=NaN,this.nodes=[],this.series=[]}static compose(t){ig.compose(t),e5.integrations.packedbubble=ii,e5.layouts.packedbubble=iP;let e=t.prototype;e.getSelectedParentNodes||(im(t,"beforeRedraw",ix),e.getSelectedParentNodes=iy)}beforeStep(){this.options.marker&&this.series.forEach(t=>{t&&t.calculateParentRadius()})}isStable(){let t=Math.abs(this.prevSystemTemperature-this.systemTemperature);return 1>Math.abs(10*this.systemTemperature/Math.sqrt(this.nodes.length))&&t<1e-5||this.temperature<=0}setCircularPositions(){let t=this.box,e=this.nodes,i=2*Math.PI/(e.length+1),s=this.options.initialPositionRadius,o,a,r=0;for(let n of e)this.options.splitSeries&&!n.isParentNode?(o=n.series.parentNode.plotX,a=n.series.parentNode.plotY):(o=t.width/2,a=t.height/2),n.plotX=n.prevX=ib(n.plotX,o+s*Math.cos(n.index||r*i)),n.plotY=n.prevY=ib(n.plotY,a+s*Math.sin(n.index||r*i)),n.dispX=0,n.dispY=0,r++}repulsiveForces(){let t,e,i;let s=this,o=s.options.bubblePadding,a=s.nodes;a.forEach(r=>{r.degree=r.mass,r.neighbours=0,a.forEach(a=>{t=0,r!==a&&!r.fixedPosition&&(s.options.seriesInteraction||r.series===a.series)&&(i=s.getDistXY(r,a),(e=s.vectorLength(i)-(r.marker.radius+a.marker.radius+o))<0&&(r.degree+=.01,r.neighbours++,t=s.repulsiveForce(-e/Math.sqrt(r.neighbours),s.k,r,a)),s.force("repulsive",r,t*a.mass,i,a,e))})})}applyLimitBox(t,e){let i,s;this.options.splitSeries&&!t.isParentNode&&this.options.parentNodeLimit&&(i=this.getDistXY(t,t.series.parentNode),(s=t.series.parentNodeRadius-t.marker.radius-this.vectorLength(i))<0&&s>-2*t.marker.radius&&(t.plotX-=.01*i.x,t.plotY-=.01*i.y)),super.applyLimitBox(t,e)}}e5.layouts.packedbubble=iP;let{merge:iv,syncTimeout:iM}=y(),{animObject:iL}=y();var ik=f(28),iw=f.n(ik);let{deg2rad:iA}=y(),{addEvent:iS,merge:iT,uniqueKey:iC,defined:iN,extend:iX}=y();function iY(t,e){e=iT(!0,{enabled:!0,attributes:{dy:-5,startOffset:"50%",textAnchor:"middle"}},e);let i=this.renderer.url,s=this.text||this,o=s.textPath,{attributes:a,enabled:r}=e;if(t=t||o&&o.path,o&&o.undo(),t&&r){let e=iS(s,"afterModifyTree",e=>{if(t&&r){let o=t.attr("id");o||t.attr("id",o=iC());let r={x:0,y:0};iN(a.dx)&&(r.dx=a.dx,delete a.dx),iN(a.dy)&&(r.dy=a.dy,delete a.dy),s.attr(r),this.attr({transform:""}),this.box&&(this.box=this.box.destroy());let n=e.nodes.slice(0);e.nodes.length=0,e.nodes[0]={tagName:"textPath",attributes:iX(a,{"text-anchor":a.textAnchor,href:`${i}#${o}`}),children:n}}});s.textPath={path:t,undo:e}}else s.attr({dx:0,dy:0}),delete s.textPath;return this.added&&(s.textCache="",this.renderer.buildText(s)),this}function iI(t){let e=t.bBox,i=this.element?.querySelector("textPath");if(i){let t=[],{b:s,h:o}=this.renderer.fontMetrics(this.element),a=o-s,r=RegExp('(<tspan>|<tspan(?!\\sclass="highcharts-br")[^>]*>|<\\/tspan>)',"g"),n=i.innerHTML.replace(r,"").split(/<tspan class="highcharts-br"[^>]*>/),l=n.length,h=(t,e)=>{let{x:o,y:r}=e,n=(i.getRotationOfChar(t)-90)*iA,l=Math.cos(n),h=Math.sin(n);return[[o-a*l,r-a*h],[o+s*l,r+s*h]]};for(let e=0,s=0;s<l;s++){let o=n[s].length;for(let a=0;a<o;a+=5)try{let o=e+a+s,[r,n]=h(o,i.getStartPositionOfChar(o));0===a?(t.push(n),t.push(r)):(0===s&&t.unshift(n),s===l-1&&t.push(r))}catch(t){break}e+=o-1;try{let o=e+s,a=i.getEndPositionOfChar(o),[r,n]=h(o,a);t.unshift(n),t.unshift(r)}catch(t){break}}t.length&&t.push(t[0].slice()),e.polygon=t}return e}function iR(t){let e=t.labelOptions,i=t.point,s=e[i.formatPrefix+"TextPath"]||e.textPath;s&&!e.useHTML&&(this.setTextPath(i.getDataLabelPath?.(this)||i.graphic,s),i.dataLabelPath&&!s.enabled&&(i.dataLabelPath=i.dataLabelPath.destroy()))}let{parse:iE}=tL(),{noop:iz}=y(),{series:{prototype:iD},seriesTypes:{bubble:iO}}=P(),{initDataLabels:iH,initDataLabelsDefer:iB}={initDataLabels:function(){let t=this.options.dataLabels;if(!this.dataLabelsGroup){let e=this.initDataLabelsGroup();return!this.chart.styledMode&&t?.style&&e.css(t.style),e.attr({opacity:0}),this.visible&&e.show(),e}return this.dataLabelsGroup.attr(iv({opacity:1},this.getPlotBox("data-labels"))),this.dataLabelsGroup},initDataLabelsDefer:function(){let t=this.options.dataLabels;t?.defer&&this.options.layoutAlgorithm?.enableSimulation?iM(()=>{this.deferDataLabels=!1},t?iL(t.animation).defer:0):this.deferDataLabels=!1}},{addEvent:iW,clamp:iF,defined:iG,extend:iq,fireEvent:iV,isArray:i_,isNumber:iU,merge:iK,pick:iZ}=y();({compose:function(t){iS(t,"afterGetBBox",iI),iS(t,"beforeAddingDataLabel",iR);let e=t.prototype;e.setTextPath||(e.setTextPath=iY)}}).compose(iw());class ij extends iO{constructor(){super(...arguments),this.parentNodeMass=0,this.deferDataLabels=!0}static compose(t,e,i){iO.compose(t,e,i),eZ.compose(e),iP.compose(e)}accumulateAllPoints(){let t=this.chart,e=[];for(let i of t.series)if(i.is("packedbubble")&&i.reserveSpace()){let t=i.getColumn("value");for(let s=0;s<t.length;s++)e.push([null,null,t[s],i.index,s,{id:s,marker:{radius:0}}])}return e}addLayout(){let t=this.options.layoutAlgorithm=this.options.layoutAlgorithm||{},e=t.type||"packedbubble",i=this.chart.options.chart,s=this.chart.graphLayoutsStorage,o=this.chart.graphLayoutsLookup,a;s||(this.chart.graphLayoutsStorage=s={},this.chart.graphLayoutsLookup=o=[]),(a=s[e])||(t.enableSimulation=iG(i.forExport)?!i.forExport:t.enableSimulation,s[e]=a=new e5.layouts[e],a.init(t),o.splice(a.index,0,a)),this.layout=a,this.points.forEach(t=>{t.mass=2,t.degree=1,t.collisionNmb=1}),a.setArea(0,0,this.chart.plotWidth,this.chart.plotHeight),a.addElementsToCollection([this],a.series),a.addElementsToCollection(this.points,a.nodes)}addSeriesLayout(){let t=this.options.layoutAlgorithm=this.options.layoutAlgorithm||{},e=t.type||"packedbubble",i=this.chart.graphLayoutsStorage,s=this.chart.graphLayoutsLookup,o=iK(t,t.parentNodeOptions,{enableSimulation:this.layout.options.enableSimulation}),a=i[e+"-series"];a||(i[e+"-series"]=a=new e5.layouts[e],a.init(o),s.splice(a.index,0,a)),this.parentNodeLayout=a,this.createParentNodes()}calculateParentRadius(){let t=this.seriesBox();this.parentNodeRadius=iF(Math.sqrt(2*this.parentNodeMass/Math.PI)+20,20,t?Math.max(Math.sqrt(Math.pow(t.width,2)+Math.pow(t.height,2))/2+20,20):Math.sqrt(2*this.parentNodeMass/Math.PI)+20),this.parentNode&&(this.parentNode.marker.radius=this.parentNode.radius=this.parentNodeRadius)}calculateZExtremes(){let t=this.chart.series,e=this.options.zMin,i=this.options.zMax,s=1/0,o=-1/0;return e&&i?[e,i]:(t.forEach(t=>{t.getColumn("value").forEach(t=>{iG(t)&&(t>o&&(o=t),t<s&&(s=t))})}),[e=iZ(e,s),i=iZ(i,o)])}checkOverlap(t,e){let i=t[0]-e[0],s=t[1]-e[1];return Math.sqrt(i*i+s*s)-Math.abs(t[2]+e[2])<-.001}createParentNodes(){let t=this.pointClass,e=this.chart,i=this.parentNodeLayout,s=this.layout.options,o,a=this.parentNode,r={radius:this.parentNodeRadius,lineColor:this.color,fillColor:iE(this.color).brighten(.4).get()};s.parentNodeOptions&&(r=iK(s.parentNodeOptions.marker||{},r)),this.parentNodeMass=0,this.points.forEach(t=>{this.parentNodeMass+=Math.PI*Math.pow(t.marker.radius,2)}),this.calculateParentRadius(),i.nodes.forEach(t=>{t.seriesIndex===this.index&&(o=!0)}),i.setArea(0,0,e.plotWidth,e.plotHeight),o||(a||(a=new t(this,{mass:this.parentNodeRadius/2,marker:r,dataLabels:{inside:!1},states:{normal:{marker:r},hover:{marker:r}},dataLabelOnNull:!0,degree:this.parentNodeRadius,isParentNode:!0,seriesIndex:this.index})),this.parentNode&&(a.plotX=this.parentNode.plotX,a.plotY=this.parentNode.plotY),this.parentNode=a,i.addElementsToCollection([this],i.series),i.addElementsToCollection([a],i.nodes))}deferLayout(){let t=this.options.layoutAlgorithm;this.visible&&(this.addLayout(),t.splitSeries&&this.addSeriesLayout())}destroy(){this.chart.graphLayoutsLookup&&this.chart.graphLayoutsLookup.forEach(t=>{t.removeElementFromCollection(this,t.series)},this),this.parentNode&&this.parentNodeLayout&&(this.parentNodeLayout.removeElementFromCollection(this.parentNode,this.parentNodeLayout.nodes),this.parentNode.dataLabel&&(this.parentNode.dataLabel=this.parentNode.dataLabel.destroy())),iD.destroy.apply(this,arguments)}drawDataLabels(){!this.deferDataLabels&&(iD.drawDataLabels.call(this,this.points),this.parentNode&&(this.parentNode.formatPrefix="parentNode",iD.drawDataLabels.call(this,[this.parentNode])))}drawGraph(){if(!this.layout||!this.layout.options.splitSeries)return;let t=this.chart,e=this.layout.options.parentNodeOptions.marker,i={fill:e.fillColor||iE(this.color).brighten(.4).get(),opacity:e.fillOpacity,stroke:e.lineColor||this.color,"stroke-width":iZ(e.lineWidth,this.options.lineWidth)},s={};this.parentNodesGroup=this.plotGroup("parentNodesGroup","parentNode",this.visible?"inherit":"hidden",.1,t.seriesGroup),this.group?.attr({zIndex:2}),this.calculateParentRadius(),this.parentNode&&iG(this.parentNode.plotX)&&iG(this.parentNode.plotY)&&iG(this.parentNodeRadius)&&(s=iK({x:this.parentNode.plotX-this.parentNodeRadius,y:this.parentNode.plotY-this.parentNodeRadius,width:2*this.parentNodeRadius,height:2*this.parentNodeRadius},i),this.parentNode.graphic||(this.graph=this.parentNode.graphic=t.renderer.symbol(i.symbol).add(this.parentNodesGroup)),this.parentNode.graphic.attr(s))}drawTracker(){let t;let e=this.parentNode;super.drawTracker(),e&&(t=i_(e.dataLabels)?e.dataLabels:e.dataLabel?[e.dataLabel]:[],e.graphic&&(e.graphic.element.point=e),t.forEach(t=>{(t.div||t.element).point=e}))}getPointRadius(){let t,e,i,s;let o=this.chart,a=o.plotWidth,r=o.plotHeight,n=this.options,l=n.useSimulation,h=Math.min(a,r),p={},d=[],c=o.allDataPoints||[],u=c.length;["minSize","maxSize"].forEach(t=>{let e=parseInt(n[t],10),i=/%$/.test(n[t]);p[t]=i?h*e/100:e*Math.sqrt(u)}),o.minRadius=t=p.minSize/Math.sqrt(u),o.maxRadius=e=p.maxSize/Math.sqrt(u);let g=l?this.calculateZExtremes():[t,e];c.forEach((o,a)=>{i=l?iF(o[2],g[0],g[1]):o[2],0===(s=this.getRadius(g[0],g[1],t,e,i))&&(s=null),c[a][2]=s,d.push(s)}),this.radii=d}init(){return iD.init.apply(this,arguments),iB.call(this),this.eventsToUnbind.push(iW(this,"updatedData",function(){this.chart.series.forEach(t=>{t.type===this.type&&(t.isDirty=!0)},this)})),this}onMouseUp(t){if(t.fixedPosition&&!t.removed){let e;let i=this.layout,s=this.parentNodeLayout;s&&i.options.dragBetweenSeries&&s.nodes.forEach(s=>{t&&t.marker&&s!==t.series.parentNode&&(e=i.getDistXY(t,s),i.vectorLength(e)-s.marker.radius-t.marker.radius<0&&(s.series.addPoint(iK(t.options,{plotX:t.plotX,plotY:t.plotY}),!1),i.removeElementFromCollection(t,i.nodes),t.remove()))}),eZ.onMouseUp.apply(this,arguments)}}placeBubbles(t){let e=this.checkOverlap,i=this.positionBubble,s=[],o=1,a=0,r=0,n,l=[],h,p=t.sort((t,e)=>e[2]-t[2]);if(p.length){if(s.push([[0,0,p[0][2],p[0][3],p[0][4]]]),p.length>1)for(s.push([[0,0-p[1][2]-p[0][2],p[1][2],p[1][3],p[1][4]]]),h=2;h<p.length;h++)p[h][2]=p[h][2]||1,e(n=i(s[o][a],s[o-1][r],p[h]),s[o][0])?(s.push([]),r=0,s[o+1].push(i(s[o][a],s[o][0],p[h])),o++,a=0):o>1&&s[o-1][r+1]&&e(n,s[o-1][r+1])?(r++,s[o].push(i(s[o][a],s[o-1][r],p[h])),a++):(a++,s[o].push(n));this.chart.stages=s,this.chart.rawPositions=[].concat.apply([],s),this.resizeRadius(),l=this.chart.rawPositions}return l}pointAttribs(t,e){let i=this.options,s=t&&t.isParentNode,o=i.marker;s&&i.layoutAlgorithm&&i.layoutAlgorithm.parentNodeOptions&&(o=i.layoutAlgorithm.parentNodeOptions.marker);let a=o.fillOpacity,r=iD.pointAttribs.call(this,t,e);return 1!==a&&(r["fill-opacity"]=a),r}positionBubble(t,e,i){let s=Math.asin,o=Math.acos,a=Math.pow,r=Math.abs,n=(0,Math.sqrt)(a(t[0]-e[0],2)+a(t[1]-e[1],2)),l=o((a(n,2)+a(i[2]+e[2],2)-a(i[2]+t[2],2))/(2*(i[2]+e[2])*n)),h=s(r(t[0]-e[0])/n),p=(t[1]-e[1]<0?0:Math.PI)+l+h*((t[0]-e[0])*(t[1]-e[1])<0?1:-1),d=Math.cos(p),c=Math.sin(p);return[e[0]+(e[2]+i[2])*c,e[1]-(e[2]+i[2])*d,i[2],i[3],i[4]]}render(){let t=[];iD.render.apply(this,arguments),!this.options.dataLabels.allowOverlap&&(this.data.forEach(e=>{i_(e.dataLabels)&&e.dataLabels.forEach(e=>{t.push(e)})}),this.options.useSimulation&&this.chart.hideOverlappingLabels(t))}resizeRadius(){let t,e,i,s,o;let a=this.chart,r=a.rawPositions,n=Math.min,l=Math.max,h=a.plotLeft,p=a.plotTop,d=a.plotHeight,c=a.plotWidth;for(let a of(t=i=Number.POSITIVE_INFINITY,e=s=Number.NEGATIVE_INFINITY,r))o=a[2],t=n(t,a[0]-o),e=l(e,a[0]+o),i=n(i,a[1]-o),s=l(s,a[1]+o);let u=[e-t,s-i],g=[(c-h)/u[0],(d-p)/u[1]],f=n.apply([],g);if(Math.abs(f-1)>1e-10){for(let t of r)t[2]*=f;this.placeBubbles(r)}else a.diffY=d/2+p-i-(s-i)/2,a.diffX=c/2+h-t-(e-t)/2}seriesBox(){let t;let e=this.chart,i=this.data,s=Math.max,o=Math.min,a=[e.plotLeft,e.plotLeft+e.plotWidth,e.plotTop,e.plotTop+e.plotHeight];return i.forEach(e=>{iG(e.plotX)&&iG(e.plotY)&&e.marker.radius&&(t=e.marker.radius,a[0]=o(a[0],e.plotX-t),a[1]=s(a[1],e.plotX+t),a[2]=o(a[2],e.plotY-t),a[3]=s(a[3],e.plotY+t))}),iU(a.width/a.height)?a:null}setVisible(){let t=this;iD.setVisible.apply(t,arguments),t.parentNodeLayout&&t.graph?t.visible?(t.graph.show(),t.parentNode.dataLabel&&t.parentNode.dataLabel.show()):(t.graph.hide(),t.parentNodeLayout.removeElementFromCollection(t.parentNode,t.parentNodeLayout.nodes),t.parentNode.dataLabel&&t.parentNode.dataLabel.hide()):t.layout&&(t.visible?t.layout.addElementsToCollection(t.points,t.layout.nodes):t.points.forEach(e=>{t.layout.removeElementFromCollection(e,t.layout.nodes)}))}translate(){let t,e,i;let s=this.chart,o=this.data,a=this.index,r=this.options.useSimulation;for(let n of(this.generatePoints(),iG(s.allDataPoints)||(s.allDataPoints=this.accumulateAllPoints(),this.getPointRadius()),r?i=s.allDataPoints:(i=this.placeBubbles(s.allDataPoints),this.options.draggable=!1),i))n[3]===a&&(t=o[n[4]],e=iZ(n[2],void 0),r||(t.plotX=n[0]-s.plotLeft+s.diffX,t.plotY=n[1]-s.plotTop+s.diffY),iU(e)&&(t.marker=iq(t.marker,{radius:e,width:2*e,height:2*e}),t.radius=e));r&&this.deferLayout(),iV(this,"afterTranslate")}}ij.defaultOptions=iK(iO.defaultOptions,{minSize:"10%",maxSize:"50%",sizeBy:"area",zoneAxis:"y",crisp:!1,tooltip:{pointFormat:"Value: {point.value}"},draggable:!0,useSimulation:!0,parentNode:{allowPointSelect:!1},dataLabels:{formatter:function(){let{numberFormatter:t}=this.series.chart,{value:e}=this.point;return e7(e)?t(e,-1):""},parentNodeFormatter:function(){return this.name||""},parentNodeTextPath:{enabled:!0},padding:0,style:{transition:"opacity 2000ms"}},layoutAlgorithm:{initialPositions:"circle",initialPositionRadius:20,bubblePadding:5,parentNodeLimit:!1,seriesInteraction:!0,dragBetweenSeries:!1,parentNodeOptions:{maxIterations:400,gravitationalConstant:.03,maxSpeed:50,initialPositionRadius:100,seriesInteraction:!0,marker:{fillColor:null,fillOpacity:1,lineWidth:null,lineColor:null,symbol:"circle"}},enableSimulation:!0,type:"packedbubble",integration:"packedbubble",maxIterations:1e3,splitSeries:!1,maxSpeed:5,gravitationalConstant:.01,friction:-.981}}),iq(ij.prototype,{pointClass:e9,axisTypes:[],directTouch:!0,forces:["barycenter","repulsive"],hasDraggableNodes:!0,invertible:!1,isCartesian:!1,noSharedTooltip:!0,pointArrayMap:["value"],pointValKey:"value",requireSorting:!1,trackerGroups:["group","dataLabelsGroup","parentNodesGroup"],initDataLabels:iH,alignDataLabel:iD.alignDataLabel,indexateNodes:iz,onMouseDown:eZ.onMouseDown,onMouseMove:eZ.onMouseMove,redrawHalo:eZ.redrawHalo,searchPoint:iz}),P().registerSeriesType("packedbubble",ij);let{noop:i$}=y(),{area:iQ,line:iJ,scatter:i0}=P().seriesTypes,{extend:i1,merge:i2}=y();class i3 extends i0{getGraphPath(){let t=iJ.prototype.getGraphPath.call(this),e=t.length+1;for(;e--;)(e===t.length||"M"===t[e][0])&&e>0&&t.splice(e,0,["Z"]);return this.areaPath=t,t}drawGraph(){this.options.fillColor=this.color,iQ.prototype.drawGraph.call(this)}}i3.defaultOptions=i2(i0.defaultOptions,{marker:{enabled:!1,states:{hover:{enabled:!1}}},stickyTracking:!1,tooltip:{followPointer:!0,pointFormat:""},trackByArea:!0,legendSymbol:"rectangle"}),i1(i3.prototype,{type:"polygon",drawTracker:iJ.prototype.drawTracker,setStackedPoints:i$}),P().registerSeriesType("polygon",i3);let i5={circular:{gridLineWidth:1,labels:{align:void 0,x:0,y:void 0},maxPadding:0,minPadding:0,showLastLabel:!1,tickLength:0},radial:{gridLineInterpolation:"circle",gridLineWidth:1,labels:{align:"right",padding:5,x:-3,y:-2},showLastLabel:!1,title:{x:4,text:null,rotation:90}},radialGauge:{endOnTick:!1,gridLineWidth:0,labels:{align:"center",distance:-25,x:0,y:void 0},lineWidth:1,minorGridLineWidth:0,minorTickInterval:"auto",minorTickLength:10,minorTickPosition:"inside",minorTickWidth:1,startOnTick:!1,tickLength:10,tickPixelInterval:100,tickPosition:"inside",tickWidth:2,title:{rotation:0,text:""},zIndex:2}},{defaultOptions:i8}=y(),{composed:i6,noop:i4}=y(),{addEvent:i9,correctFloat:i7,defined:st,extend:se,fireEvent:si,isObject:ss,merge:so,pick:sa,pushUnique:sr,relativeLength:sn,wrap:sl}=y();!function(t){function e(){this.autoConnect=this.isCircular&&void 0===sa(this.userMax,this.options.max)&&i7(this.endAngleRad-this.startAngleRad)===i7(2*Math.PI),!this.isCircular&&this.chart.inverted&&this.max++,this.autoConnect&&(this.max+=this.categories&&1||this.pointRange||this.closestPointRange||0)}function i(){return()=>{if(this.isRadial&&this.tickPositions&&this.options.labels&&!0!==this.options.labels.allowOverlap)return this.tickPositions.map(t=>this.ticks[t]&&this.ticks[t].label).filter(t=>!!t)}}function s(){return i4}function o(t,e,i){let s=this.pane.center,o=t.value,a,r,n;return this.isCircular?(st(o)?t.point&&(t.point.shapeArgs||{}).start&&(o=this.chart.inverted?this.translate(t.point.rectPlotY,!0):t.point.x):(r=t.chartX||0,n=t.chartY||0,o=this.translate(Math.atan2(n-i,r-e)-this.startAngleRad,!0)),r=(a=this.getPosition(o)).x,n=a.y):(st(o)||(r=t.chartX,n=t.chartY),st(r)&&st(n)&&(i=s[1]+this.chart.plotTop,o=this.translate(Math.min(Math.sqrt(Math.pow(r-e,2)+Math.pow(n-i,2)),s[2]/2)-s[3]/2,!0))),[o,r||0,n||0]}function a(t,e,i){let s=this.pane.center,o=this.chart,a=this.left||0,r=this.top||0,n,l=sa(e,s[2]/2-this.offset),h;return void 0===i&&(i=this.horiz?0:this.center&&-this.center[3]/2),i&&(l+=i),this.isCircular||void 0!==e?((h=this.chart.renderer.symbols.arc(a+s[0],r+s[1],l,l,{start:this.startAngleRad,end:this.endAngleRad,open:!0,innerR:0})).xBounds=[a+s[0]],h.yBounds=[r+s[1]-l]):(n=this.postTranslate(this.angleRad,l),h=[["M",this.center[0]+o.plotLeft,this.center[1]+o.plotTop],["L",n.x,n.y]]),h}function r(){this.constructor.prototype.getOffset.call(this),this.chart.axisOffset[this.side]=0}function n(t,e,i){let s=this.chart,o=t=>{if("string"==typeof t){let e=parseInt(t,10);return d.test(t)&&(e=e*n/100),e}return t},a=this.center,r=this.startAngleRad,n=a[2]/2,l=Math.min(this.offset,0),h=this.left||0,p=this.top||0,d=/%$/,c=this.isCircular,u,g,f,m,b,y,x=sa(o(i.outerRadius),n),P=o(i.innerRadius),v=sa(o(i.thickness),10);if("polygon"===this.options.gridLineInterpolation)y=this.getPlotLinePath({value:t}).concat(this.getPlotLinePath({value:e,reverse:!0}));else{t=Math.max(t,this.min),e=Math.min(e,this.max);let o=this.translate(t),n=this.translate(e);c||(x=o||0,P=n||0),"circle"!==i.shape&&c?(u=r+(o||0),g=r+(n||0)):(u=-Math.PI/2,g=1.5*Math.PI,b=!0),x-=l,v-=l,y=s.renderer.symbols.arc(h+a[0],p+a[1],x,x,{start:Math.min(u,g),end:Math.max(u,g),innerR:sa(P,x-v),open:b,borderRadius:i.borderRadius}),c&&(f=(g+u)/2,m=h+a[0]+a[2]/2*Math.cos(f),y.xBounds=f>-Math.PI/2&&f<Math.PI/2?[m,s.plotWidth]:[0,m],y.yBounds=[p+a[1]+a[2]/2*Math.sin(f)],y.yBounds[0]+=f>-Math.PI&&f<0||f>Math.PI?-10:10)}return y}function l(t){let e=this.pane.center,i=this.chart,s=i.inverted,o=t.reverse,a=this.pane.options.background?this.pane.options.background[0]||this.pane.options.background:{},r=a.innerRadius||"0%",n=a.outerRadius||"100%",l=e[0]+i.plotLeft,h=e[1]+i.plotTop,p=this.height,d=t.isCrosshair,c=e[3]/2,u=t.value,g,f,m,b,y,x,P,v,M,L=this.getPosition(u),k=L.x,w=L.y;if(d&&(u=(v=this.getCrosshairPosition(t,l,h))[0],k=v[1],w=v[2]),this.isCircular)f=Math.sqrt(Math.pow(k-l,2)+Math.pow(w-h,2)),m="string"==typeof r?sn(r,1):r/f,b="string"==typeof n?sn(n,1):n/f,e&&c&&(m<(g=c/f)&&(m=g),b<g&&(b=g)),M=[["M",l+m*(k-l),h-m*(h-w)],["L",k-(1-b)*(k-l),w+(1-b)*(h-w)]];else if((u=this.translate(u))&&(u<0||u>p)&&(u=0),"circle"===this.options.gridLineInterpolation)M=this.getLinePath(0,u,c);else if(M=[],i[s?"yAxis":"xAxis"].forEach(t=>{t.pane===this.pane&&(y=t)}),y){P=y.tickPositions,y.autoConnect&&(P=P.concat([P[0]])),o&&(P=P.slice().reverse()),u&&(u+=c);for(let t=0;t<P.length;t++)x=y.getPosition(P[t],u),M.push(t?["L",x.x,x.y]:["M",x.x,x.y])}return M}function h(t,e){let i=this.translate(t);return this.postTranslate(this.isCircular?i:this.angleRad,sa(this.isCircular?e:i<0?0:i,this.center[2]/2)-this.offset)}function p(){let t=this.center,e=this.chart,i=this.options.title;return{x:e.plotLeft+t[0]+(i.x||0),y:e.plotTop+t[1]-({high:.5,middle:.25,low:0})[i.align]*t[2]+(i.y||0)}}function d(t){t.beforeSetTickPositions=e,t.createLabelCollector=i,t.getCrosshairPosition=o,t.getLinePath=a,t.getOffset=r,t.getPlotBandPath=n,t.getPlotLinePath=l,t.getPosition=h,t.getTitlePosition=p,t.postTranslate=v,t.setAxisSize=L,t.setAxisTranslation=k,t.setOptions=w}function c(){let t=this.chart,e=this.options,i=t.angular&&this.isXAxis,s=this.pane,o=s&&s.options;if(!i&&s&&(t.angular||t.polar)){let t=2*Math.PI,i=(sa(o.startAngle,0)-90)*Math.PI/180,s=(sa(o.endAngle,sa(o.startAngle,0)+360)-90)*Math.PI/180;this.angleRad=(e.angle||0)*Math.PI/180,this.startAngleRad=i,this.endAngleRad=s,this.offset=e.offset||0;let a=(i%t+t)%t,r=(s%t+t)%t;a>Math.PI&&(a-=t),r>Math.PI&&(r-=t),this.normalizedStartAngleRad=a,this.normalizedEndAngleRad=r}}function u(t){this.isRadial&&(t.align=void 0,t.preventDefault())}function g(){if(this.chart&&this.chart.labelCollectors){let t=this.labelCollector?this.chart.labelCollectors.indexOf(this.labelCollector):-1;t>=0&&this.chart.labelCollectors.splice(t,1)}}function f(t){let e;let i=this.chart,o=i.angular,a=i.polar,r=this.isXAxis,n=this.coll,l=t.userOptions.pane||0,h=this.pane=i.pane&&i.pane[l];if("colorAxis"===n){this.isRadial=!1;return}o?(o&&r?(this.isHidden=!0,this.createLabelCollector=s,this.getOffset=i4,this.redraw=M,this.render=M,this.setScale=i4,this.setCategories=i4,this.setTitle=i4):d(this),e=!r):a&&(d(this),e=this.horiz),o||a?(this.isRadial=!0,this.labelCollector||(this.labelCollector=this.createLabelCollector()),this.labelCollector&&i.labelCollectors.push(this.labelCollector)):this.isRadial=!1,h&&e&&(h.axis=this),this.isCircular=e}function m(){this.isRadial&&this.beforeSetTickPositions()}function b(t){let e=this.label;if(!e)return;let i=this.axis,s=e.getBBox(),o=i.options.labels,a=(i.translate(this.pos)+i.startAngleRad+Math.PI/2)/Math.PI*180%360,r=Math.round(a),n=st(o.y)?0:-(.3*s.height),l=o.y,h,p=20,d=o.align,c="end",u=r<0?r+360:r,g=u,f=0,m=0;i.isRadial&&(h=i.getPosition(this.pos,i.center[2]/2+sn(sa(o.distance,-25),i.center[2]/2,-i.center[2]/2)),"auto"===o.rotation?e.attr({rotation:a}):st(l)||(l=i.chart.renderer.fontMetrics(e).b-s.height/2),st(d)||(i.isCircular?(s.width>i.len*i.tickInterval/(i.max-i.min)&&(p=0),d=a>p&&a<180-p?"left":a>180+p&&a<360-p?"right":"center"):d="center",e.attr({align:d})),"auto"===d&&2===i.tickPositions.length&&i.isCircular&&(u>90&&u<180?u=180-u:u>270&&u<=360&&(u=540-u),g>180&&g<=360&&(g=360-g),(i.pane.options.startAngle===r||i.pane.options.startAngle===r+360||i.pane.options.startAngle===r-360)&&(c="start"),d=r>=-90&&r<=90||r>=-360&&r<=-270||r>=270&&r<=360?"start"===c?"right":"left":"start"===c?"left":"right",g>70&&g<110&&(d="center"),u<15||u>=180&&u<195?f=.3*s.height:u>=15&&u<=35?f="start"===c?0:.75*s.height:u>=195&&u<=215?f="start"===c?.75*s.height:0:u>35&&u<=90?f="start"===c?-(.25*s.height):s.height:u>215&&u<=270&&(f="start"===c?s.height:-(.25*s.height)),g<15?m="start"===c?-(.15*s.height):.15*s.height:g>165&&g<=180&&(m="start"===c?.15*s.height:-(.15*s.height)),e.attr({align:d}),e.translate(m,f+n)),t.pos.x=h.x+(o.x||0),t.pos.y=h.y+(l||0))}function x(t){this.axis.getPosition&&se(t.pos,this.axis.getPosition(this.pos))}function P({options:e}){e.xAxis&&so(!0,t.radialDefaultOptions.circular,e.xAxis),e.yAxis&&so(!0,t.radialDefaultOptions.radialGauge,e.yAxis)}function v(t,e){let i=this.chart,s=this.center;return t=this.startAngleRad+t,{x:i.plotLeft+s[0]+Math.cos(t)*e,y:i.plotTop+s[1]+Math.sin(t)*e}}function M(){this.isDirty=!1}function L(){let t,e;this.constructor.prototype.setAxisSize.call(this),this.isRadial&&(this.pane.updateCenter(this),t=this.center=this.pane.center.slice(),this.isCircular?this.sector=this.endAngleRad-this.startAngleRad:(e=this.postTranslate(this.angleRad,t[3]/2),t[0]=e.x-this.chart.plotLeft,t[1]=e.y-this.chart.plotTop),this.len=this.width=this.height=(t[2]-t[3])*sa(this.sector,1)/2)}function k(){this.constructor.prototype.setAxisTranslation.call(this),this.center&&(this.isCircular?this.transA=(this.endAngleRad-this.startAngleRad)/(this.max-this.min||1):this.transA=(this.center[2]-this.center[3])/2/(this.max-this.min||1),this.isXAxis?this.minPixelPadding=this.transA*this.minPointOffset:this.minPixelPadding=0)}function w(e){let{coll:i}=this,{angular:s,inverted:o,polar:a}=this.chart,r={};s?this.isXAxis||(r=so(i8.yAxis,t.radialDefaultOptions.radialGauge)):a&&(r=this.horiz?so(i8.xAxis,t.radialDefaultOptions.circular):so("xAxis"===i?i8.xAxis:i8.yAxis,t.radialDefaultOptions.radial)),o&&"yAxis"===i&&(r.stackLabels=ss(i8.yAxis,!0)?i8.yAxis.stackLabels:{},r.reversedStacks=!0);let n=this.options=so(r,e);n.plotBands||(n.plotBands=[]),si(this,"afterSetOptions")}function A(t,e,i,s,o,a,r){let n;let l=this.axis;return l.isRadial?["M",e,i,"L",(n=l.getPosition(this.pos,l.center[2]/2+s)).x,n.y]:t.call(this,e,i,s,o,a,r)}t.radialDefaultOptions=so(i5),t.compose=function(t,e){return sr(i6,"Axis.Radial")&&(i9(t,"afterInit",c),i9(t,"autoLabelAlign",u),i9(t,"destroy",g),i9(t,"init",f),i9(t,"initialAxisTranslation",m),i9(e,"afterGetLabelPosition",b),i9(e,"afterGetPosition",x),i9(y(),"setOptions",P),sl(e.prototype,"getMarkPath",A)),t}}(d||(d={}));let sh=d,{animObject:sp}=y(),{composed:sd}=y(),{addEvent:sc,defined:su,find:sg,isNumber:sf,merge:sm,pick:sb,pushUnique:sy,relativeLength:sx,splat:sP,uniqueKey:sv,wrap:sM}=y();function sL(){(this.pane||[]).forEach(t=>{t.render()})}function sk(t){let e=t.args[0].xAxis,i=t.args[0].yAxis,s=t.args[0].chart;e&&i&&("polygon"===i.gridLineInterpolation?(e.startOnTick=!0,e.endOnTick=!0):"polygon"===e.gridLineInterpolation&&s.inverted&&(i.startOnTick=!0,i.endOnTick=!0))}function sw(){this.pane||(this.pane=[]),this.options.pane=sP(this.options.pane||{}),this.options.pane.forEach(t=>{new F(t,this)},this)}function sA(t){let e=t.args.marker,i=this.chart.xAxis[0],s=this.chart.yAxis[0],o=this.chart.inverted,a=o?s:i,r=o?i:s;if(this.chart.polar){t.preventDefault();let i=(e.attr?e.attr("start"):e.start)-a.startAngleRad,s=e.attr?e.attr("r"):e.r,o=(e.attr?e.attr("end"):e.end)-a.startAngleRad,n=e.attr?e.attr("innerR"):e.innerR;t.result.x=i+a.pos,t.result.width=o-i,t.result.y=r.len+r.pos-s,t.result.height=s-n}}function sS(t){let e=this.chart;if(e.polar&&e.hoverPane&&e.hoverPane.axis){t.preventDefault();let i=e.hoverPane.center,s=e.mouseDownX||0,o=e.mouseDownY||0,a=t.args.chartY,r=t.args.chartX,n=2*Math.PI,l=e.hoverPane.axis.startAngleRad,h=e.hoverPane.axis.endAngleRad,p=e.inverted?e.xAxis[0]:e.yAxis[0],d={},c="arc";if(d.x=i[0]+e.plotLeft,d.y=i[1]+e.plotTop,this.zoomHor){let t=l>0?h-l:Math.abs(l)+Math.abs(h),u=Math.atan2(o-e.plotTop-i[1],s-e.plotLeft-i[0])-l,g=Math.atan2(a-e.plotTop-i[1],r-e.plotLeft-i[0])-l;d.r=i[2]/2,d.innerR=i[3]/2,u<=0&&(u+=n),g<=0&&(g+=n),g<u&&(g=[u,u=g][0]),t<n&&l+g>h+(n-t)/2&&(g=u,u=l<=0?l:0);let f=d.start=Math.max(u+l,l),m=d.end=Math.min(g+l,h);if("polygon"===p.options.gridLineInterpolation){let t=e.hoverPane.axis,s=f-t.startAngleRad+t.pos,o=p.getPlotLinePath({value:p.max}),a=t.toValue(s),r=t.toValue(s+(m-f));if(a<t.getExtremes().min){let{min:e,max:i}=t.getExtremes();a=i-(e-a)}if(r<t.getExtremes().min){let{min:e,max:i}=t.getExtremes();r=i-(e-r)}r<a&&(r=[a,a=r][0]),(o=sX(o,a,r,t)).push(["L",i[0]+e.plotLeft,e.plotTop+i[1]]),d.d=o,c="path"}}if(this.zoomVert){let t=e.inverted?e.xAxis[0]:e.yAxis[0],n=Math.sqrt(Math.pow(s-e.plotLeft-i[0],2)+Math.pow(o-e.plotTop-i[1],2)),p=Math.sqrt(Math.pow(r-e.plotLeft-i[0],2)+Math.pow(a-e.plotTop-i[1],2));if(p<n&&(n=[p,p=n][0]),p>i[2]/2&&(p=i[2]/2),n<i[3]/2&&(n=i[3]/2),this.zoomHor||(d.start=l,d.end=h),d.r=p,d.innerR=n,"polygon"===t.options.gridLineInterpolation){let e=t.toValue(t.len+t.pos-n),i=t.toValue(t.len+t.pos-p),s=t.getPlotLinePath({value:i}).concat(t.getPlotLinePath({value:e,reverse:!0}));d.d=s,c="path"}}if(this.zoomHor&&this.zoomVert&&"polygon"===p.options.gridLineInterpolation){let t=e.hoverPane.axis,i=d.start||0,s=d.end||0,o=i-t.startAngleRad+t.pos,a=t.toValue(o),r=t.toValue(o+(s-i));if(d.d instanceof Array){let t=d.d.slice(0,d.d.length/2),i=d.d.slice(d.d.length/2,d.d.length);i=[...i].reverse();let s=e.hoverPane.axis;t=sX(t,a,r,s),(i=sX(i,a,r,s))&&(i[0][0]="L"),i=[...i].reverse(),d.d=t.concat(i),c="path"}}t.attrs=d,t.shapeType=c}}function sT(){let t=this.chart;t.polar&&(this.polar=new sW(this),t.inverted&&(this.isRadialSeries=!0,this.is("column")&&(this.isRadialBar=!0)))}function sC(){if(this.chart.polar&&this.xAxis){let{xAxis:t,yAxis:e}=this,i=this.chart;this.kdByAngle=i.tooltip&&i.tooltip.shared,this.kdByAngle||i.inverted?this.searchPoint=sN:this.options.findNearestPointBy="xy";let s=this.points,o=s.length;for(;o--;)this.is("column")||this.is("columnrange")||this.polar.toXY(s[o]),i.hasParallelCoordinates||this.yAxis.reversed||(sb(s[o].y,Number.MIN_VALUE)<e.min||s[o].x<t.min||s[o].x>t.max?(s[o].isNull=!0,s[o].plotY=NaN):s[o].isNull=s[o].isValid&&!s[o].isValid());this.hasClipCircleSetter||(this.hasClipCircleSetter=!!this.eventsToUnbind.push(sc(this,"afterRender",function(){let t;i.polar&&!1!==this.options.clip&&(t=this.yAxis.pane.center,this.clipCircle?this.clipCircle.animate({x:t[0],y:t[1],r:t[2]/2,innerR:t[3]/2}):this.clipCircle=function(t,e,i,s,o){let a=sv(),r=t.createElement("clipPath").attr({id:a}).add(t.defs),n=o?t.arc(e,i,s,o,0,2*Math.PI).add(r):t.circle(e,i,s).add(r);return n.id=a,n.clipPath=r,n}(i.renderer,t[0],t[1],t[2]/2,t[3]/2),this.group.clip(this.clipCircle),this.setClip=y().noop)})))}}function sN(t){let e=this.chart,i=this.xAxis,s=this.yAxis,o=i.pane&&i.pane.center,a=t.chartX-(o&&o[0]||0)-e.plotLeft,r=t.chartY-(o&&o[1]||0)-e.plotTop,n=e.inverted?{clientX:t.chartX-s.pos,plotY:t.chartY-i.pos}:{clientX:180+-180/Math.PI*Math.atan2(a,r)};return this.searchKDTree(n)}function sX(t,e,i,s){let o=s.tickInterval,a=s.tickPositions,r=sg(a,t=>t>=i),n=sg([...a].reverse(),t=>t<=e);return su(r)||(r=a[a.length-1]),su(n)||(n=a[0],r+=o,t[0][0]="L",t.unshift(t[t.length-3])),(t=t.slice(a.indexOf(n),a.indexOf(r)+1))[0][0]="M",t}function sY(t,e){return sg(this.pane||[],t=>t.options.id===e)||t.call(this,e)}function sI(t,e,i,s,o,a){let r,n,l;let h=this.chart,p=sb(s.inside,!!this.options.stacking);if(h.polar){if(r=e.rectPlotX/Math.PI*180,h.inverted)this.forceDL=h.isInsidePlot(e.plotX,e.plotY),p&&e.shapeArgs?(n=e.shapeArgs,o=sm(o,{x:(l=this.yAxis.postTranslate(((n.start||0)+(n.end||0))/2-this.xAxis.startAngleRad,e.barX+e.pointWidth/2)).x-h.plotLeft,y:l.y-h.plotTop})):e.tooltipPos&&(o=sm(o,{x:e.tooltipPos[0],y:e.tooltipPos[1]})),s.align=sb(s.align,"center"),s.verticalAlign=sb(s.verticalAlign,"middle");else{var d;let t,e;null===(d=s).align&&(t=r>20&&r<160?"left":r>200&&r<340?"right":"center",d.align=t),null===d.verticalAlign&&(e=r<45||r>315?"bottom":r>135&&r<225?"top":"middle",d.verticalAlign=e),s=d}M().prototype.alignDataLabel.call(this,e,i,s,o,a),this.isRadialBar&&e.shapeArgs&&e.shapeArgs.start===e.shapeArgs.end?i.hide():i.show()}else t.call(this,e,i,s,o,a)}function sR(){let t=this.options,e=t.stacking,i=this.chart,s=this.xAxis,o=this.yAxis,a=o.reversed,r=o.center,n=s.startAngleRad,l=s.endAngleRad-n,h=t.threshold,p=0,d,c,u,g,f,m=0,b=0,x,P,v,M,L,k,w,A;if(s.isRadial)for(u=(d=this.points).length,g=o.translate(o.min),f=o.translate(o.max),h=t.threshold||0,i.inverted&&sf(h)&&su(p=o.translate(h))&&(p<0?p=0:p>l&&(p=l),this.translatedThreshold=p+n);u--;){if(k=(c=d[u]).barX,P=c.x,v=c.y,c.shapeType="arc",i.inverted){c.plotY=o.translate(v),e&&o.stacking?(L=o.stacking.stacks[(v<0?"-":"")+this.stackKey],this.visible&&L&&L[P]&&!c.isNull&&(M=L[P].points[this.getStackIndicator(void 0,P,this.index).key],m=o.translate(M[0]),b=o.translate(M[1]),su(m)&&(m=y().clamp(m,0,l)))):(m=p,b=c.plotY),m>b&&(b=[m,m=b][0]),a?b>g?b=g:m<f?m=f:(m>g||b<f)&&(m=b=l):m<g?m=g:b>f?b=f:(b<g||m>f)&&(m=b=0),o.min>o.max&&(m=b=a?l:0),m+=n,b+=n,r&&(c.barX=k+=r[3]/2),w=Math.max(k,0),A=Math.max(k+c.pointWidth,0);let i=t.borderRadius,s=sx(("object"==typeof i?i.radius:i)||0,A-w);c.shapeArgs={x:r[0],y:r[1],r:A,innerR:w,start:m,end:b,borderRadius:s},c.opacity=m===b?0:void 0,c.plotY=(su(this.translatedThreshold)&&(m<this.translatedThreshold?m:b))-n}else m=k+n,c.shapeArgs=this.polar.arc(c.yBottom,c.plotY,m,m+c.pointWidth),c.shapeArgs.borderRadius=0;this.polar.toXY(c),i.inverted?(x=o.postTranslate(c.rectPlotY,k+c.pointWidth/2),c.tooltipPos=[x.x-i.plotLeft,x.y-i.plotTop]):c.tooltipPos=[c.plotX,c.plotY],r&&(c.ttBelow=c.plotY>r[1])}}function sE(t,e){let i,s;let o=this;if(this.chart.polar){e=e||this.points;for(let t=0;t<e.length;t++)if(!e[t].isNull){i=t;break}!1!==this.options.connectEnds&&void 0!==i&&(this.connectEnds=!0,e.splice(e.length,0,e[i]),s=!0),e.forEach(t=>{void 0===t.polarPlotY&&o.polar.toXY(t)})}let a=t.apply(this,[].slice.call(arguments,1));return s&&e.pop(),a}function sz(t,e){let i=this.chart,s={xAxis:[],yAxis:[]};return i.polar?i.axes.forEach(t=>{if("colorAxis"===t.coll)return;let o=t.isXAxis,a=t.center,r=e.chartX-a[0]-i.plotLeft,n=e.chartY-a[1]-i.plotTop;s[o?"xAxis":"yAxis"].push({axis:t,value:t.translate(o?Math.PI-Math.atan2(r,n):Math.sqrt(Math.pow(r,2)+Math.pow(n,2)),!0)})}):s=t.call(this,e),s}function sD(t,e){this.chart.polar||t.call(this,e)}function sO(t,e){let i=this,s=this.chart,o=this.group,a=this.markerGroup,r=this.xAxis&&this.xAxis.center,n=s.plotLeft,l=s.plotTop,h=this.options.animation,p,d,c,u,g,f;s.polar?i.isRadialBar?e||(i.startAngleRad=sb(i.translatedThreshold,i.xAxis.startAngleRad),y().seriesTypes.pie.prototype.animate.call(i,e)):(h=sp(h),i.is("column")?e||(d=r[3]/2,i.points.forEach(t=>{c=t.graphic,g=(u=t.shapeArgs)&&u.r,f=u&&u.innerR,c&&u&&(c.attr({r:d,innerR:d}),c.animate({r:g,innerR:f},i.options.animation))})):e?(p={translateX:r[0]+n,translateY:r[1]+l,scaleX:.001,scaleY:.001},o.attr(p),a&&a.attr(p)):(p={translateX:n,translateY:l,scaleX:1,scaleY:1},o.animate(p,h),a&&a.animate(p,h))):t.call(this,e)}function sH(t,e,i,s){let o,a;if(this.chart.polar){if(s){let t=(a=function t(e,i,s,o){let a,r,n,l,h,p;let d=o?1:0,c=(a=i>=0&&i<=e.length-1?i:i<0?e.length-1+i:0)-1<0?e.length-(1+d):a-1,u=a+1>e.length-1?d:a+1,g=e[c],f=e[u],m=g.plotX,b=g.plotY,y=f.plotX,x=f.plotY,P=e[a].plotX,v=e[a].plotY;r=(1.5*P+m)/2.5,n=(1.5*v+b)/2.5,l=(1.5*P+y)/2.5,h=(1.5*v+x)/2.5;let M=Math.sqrt(Math.pow(r-P,2)+Math.pow(n-v,2)),L=Math.sqrt(Math.pow(l-P,2)+Math.pow(h-v,2)),k=Math.atan2(n-v,r-P);p=Math.PI/2+(k+Math.atan2(h-v,l-P))/2,Math.abs(k-p)>Math.PI/2&&(p-=Math.PI),r=P+Math.cos(p)*M,n=v+Math.sin(p)*M;let w={rightContX:l=P+Math.cos(Math.PI+p)*L,rightContY:h=v+Math.sin(Math.PI+p)*L,leftContX:r,leftContY:n,plotX:P,plotY:v};return s&&(w.prevPointCont=t(e,c,!1,o)),w}(e,s,!0,this.connectEnds)).prevPointCont&&a.prevPointCont.rightContX,i=a.prevPointCont&&a.prevPointCont.rightContY;o=["C",sf(t)?t:a.plotX,sf(i)?i:a.plotY,sf(a.leftContX)?a.leftContX:a.plotX,sf(a.leftContY)?a.leftContY:a.plotY,a.plotX,a.plotY]}else o=["M",i.plotX,i.plotY]}else o=t.call(this,e,i,s);return o}function sB(t,e,i=this.plotY){if(!this.destroyed){let{plotX:s,series:o}=this,{chart:a}=o;return a.polar&&sf(s)&&sf(i)?[s+(e?a.plotLeft:0),i+(e?a.plotTop:0)]:t.call(this,e,i)}}class sW{static compose(t,e,i,s,o,a,r,n,l,h){if(F.compose(e,i),sh.compose(t,o),sy(sd,"Polar")){let t=e.prototype,o=a.prototype,p=i.prototype,d=s.prototype;if(sc(e,"afterDrawChartBox",sL),sc(e,"createAxes",sw),sc(e,"init",sk),sM(t,"get",sY),sM(p,"getCoordinates",sz),sM(p,"pinch",sD),sc(i,"getSelectionMarkerAttrs",sS),sc(i,"getSelectionBox",sA),sc(s,"afterInit",sT),sc(s,"afterTranslate",sC,{order:2}),sc(s,"afterColumnTranslate",sR,{order:4}),sM(d,"animate",sO),sM(o,"pos",sB),n){let t=n.prototype;sM(t,"alignDataLabel",sI),sM(t,"animate",sO)}if(l&&sM(l.prototype,"getGraphPath",sE),h){let t=h.prototype;sM(t,"getPointSpline",sH),r&&(r.prototype.getPointSpline=t.getPointSpline)}}}constructor(t){this.series=t}arc(t,e,i,s){let o=this.series,a=o.xAxis.center,r=o.yAxis.len,n=a[3]/2,l=r-e+n,h=r-sb(t,r)+n;return o.yAxis.reversed&&(l<0&&(l=n),h<0&&(h=n)),{x:a[0],y:a[1],r:l,innerR:h,start:i,end:s}}toXY(t){let e=this.series,i=e.chart,s=e.xAxis,o=e.yAxis,a=t.plotX,r=i.inverted,n=t.y,l=t.plotY,h=r?a:o.len-l,p;if(r&&e&&!e.isRadialBar&&(t.plotY=l=sf(n)?o.translate(n):0),t.rectPlotX=a,t.rectPlotY=l,o.center&&(h+=o.center[3]/2),sf(l)){let e=r?o.postTranslate(l,h):s.postTranslate(a,h);t.plotX=t.polarPlotX=e.x-i.plotLeft,t.plotY=t.polarPlotY=e.y-i.plotTop}e.kdByAngle?((p=(a/Math.PI*180+s.pane.options.startAngle)%360)<0&&(p+=360),t.clientX=p):t.clientX=t.plotX}}var sF=f(184),sG=f.n(sF);let{composed:sq}=y(),{addEvent:sV,objectEach:s_,pushUnique:sU}=y();!function(t){function e(){let t=this.waterfall.stacks;t&&(t.changed=!1,delete t.alreadyChanged)}function i(){let t=this.options.stackLabels;t&&t.enabled&&this.waterfall.stacks&&this.waterfall.renderStackTotals()}function s(){this.waterfall||(this.waterfall=new a(this))}function o(){let t=this.axes;for(let e of this.series)if(e.options.stacking){for(let e of t)e.isXAxis||(e.waterfall.stacks.changed=!0);break}}t.compose=function(t,a){sU(sq,"Axis.Waterfall")&&(sV(t,"init",s),sV(t,"afterBuildStacks",e),sV(t,"afterRender",i),sV(a,"beforeRedraw",o))};class a{constructor(t){this.axis=t,this.stacks={changed:!1}}renderStackTotals(){let t=this.axis,e=t.waterfall.stacks,i=t.stacking&&t.stacking.stackTotalGroup,s=new(sG())(t,t.options.stackLabels||{},!1,0,void 0);this.dummyStackItem=s,i&&s_(e,t=>{s_(t,(t,e)=>{s.total=t.stackTotal,s.x=+e,t.label&&(s.label=t.label),sG().prototype.render.call(s,i),t.label=s.label,delete s.label})}),s.total=null}}t.Composition=a}(c||(c={}));let sK=c,{isNumber:sZ}=y();class sj extends tc().prototype.pointClass{getClassName(){let t=tZ().prototype.getClassName.call(this);return this.isSum?t+=" highcharts-sum":this.isIntermediateSum&&(t+=" highcharts-intermediate-sum"),t}isValid(){return sZ(this.y)||this.isSum||!!this.isIntermediateSum}}let{column:s$,line:sQ}=P().seriesTypes,{addEvent:sJ,arrayMax:s0,arrayMin:s1,correctFloat:s2,crisp:s3,extend:s5,isNumber:s8,merge:s6,objectEach:s4,pick:s9}=y();function s7(t,e){return Object.hasOwnProperty.call(t,e)}class ot extends s${generatePoints(){s$.prototype.generatePoints.apply(this);let t=this.getColumn("y",!0);for(let e=0,i=this.points.length;e<i;e++){let i=this.points[e],s=t[e];s8(s)&&(i.isIntermediateSum||i.isSum)&&(i.y=s2(s))}}processData(t){let e,i,s,o,a,r;let n=this.options,l=this.getColumn("y"),h=n.data,p=l.length,d=n.threshold||0;s=i=o=a=0;for(let t=0;t<p;t++)r=l[t],e=h?.[t]||{},"sum"===r||e.isSum?l[t]=s2(s):"intermediateSum"===r||e.isIntermediateSum?(l[t]=s2(i),i=0):(s+=r,i+=r),o=Math.min(s,o),a=Math.max(s,a);super.processData.call(this,t),n.stacking||(this.dataMin=o+d,this.dataMax=a)}toYData(t){return t.isSum?"sum":t.isIntermediateSum?"intermediateSum":t.y}pointAttribs(t,e){let i=this.options.upColor;i&&!t.options.color&&s8(t.y)&&(t.color=t.y>0?i:void 0);let s=s$.prototype.pointAttribs.call(this,t,e);return delete s.dashstyle,s}getGraphPath(){return[["M",0,0]]}getCrispPath(){let t=this.data.filter(t=>s8(t.y)),e=this.yAxis,i=t.length,s=this.graph?.strokeWidth()||0,o=this.xAxis.reversed,a=this.yAxis.reversed,r=this.options.stacking,n=[];for(let l=1;l<i;l++){if(!(this.options.connectNulls||s8(this.data[t[l].index-1].y)))continue;let i=t[l].box,h=t[l-1],p=h.y||0,d=t[l-1].box;if(!i||!d)continue;let c=e.waterfall.stacks[this.stackKey],u=p>0?-d.height:0;if(c&&d&&i){let t;let p=c[l-1];if(r){let i=p.connectorThreshold;t=s3(e.translate(i,!1,!0,!1,!0)+(a?u:0),s)}else t=s3(d.y+(h.minPointLengthOffset||0),s);n.push(["M",(d.x||0)+(o?0:d.width||0),t],["L",(i.x||0)+(o&&i.width||0),t])}if(d&&n.length&&(!r&&p<0&&!a||p>0&&a)){let t=n[n.length-2];t&&"number"==typeof t[2]&&(t[2]+=d.height||0);let e=n[n.length-1];e&&"number"==typeof e[2]&&(e[2]+=d.height||0)}}return n}drawGraph(){sQ.prototype.drawGraph.call(this),this.graph&&this.graph.attr({d:this.getCrispPath()})}setStackedPoints(t){let e=this.options,i=t.waterfall?.stacks,s=e.threshold||0,o=this.stackKey,a=this.getColumn("x"),r=this.getColumn("y"),n=a.length,l=s,h=l,p,d=0,c=0,u=0,g,f,m,b,y,x,P,v,M=(t,e,i,s)=>{if(p){if(g)for(;i<g;i++)p.stackState[i]+=s;else p.stackState[0]=t,g=p.stackState.length;p.stackState.push(p.stackState[g-1]+e)}};if(t.stacking&&i&&this.reserveSpace()){v=i.changed,(P=i.alreadyChanged)&&0>P.indexOf(o)&&(v=!0),i[o]||(i[o]={});let t=i[o];if(t)for(let i=0;i<n;i++)(!t[x=a[i]]||v)&&(t[x]={negTotal:0,posTotal:0,stackTotal:0,threshold:0,stateIndex:0,stackState:[],label:v&&t[x]?t[x].label:void 0}),p=t[x],(y=r[i])>=0?p.posTotal+=y:p.negTotal+=y,b=e.data[i],f=p.absolutePos=p.posTotal,m=p.absoluteNeg=p.negTotal,p.stackTotal=f+m,g=p.stackState.length,b&&b.isIntermediateSum?(M(u,c,0,u),u=c,c=s,l^=h,h^=l,l^=h):b&&b.isSum?(M(s,d,g,0),l=s):(M(l,y,0,d),b&&(d+=y,c+=y)),p.stateIndex++,p.threshold=l,l+=p.stackTotal;i.changed=!1,i.alreadyChanged||(i.alreadyChanged=[]),i.alreadyChanged.push(o)}}getExtremes(){let t,e,i;let s=this.options.stacking;return s?(t=this.yAxis.waterfall.stacks,e=this.stackedYNeg=[],i=this.stackedYPos=[],"overlap"===s?s4(t[this.stackKey],function(t){e.push(s1(t.stackState)),i.push(s0(t.stackState))}):s4(t[this.stackKey],function(t){e.push(t.negTotal+t.threshold),i.push(t.posTotal+t.threshold)}),{dataMin:s1(e),dataMax:s0(i)}):{dataMin:this.dataMin,dataMax:this.dataMax}}}ot.defaultOptions=s6(s$.defaultOptions,{dataLabels:{inside:!0},lineWidth:1,lineColor:"#333333",dashStyle:"Dot",borderColor:"#333333",states:{hover:{lineWidthPlus:0}}}),ot.compose=sK.compose,s5(ot.prototype,{pointValKey:"y",showLine:!0,pointClass:sj}),sJ(ot,"afterColumnTranslate",function(){let{options:t,points:e,yAxis:i}=this,s=s9(t.minPointLength,5),o=s/2,a=t.threshold||0,r=t.stacking,n=i.waterfall.stacks[this.stackKey],l=this.getColumn("y",!0),h=a,p=a,d,c,u,g;for(let t=0;t<e.length;t++){let f=e[t],m=l[t],b=s5({x:0,y:0,width:0,height:0},f.shapeArgs||{});f.box=b;let y=[0,m],x=f.y||0;if(r){if(n){let e=n[t];"overlap"===r?(c=e.stackState[e.stateIndex--],d=x>=0?c:c-x,s7(e,"absolutePos")&&delete e.absolutePos,s7(e,"absoluteNeg")&&delete e.absoluteNeg):(x>=0?(c=e.threshold+e.posTotal,e.posTotal-=x,d=c):(c=e.threshold+e.negTotal,e.negTotal-=x,d=c-x),!e.posTotal&&s8(e.absolutePos)&&s7(e,"absolutePos")&&(e.posTotal=e.absolutePos,delete e.absolutePos),!e.negTotal&&s8(e.absoluteNeg)&&s7(e,"absoluteNeg")&&(e.negTotal=e.absoluteNeg,delete e.absoluteNeg)),f.isSum||(e.connectorThreshold=e.threshold+e.stackTotal),i.reversed?(u=x>=0?d-x:d+x,g=d):(u=d,g=d-x),f.below=u<=a,b.y=i.translate(u,!1,!0,!1,!0),b.height=Math.abs(b.y-i.translate(g,!1,!0,!1,!0));let s=i.waterfall.dummyStackItem;s&&(s.x=t,s.label=n[t].label,s.setOffset(this.pointXOffset||0,this.barW||0,this.stackedYNeg[t],this.stackedYPos[t],void 0,this.xAxis))}}else d=Math.max(p,p+x)+y[0],b.y=i.translate(d,!1,!0,!1,!0),f.isSum?(b.y=i.translate(y[1],!1,!0,!1,!0),b.height=Math.min(i.translate(y[0],!1,!0,!1,!0),i.len)-b.y,f.below=y[1]<=a):f.isIntermediateSum?(x>=0?(u=y[1]+h,g=h):(u=h,g=y[1]+h),i.reversed&&(u^=g,g^=u,u^=g),b.y=i.translate(u,!1,!0,!1,!0),b.height=Math.abs(b.y-Math.min(i.translate(g,!1,!0,!1,!0),i.len)),h+=y[1],f.below=u<=a):(b.height=m>0?i.translate(p,!1,!0,!1,!0)-b.y:i.translate(p,!1,!0,!1,!0)-i.translate(p-m,!1,!0,!1,!0),p+=m,f.below=p<a),b.height<0&&(b.y+=b.height,b.height*=-1);f.plotY=b.y,f.yBottom=b.y+b.height,b.height<=s&&!f.isNull?(b.height=s,b.y-=o,f.yBottom=b.y+b.height,f.plotY=b.y,x<0?f.minPointLengthOffset=-o:f.minPointLengthOffset=o):(f.isNull&&(b.width=0),f.minPointLengthOffset=0);let P=f.plotY+(f.negative?b.height:0);f.below&&(f.plotY+=b.height),f.tooltipPos&&(this.chart.inverted?f.tooltipPos[0]=i.len-P:f.tooltipPos[1]=P),f.isInside=this.isPointInside(f);let v=s3(f.yBottom,this.borderWidth);b.y=s3(b.y,this.borderWidth),b.height=v-b.y,s6(!0,f.shapeArgs,b)}},{order:2}),P().registerSeriesType("waterfall",ot);let oe=y();oe.RadialAxis=sh,er.compose(oe.Axis,oe.Chart,oe.Legend),ij.compose(oe.Axis,oe.Chart,oe.Legend),F.compose(oe.Chart,oe.Pointer),sW.compose(oe.Axis,oe.Chart,oe.Pointer,oe.Series,oe.Tick,oe.Point,P().seriesTypes.areasplinerange,P().seriesTypes.column,P().seriesTypes.line,P().seriesTypes.spline),ot.compose(oe.Axis,oe.Chart);let oi=oe;return m.default})());

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfaGlnaGNoYXJ0c19oaWdoY2hhcnRzLW1vcmVfanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLEtBQWlELDJQQUEyUCxDQUEyd0IsQ0FBQyxxRUFBcUUsYUFBYSxhQUFhLFFBQVEsWUFBWSxTQUFTLFlBQVksU0FBUyxZQUFZLFFBQVEsWUFBWSxTQUFTLFlBQVksU0FBUyxZQUFZLFNBQVMsWUFBWSxTQUFTLFlBQVksU0FBUyxZQUFZLFNBQVMsYUFBYSxNQUFNLGNBQWMsV0FBVywrQkFBK0IsWUFBWSxZQUFZLHFDQUFxQyxRQUFRLDBDQUEwQyxjQUFjLElBQUksSUFBSSxhQUFhLCtEQUErRCx1QkFBdUIsRUFBRSxzREFBc0QsU0FBUyxPQUFPLGVBQWUsRUFBRSwwREFBMEQsSUFBSSxVQUFVLE1BQU0sK0NBQStDLEtBQUssYUFBYSx1QkFBdUIsc0tBQXNLLDRFQUE0RSw0R0FBNEcsa0RBQWtELElBQUksd0VBQXdFLDRGQUE0RixZQUFZLElBQUksdUNBQXVDLDRDQUE0QyxPQUFPLGdDQUFnQyxTQUFTLEdBQUcsU0FBUywyQ0FBMkMsS0FBSyxjQUFjLE1BQU0sV0FBVyw2QkFBNkIsMERBQTBELElBQUksc0JBQXNCLG9FQUFvRSxlQUFlLG9DQUFvQyxtRUFBbUUsK0JBQStCLGNBQWMsMExBQTBMLGNBQWMsaUJBQWlCLHVKQUF1SixjQUFjLGlCQUFpQiw0REFBNEQsK0hBQStILHFCQUFxQixPQUFPLE1BQU0sNERBQTRELGFBQWEsbUZBQW1GLGdCQUFnQixvQkFBb0IscUNBQXFDLDhFQUE4RSxFQUFFLHlCQUF5QixLQUFLLFFBQVEsaUJBQWlCLGdDQUFnQyxVQUFVLHFFQUFxRSxjQUFjLDRDQUE0QyxjQUFjLFdBQVcsU0FBUyx5Q0FBeUMsZ0RBQWdELG1CQUFtQiw2QkFBNkIsOEJBQThCLE1BQU0sMERBQTBELFlBQVks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QUEyQixnSkFBZ0osWUFBWSxXQUFXLEtBQUssd0JBQXdCLHlCQUF5QixnQkFBZ0IsRUFBRSxRQUFRLHFCQUFxQixNQUFNLE1BQU0sV0FBVyxnb0JBQWdvQixpQ0FBaUMsd0lBQXdJLDhoQkFBOGhCLHlOQUF5TixzQ0FBc0MsNElBQTRJLHFDQUFxQyxrRUFBa0UsRUFBRSxRQUFRLHlDQUF5QyxXQUFXLGlVQUFpVSxVQUFVLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL2V4Yi1jbGllbnQvLi9ub2RlX21vZHVsZXMvaGlnaGNoYXJ0cy9oaWdoY2hhcnRzLW1vcmUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiIS8qKlxuICogSGlnaGNoYXJ0cyBKUyB2MTIuMS4wICgyMDI0LTEyLTE3KVxuICogQG1vZHVsZSBoaWdoY2hhcnRzL2hpZ2hjaGFydHMtbW9yZVxuICogQHJlcXVpcmVzIGhpZ2hjaGFydHNcbiAqXG4gKiAoYykgMjAwOS0yMDI0IFRvcnN0ZWluIEhvbnNpXG4gKlxuICogTGljZW5zZTogd3d3LmhpZ2hjaGFydHMuY29tL2xpY2Vuc2VcbiAqL2Z1bmN0aW9uKHQsZSl7XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHMmJlwib2JqZWN0XCI9PXR5cGVvZiBtb2R1bGU/bW9kdWxlLmV4cG9ydHM9ZSh0Ll9IaWdoY2hhcnRzLHQuX0hpZ2hjaGFydHMuU2VyaWVzUmVnaXN0cnksdC5fSGlnaGNoYXJ0cy5TZXJpZXMsdC5fSGlnaGNoYXJ0cy5TZXJpZXMudHlwZXMuY29sdW1uLHQuX0hpZ2hjaGFydHMuQ29sb3IsdC5fSGlnaGNoYXJ0cy5UZW1wbGF0aW5nLHQuX0hpZ2hjaGFydHMuUG9pbnQsdC5fSGlnaGNoYXJ0cy5DaGFydCx0Ll9IaWdoY2hhcnRzLlNWR0VsZW1lbnQsdC5fSGlnaGNoYXJ0cy5TdGFja0l0ZW0pOlwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoXCJoaWdoY2hhcnRzL2hpZ2hjaGFydHMtbW9yZVwiLFtcImhpZ2hjaGFydHMvaGlnaGNoYXJ0c1wiXSxmdW5jdGlvbih0KXtyZXR1cm4gZSh0LHQuU2VyaWVzUmVnaXN0cnksdC5TZXJpZXMsdC5TZXJpZXMsW1widHlwZXNcIl0sW1wiY29sdW1uXCJdLHQuQ29sb3IsdC5UZW1wbGF0aW5nLHQuUG9pbnQsdC5DaGFydCx0LlNWR0VsZW1lbnQsdC5TdGFja0l0ZW0pfSk6XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHM/ZXhwb3J0c1tcImhpZ2hjaGFydHMvaGlnaGNoYXJ0cy1tb3JlXCJdPWUodC5fSGlnaGNoYXJ0cyx0Ll9IaWdoY2hhcnRzLlNlcmllc1JlZ2lzdHJ5LHQuX0hpZ2hjaGFydHMuU2VyaWVzLHQuX0hpZ2hjaGFydHMuU2VyaWVzLnR5cGVzLmNvbHVtbix0Ll9IaWdoY2hhcnRzLkNvbG9yLHQuX0hpZ2hjaGFydHMuVGVtcGxhdGluZyx0Ll9IaWdoY2hhcnRzLlBvaW50LHQuX0hpZ2hjaGFydHMuQ2hhcnQsdC5fSGlnaGNoYXJ0cy5TVkdFbGVtZW50LHQuX0hpZ2hjaGFydHMuU3RhY2tJdGVtKTp0LkhpZ2hjaGFydHM9ZSh0LkhpZ2hjaGFydHMsdC5IaWdoY2hhcnRzLlNlcmllc1JlZ2lzdHJ5LHQuSGlnaGNoYXJ0cy5TZXJpZXMsdC5IaWdoY2hhcnRzLlNlcmllcy50eXBlcy5jb2x1bW4sdC5IaWdoY2hhcnRzLkNvbG9yLHQuSGlnaGNoYXJ0cy5UZW1wbGF0aW5nLHQuSGlnaGNoYXJ0cy5Qb2ludCx0LkhpZ2hjaGFydHMuQ2hhcnQsdC5IaWdoY2hhcnRzLlNWR0VsZW1lbnQsdC5IaWdoY2hhcnRzLlN0YWNrSXRlbSl9KFwidW5kZWZpbmVkXCI9PXR5cGVvZiB3aW5kb3c/dGhpczp3aW5kb3csKHQsZSxpLHMsbyxhLHIsbixsLGgpPT4oKCk9PntcInVzZSBzdHJpY3RcIjt2YXIgcCxkLGMsdT17OTYwOnQ9Pnt0LmV4cG9ydHM9bn0sNjIwOnQ9Pnt0LmV4cG9ydHM9b30sMjYwOnQ9Pnt0LmV4cG9ydHM9cn0sMjg6dD0+e3QuZXhwb3J0cz1sfSw0NDg6dD0+e3QuZXhwb3J0cz1zfSw4MjA6dD0+e3QuZXhwb3J0cz1pfSw1MTI6dD0+e3QuZXhwb3J0cz1lfSwxODQ6dD0+e3QuZXhwb3J0cz1ofSw5ODQ6dD0+e3QuZXhwb3J0cz1hfSw5NDQ6ZT0+e2UuZXhwb3J0cz10fX0sZz17fTtmdW5jdGlvbiBmKHQpe3ZhciBlPWdbdF07aWYodm9pZCAwIT09ZSlyZXR1cm4gZS5leHBvcnRzO3ZhciBpPWdbdF09e2V4cG9ydHM6e319O3JldHVybiB1W3RdKGksaS5leHBvcnRzLGYpLGkuZXhwb3J0c31mLm49dD0+e3ZhciBlPXQmJnQuX19lc01vZHVsZT8oKT0+dC5kZWZhdWx0OigpPT50O3JldHVybiBmLmQoZSx7YTplfSksZX0sZi5kPSh0LGUpPT57Zm9yKHZhciBpIGluIGUpZi5vKGUsaSkmJiFmLm8odCxpKSYmT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsaSx7ZW51bWVyYWJsZTohMCxnZXQ6ZVtpXX0pfSxmLm89KHQsZSk9Pk9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpO3ZhciBtPXt9O2YuZChtLHtkZWZhdWx0OigpPT5vaX0pO3ZhciBiPWYoOTQ0KSx5PWYubihiKSx4PWYoNTEyKSxQPWYubih4KSx2PWYoODIwKSxNPWYubih2KTtsZXR7ZGVnMnJhZDpMfT15KCkse2ZpcmVFdmVudDprLGlzTnVtYmVyOncscGljazpBLHJlbGF0aXZlTGVuZ3RoOlN9PXkoKTshZnVuY3Rpb24odCl7dC5nZXRDZW50ZXI9ZnVuY3Rpb24oKXtsZXQgdD10aGlzLm9wdGlvbnMsZT10aGlzLmNoYXJ0LGk9MioodC5zbGljZWRPZmZzZXR8fDApLHM9ZS5wbG90V2lkdGgtMippLG89ZS5wbG90SGVpZ2h0LTIqaSxhPXQuY2VudGVyLHI9TWF0aC5taW4ocyxvKSxuPXQudGhpY2tuZXNzLGwsaD10LnNpemUscD10LmlubmVyU2l6ZXx8MCxkLGM7XCJzdHJpbmdcIj09dHlwZW9mIGgmJihoPXBhcnNlRmxvYXQoaCkpLFwic3RyaW5nXCI9PXR5cGVvZiBwJiYocD1wYXJzZUZsb2F0KHApKTtsZXQgdT1bQShhPy5bMF0sXCI1MCVcIiksQShhPy5bMV0sXCI1MCVcIiksQShoJiZoPDA/dm9pZCAwOnQuc2l6ZSxcIjEwMCVcIiksQShwJiZwPDA/dm9pZCAwOnQuaW5uZXJTaXplfHwwLFwiMCVcIildO2ZvcighZS5hbmd1bGFyfHx0aGlzIGluc3RhbmNlb2YgTSgpfHwodVszXT0wKSxkPTA7ZDw0OysrZCljPXVbZF0sbD1kPDJ8fDI9PT1kJiYvJSQvLnRlc3QoYyksdVtkXT1TKGMsW3MsbyxyLHVbMl1dW2RdKSsobD9pOjApO3JldHVybiB1WzNdPnVbMl0mJih1WzNdPXVbMl0pLHcobikmJjIqbjx1WzJdJiZuPjAmJih1WzNdPXVbMl0tMipuKSxrKHRoaXMsXCJhZnRlckdldENlbnRlclwiLHtwb3NpdGlvbnM6dX0pLHV9LHQuZ2V0U3RhcnRBbmRFbmRSYWRpYW5zPWZ1bmN0aW9uKHQsZSl7bGV0IGk9dyh0KT90OjAscz13KGUpJiZlPmkmJmUtaTwzNjA/ZTppKzM2MDtyZXR1cm57c3RhcnQ6TCooaSstOTApLGVuZDpMKihzKy05MCl9fX0ocHx8KHA9e30pKTtsZXQgVD1wLHthZGRFdmVudDpDLGNvcnJlY3RGbG9hdDpOLGRlZmluZWQ6WCxwaWNrOll9PXkoKTtmdW5jdGlvbiBJKHQpe2xldCBlO2xldCBpPXRoaXM7cmV0dXJuIHQmJmkucGFuZS5mb3JFYWNoKHM9PntSKHQuY2hhcnRYLWkucGxvdExlZnQsdC5jaGFydFktaS5wbG90VG9wLHMuY2VudGVyKSYmKGU9cyl9KSxlfWZ1bmN0aW9uIFIodCxlLGkscyxvKXtsZXQgYT0hMCxyPWlbMF0sbj1pWzFdLGw9TWF0aC5zcXJ0KE1hdGgucG93KHQtciwyKStNYXRoLnBvdyhlLW4sMikpO2lmKFgocykmJlgobykpe2xldCBpPU1hdGguYXRhbjIoTihlLW4sOCksTih0LXIsOCkpO28hPT1zJiYoYT1zPm8/aT49cyYmaTw9TWF0aC5QSXx8aTw9byYmaT49LU1hdGguUEk6aT49cyYmaTw9TihvLDgpKX1yZXR1cm4gbDw9TWF0aC5jZWlsKGlbMl0vMikmJmF9ZnVuY3Rpb24gRSh0KXt0aGlzLnBvbGFyJiYodC5vcHRpb25zLmludmVydGVkJiYoW3QueCx0LnldPVt0LnksdC54XSksdC5pc0luc2lkZVBsb3Q9dGhpcy5wYW5lLnNvbWUoZT0+Uih0LngsdC55LGUuY2VudGVyLGUuYXhpcyYmZS5heGlzLm5vcm1hbGl6ZWRTdGFydEFuZ2xlUmFkLGUuYXhpcyYmZS5heGlzLm5vcm1hbGl6ZWRFbmRBbmdsZVJhZCkpKX1mdW5jdGlvbiB6KHQpe2xldCBlPXRoaXMuY2hhcnQ7dC5ob3ZlclBvaW50JiZ0LmhvdmVyUG9pbnQucGxvdFgmJnQuaG92ZXJQb2ludC5wbG90WSYmZS5ob3ZlclBhbmUmJiFSKHQuaG92ZXJQb2ludC5wbG90WCx0LmhvdmVyUG9pbnQucGxvdFksZS5ob3ZlclBhbmUuY2VudGVyKSYmKHQuaG92ZXJQb2ludD12b2lkIDApfWZ1bmN0aW9uIEQodCl7bGV0IGU9dGhpcy5jaGFydDtlLnBvbGFyPyhlLmhvdmVyUGFuZT1lLmdldEhvdmVyUGFuZSh0KSx0LmZpbHRlcj1mdW5jdGlvbihpKXtyZXR1cm4gaS52aXNpYmxlJiYhKCF0LnNoYXJlZCYmaS5kaXJlY3RUb3VjaCkmJlkoaS5vcHRpb25zLmVuYWJsZU1vdXNlVHJhY2tpbmcsITApJiYoIWUuaG92ZXJQYW5lfHxpLnhBeGlzLnBhbmU9PT1lLmhvdmVyUGFuZSl9KTplLmhvdmVyUGFuZT12b2lkIDB9bGV0IE89e3BhbmU6e2NlbnRlcjpbXCI1MCVcIixcIjUwJVwiXSxzaXplOlwiODUlXCIsaW5uZXJTaXplOlwiMCVcIixzdGFydEFuZ2xlOjB9LGJhY2tncm91bmQ6e3NoYXBlOlwiY2lyY2xlXCIsYm9yZGVyUmFkaXVzOjAsYm9yZGVyV2lkdGg6MSxib3JkZXJDb2xvcjpcIiNjY2NjY2NcIixiYWNrZ3JvdW5kQ29sb3I6e2xpbmVhckdyYWRpZW50Ont4MTowLHkxOjAseDI6MCx5MjoxfSxzdG9wczpbWzAsXCIjZmZmZmZmXCJdLFsxLFwiI2U2ZTZlNlwiXV19LGZyb206LU51bWJlci5NQVhfVkFMVUUsaW5uZXJSYWRpdXM6MCx0bzpOdW1iZXIuTUFYX1ZBTFVFLG91dGVyUmFkaXVzOlwiMTA1JVwifX0se2V4dGVuZDpILG1lcmdlOkIsc3BsYXQ6V309eSgpO2NsYXNzIEZ7Y29uc3RydWN0b3IodCxlKXt0aGlzLmNvbGw9XCJwYW5lXCIsdGhpcy5pbml0KHQsZSl9aW5pdCh0LGUpe3RoaXMuY2hhcnQ9ZSx0aGlzLmJhY2tncm91bmQ9W10sZS5wYW5lLnB1c2godGhpcyksdGhpcy5zZXRPcHRpb25zKHQpfXNldE9wdGlvbnModCl7dGhpcy5vcHRpb25zPXQ9QihPLnBhbmUsdGhpcy5jaGFydC5hbmd1bGFyP3tiYWNrZ3JvdW5kOnt9fTp2b2lkIDAsdCl9cmVuZGVyKCl7bGV0IHQ9dGhpcy5vcHRpb25zLGU9dGhpcy5jaGFydC5yZW5kZXJlcjt0aGlzLmdyb3VwfHwodGhpcy5ncm91cD1lLmcoXCJwYW5lLWdyb3VwXCIpLmF0dHIoe3pJbmRleDp0LnpJbmRleHx8MH0pLmFkZCgpKSx0aGlzLnVwZGF0ZUNlbnRlcigpO2xldCBpPXRoaXMub3B0aW9ucy5iYWNrZ3JvdW5kO2lmKGkpe2xldCB0PU1hdGgubWF4KChpPVcoaSkpLmxlbmd0aCx0aGlzLmJhY2tncm91bmQubGVuZ3RofHwwKTtmb3IobGV0IGU9MDtlPHQ7ZSsrKWlbZV0mJnRoaXMuYXhpcz90aGlzLnJlbmRlckJhY2tncm91bmQoQihPLmJhY2tncm91bmQsaVtlXSksZSk6dGhpcy5iYWNrZ3JvdW5kW2VdJiYodGhpcy5iYWNrZ3JvdW5kW2VdPXRoaXMuYmFja2dyb3VuZFtlXS5kZXN0cm95KCksdGhpcy5iYWNrZ3JvdW5kLnNwbGljZShlLDEpKX19cmVuZGVyQmFja2dyb3VuZCh0LGUpe2xldCBpPXtjbGFzczpcImhpZ2hjaGFydHMtcGFuZSBcIisodC5jbGFzc05hbWV8fFwiXCIpfSxzPVwiYW5pbWF0ZVwiO3RoaXMuY2hhcnQuc3R5bGVkTW9kZXx8SChpLHtmaWxsOnQuYmFja2dyb3VuZENvbG9yLHN0cm9rZTp0LmJvcmRlckNvbG9yLFwic3Ryb2tlLXdpZHRoXCI6dC5ib3JkZXJXaWR0aH0pLHRoaXMuYmFja2dyb3VuZFtlXXx8KHRoaXMuYmFja2dyb3VuZFtlXT10aGlzLmNoYXJ0LnJlbmRlcmVyLnBhdGgoKS5hZGQodGhpcy5ncm91cCkscz1cImF0dHJcIiksdGhpcy5iYWNrZ3JvdW5kW2VdW3NdKHtkOnRoaXMuYXhpcy5nZXRQbG90QmFuZFBhdGgodC5mcm9tLHQudG8sdCl9KS5hdHRyKGkpfXVwZGF0ZUNlbnRlcih0KXt0aGlzLmNlbnRlcj0odHx8dGhpcy5heGlzfHx7fSkuY2VudGVyPVQuZ2V0Q2VudGVyLmNhbGwodGhpcyl9dXBkYXRlKHQsZSl7QighMCx0aGlzLm9wdGlvbnMsdCksdGhpcy5zZXRPcHRpb25zKHRoaXMub3B0aW9ucyksdGhpcy5yZW5kZXIoKSx0aGlzLmNoYXJ0LmF4ZXMuZm9yRWFjaChmdW5jdGlvbih0KXt0LnBhbmU9PT10aGlzJiYodC5wYW5lPW51bGwsdC51cGRhdGUoe30sZSkpfSx0aGlzKX19Ri5jb21wb3NlPWZ1bmN0aW9uKHQsZSl7bGV0IGk9dC5wcm90b3R5cGU7aS5nZXRIb3ZlclBhbmV8fChpLmNvbGxlY3Rpb25zV2l0aFVwZGF0ZS5wdXNoKFwicGFuZVwiKSxpLmdldEhvdmVyUGFuZT1JLEModCxcImFmdGVySXNJbnNpZGVQbG90XCIsRSksQyhlLFwiYWZ0ZXJHZXRIb3ZlckRhdGFcIix6KSxDKGUsXCJiZWZvcmVHZXRIb3ZlckRhdGFcIixEKSl9O2xldHthcmVhOntwcm90b3R5cGU6e3BvaW50Q2xhc3M6Ryxwb2ludENsYXNzOntwcm90b3R5cGU6cX19fX09UCgpLnNlcmllc1R5cGVzLHtkZWZpbmVkOlYsaXNOdW1iZXI6X309eSgpLFU9Y2xhc3MgZXh0ZW5kcyBHe3NldFN0YXRlKCl7bGV0IHQ9dGhpcy5zdGF0ZSxlPXRoaXMuc2VyaWVzLGk9ZS5jaGFydC5wb2xhcjtWKHRoaXMucGxvdEhpZ2gpfHwodGhpcy5wbG90SGlnaD1lLnlBeGlzLnRvUGl4ZWxzKHRoaXMuaGlnaCwhMCkpLFYodGhpcy5wbG90TG93KXx8KHRoaXMucGxvdExvdz10aGlzLnBsb3RZPWUueUF4aXMudG9QaXhlbHModGhpcy5sb3csITApKSxlLmxvd2VyU3RhdGVNYXJrZXJHcmFwaGljPWUuc3RhdGVNYXJrZXJHcmFwaGljLGUuc3RhdGVNYXJrZXJHcmFwaGljPWUudXBwZXJTdGF0ZU1hcmtlckdyYXBoaWMsdGhpcy5ncmFwaGljPXRoaXMuZ3JhcGhpY3MmJnRoaXMuZ3JhcGhpY3NbMV0sdGhpcy5wbG90WT10aGlzLnBsb3RIaWdoLGkmJl8odGhpcy5wbG90SGlnaFgpJiYodGhpcy5wbG90WD10aGlzLnBsb3RIaWdoWCkscS5zZXRTdGF0ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyksdGhpcy5zdGF0ZT10LHRoaXMucGxvdFk9dGhpcy5wbG90TG93LHRoaXMuZ3JhcGhpYz10aGlzLmdyYXBoaWNzJiZ0aGlzLmdyYXBoaWNzWzBdLGkmJl8odGhpcy5wbG90TG93WCkmJih0aGlzLnBsb3RYPXRoaXMucGxvdExvd1gpLGUudXBwZXJTdGF0ZU1hcmtlckdyYXBoaWM9ZS5zdGF0ZU1hcmtlckdyYXBoaWMsZS5zdGF0ZU1hcmtlckdyYXBoaWM9ZS5sb3dlclN0YXRlTWFya2VyR3JhcGhpYyxlLmxvd2VyU3RhdGVNYXJrZXJHcmFwaGljPXZvaWQgMDtsZXQgcz1lLm1vZGlmeU1hcmtlclNldHRpbmdzKCk7cS5zZXRTdGF0ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyksZS5yZXN0b3JlTWFya2VyU2V0dGluZ3Mocyl9aGFsb1BhdGgoKXtsZXQgdD10aGlzLnNlcmllcy5jaGFydC5wb2xhcixlPVtdO3JldHVybiB0aGlzLnBsb3RZPXRoaXMucGxvdExvdyx0JiZfKHRoaXMucGxvdExvd1gpJiYodGhpcy5wbG90WD10aGlzLnBsb3RMb3dYKSx0aGlzLmlzSW5zaWRlJiYoZT1xLmhhbG9QYXRoLmFwcGx5KHRoaXMsYXJndW1lbnRzKSksdGhpcy5wbG90WT10aGlzLnBsb3RIaWdoLHQmJl8odGhpcy5wbG90SGlnaFgpJiYodGhpcy5wbG90WD10aGlzLnBsb3RIaWdoWCksdGhpcy5pc1RvcEluc2lkZSYmKGU9ZS5jb25jYXQocS5oYWxvUGF0aC5hcHBseSh0aGlzLGFyZ3VtZW50cykpKSxlfWlzVmFsaWQoKXtyZXR1cm4gXyh0aGlzLmxvdykmJl8odGhpcy5oaWdoKX19LHtub29wOkt9PXkoKSx7YXJlYTpaLGFyZWE6e3Byb3RvdHlwZTpqfSxjb2x1bW46e3Byb3RvdHlwZTokfX09UCgpLnNlcmllc1R5cGVzLHthZGRFdmVudDpRLGRlZmluZWQ6SixleHRlbmQ6dHQsaXNBcnJheTp0ZSxpc051bWJlcjp0aSxwaWNrOnRzLG1lcmdlOnRvfT15KCk7Y2xhc3MgdGEgZXh0ZW5kcyBae3RvWURhdGEodCl7cmV0dXJuW3QubG93LHQuaGlnaF19aGlnaFRvWFkodCl7bGV0IGU9dGhpcy5jaGFydCxpPXRoaXMueEF4aXMucG9zdFRyYW5zbGF0ZSh0LnJlY3RQbG90WHx8MCx0aGlzLnlBeGlzLmxlbi0odC5wbG90SGlnaHx8MCkpO3QucGxvdEhpZ2hYPWkueC1lLnBsb3RMZWZ0LHQucGxvdEhpZ2g9aS55LWUucGxvdFRvcCx0LnBsb3RMb3dYPXQucGxvdFh9Z2V0R3JhcGhQYXRoKHQpe2xldCBlPVtdLGk9W10scz1qLmdldEdyYXBoUGF0aCxvPXRoaXMub3B0aW9ucyxhPXRoaXMuY2hhcnQucG9sYXIscj1hJiYhMSE9PW8uY29ubmVjdEVuZHMsbj1vLmNvbm5lY3ROdWxscyxsLGgscCxkPW8uc3RlcDtmb3IobD0odD10fHx0aGlzLnBvaW50cykubGVuZ3RoO2wtLTspe2g9dFtsXTtsZXQgcz1hP3twbG90WDpoLnJlY3RQbG90WCxwbG90WTpoLnlCb3R0b20sZG9DdXJ2ZTohMX06e3Bsb3RYOmgucGxvdFgscGxvdFk6aC5wbG90WSxkb0N1cnZlOiExfTtoLmlzTnVsbHx8cnx8bnx8dFtsKzFdJiYhdFtsKzFdLmlzTnVsbHx8aS5wdXNoKHMpLHA9e3BvbGFyUGxvdFk6aC5wb2xhclBsb3RZLHJlY3RQbG90WDpoLnJlY3RQbG90WCx5Qm90dG9tOmgueUJvdHRvbSxwbG90WDp0cyhoLnBsb3RIaWdoWCxoLnBsb3RYKSxwbG90WTpoLnBsb3RIaWdoLGlzTnVsbDpoLmlzTnVsbH0saS5wdXNoKHApLGUucHVzaChwKSxoLmlzTnVsbHx8cnx8bnx8dFtsLTFdJiYhdFtsLTFdLmlzTnVsbHx8aS5wdXNoKHMpfWxldCBjPXMuY2FsbCh0aGlzLHQpO2QmJighMD09PWQmJihkPVwibGVmdFwiKSxvLnN0ZXA9KHtsZWZ0OlwicmlnaHRcIixjZW50ZXI6XCJjZW50ZXJcIixyaWdodDpcImxlZnRcIn0pW2RdKTtsZXQgdT1zLmNhbGwodGhpcyxlKSxnPXMuY2FsbCh0aGlzLGkpO28uc3RlcD1kO2xldCBmPVtdLmNvbmNhdChjLHUpO3JldHVybiF0aGlzLmNoYXJ0LnBvbGFyJiZnWzBdJiZcIk1cIj09PWdbMF1bMF0mJihnWzBdPVtcIkxcIixnWzBdWzFdLGdbMF1bMl1dKSx0aGlzLmdyYXBoUGF0aD1mLHRoaXMuYXJlYVBhdGg9Yy5jb25jYXQoZyksZi5pc0FyZWE9ITAsZi54TWFwPWMueE1hcCx0aGlzLmFyZWFQYXRoLnhNYXA9Yy54TWFwLGZ9ZHJhd0RhdGFMYWJlbHMoKXtsZXQgdCxlLGkscyxvO2xldCBhPXRoaXMucG9pbnRzLHI9YS5sZW5ndGgsbj1bXSxsPXRoaXMub3B0aW9ucy5kYXRhTGFiZWxzLGg9dGhpcy5jaGFydC5pbnZlcnRlZDtpZihsKXtpZih0ZShsKT8ocz1sWzBdfHx7ZW5hYmxlZDohMX0sbz1sWzFdfHx7ZW5hYmxlZDohMX0pOigocz10dCh7fSxsKSkueD1sLnhIaWdoLHMueT1sLnlIaWdoLChvPXR0KHt9LGwpKS54PWwueExvdyxvLnk9bC55TG93KSxzLmVuYWJsZWR8fHRoaXMuaGFzRGF0YUxhYmVscz8uKCkpe2Zvcih0PXI7dC0tOylpZihlPWFbdF0pe2xldHtwbG90SGlnaDpvPTAscGxvdExvdzphPTB9PWU7aT1zLmluc2lkZT9vPGE6bz5hLGUueT1lLmhpZ2gsZS5fcGxvdFk9ZS5wbG90WSxlLnBsb3RZPW8sblt0XT1lLmRhdGFMYWJlbCxlLmRhdGFMYWJlbD1lLmRhdGFMYWJlbFVwcGVyLGUuYmVsb3c9aSxoP3MuYWxpZ258fChzLmFsaWduPWk/XCJyaWdodFwiOlwibGVmdFwiKTpzLnZlcnRpY2FsQWxpZ258fChzLnZlcnRpY2FsQWxpZ249aT9cInRvcFwiOlwiYm90dG9tXCIpfWZvcih0aGlzLm9wdGlvbnMuZGF0YUxhYmVscz1zLGouZHJhd0RhdGFMYWJlbHMmJmouZHJhd0RhdGFMYWJlbHMuYXBwbHkodGhpcyxhcmd1bWVudHMpLHQ9cjt0LS07KShlPWFbdF0pJiYoZS5kYXRhTGFiZWxVcHBlcj1lLmRhdGFMYWJlbCxlLmRhdGFMYWJlbD1uW3RdLGRlbGV0ZSBlLmRhdGFMYWJlbHMsZS55PWUubG93LGUucGxvdFk9ZS5fcGxvdFkpfWlmKG8uZW5hYmxlZHx8dGhpcy5oYXNEYXRhTGFiZWxzPy4oKSl7Zm9yKHQ9cjt0LS07KWlmKGU9YVt0XSl7bGV0e3Bsb3RIaWdoOnQ9MCxwbG90TG93OnM9MH09ZTtpPW8uaW5zaWRlP3Q8czp0PnMsZS5iZWxvdz0haSxoP28uYWxpZ258fChvLmFsaWduPWk/XCJsZWZ0XCI6XCJyaWdodFwiKTpvLnZlcnRpY2FsQWxpZ258fChvLnZlcnRpY2FsQWxpZ249aT9cImJvdHRvbVwiOlwidG9wXCIpfXRoaXMub3B0aW9ucy5kYXRhTGFiZWxzPW8sai5kcmF3RGF0YUxhYmVscyYmai5kcmF3RGF0YUxhYmVscy5hcHBseSh0aGlzLGFyZ3VtZW50cyl9aWYocy5lbmFibGVkKWZvcih0PXI7dC0tOykoZT1hW3RdKSYmKGUuZGF0YUxhYmVscz1bZS5kYXRhTGFiZWxVcHBlcixlLmRhdGFMYWJlbF0uZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVybiEhdH0pKTt0aGlzLm9wdGlvbnMuZGF0YUxhYmVscz1sfX1hbGlnbkRhdGFMYWJlbCgpeyQuYWxpZ25EYXRhTGFiZWwuYXBwbHkodGhpcyxhcmd1bWVudHMpfW1vZGlmeU1hcmtlclNldHRpbmdzKCl7bGV0IHQ9e21hcmtlcjp0aGlzLm9wdGlvbnMubWFya2VyLHN5bWJvbDp0aGlzLnN5bWJvbH07aWYodGhpcy5vcHRpb25zLmxvd01hcmtlcil7bGV0e29wdGlvbnM6e21hcmtlcjp0LGxvd01hcmtlcjplfX09dGhpczt0aGlzLm9wdGlvbnMubWFya2VyPXRvKHQsZSksZS5zeW1ib2wmJih0aGlzLnN5bWJvbD1lLnN5bWJvbCl9cmV0dXJuIHR9cmVzdG9yZU1hcmtlclNldHRpbmdzKHQpe3RoaXMub3B0aW9ucy5tYXJrZXI9dC5tYXJrZXIsdGhpcy5zeW1ib2w9dC5zeW1ib2x9ZHJhd1BvaW50cygpe2xldCB0LGU7bGV0IGk9dGhpcy5wb2ludHMubGVuZ3RoLHM9dGhpcy5tb2RpZnlNYXJrZXJTZXR0aW5ncygpO2ZvcihqLmRyYXdQb2ludHMuYXBwbHkodGhpcyxhcmd1bWVudHMpLHRoaXMucmVzdG9yZU1hcmtlclNldHRpbmdzKHMpLHQ9MDt0PGk7KShlPXRoaXMucG9pbnRzW3RdKS5ncmFwaGljcz1lLmdyYXBoaWNzfHxbXSxlLm9yaWdQcm9wcz17cGxvdFk6ZS5wbG90WSxwbG90WDplLnBsb3RYLGlzSW5zaWRlOmUuaXNJbnNpZGUsbmVnYXRpdmU6ZS5uZWdhdGl2ZSx6b25lOmUuem9uZSx5OmUueX0sKGUuZ3JhcGhpY3x8ZS5ncmFwaGljc1swXSkmJihlLmdyYXBoaWNzWzBdPWUuZ3JhcGhpYyksZS5ncmFwaGljPWUuZ3JhcGhpY3NbMV0sZS5wbG90WT1lLnBsb3RIaWdoLEooZS5wbG90SGlnaFgpJiYoZS5wbG90WD1lLnBsb3RIaWdoWCksZS55PXRzKGUuaGlnaCxlLm9yaWdQcm9wcy55KSxlLm5lZ2F0aXZlPWUueTwodGhpcy5vcHRpb25zLnRocmVzaG9sZHx8MCksdGhpcy56b25lcy5sZW5ndGgmJihlLnpvbmU9ZS5nZXRab25lKCkpLHRoaXMuY2hhcnQucG9sYXJ8fChlLmlzSW5zaWRlPWUuaXNUb3BJbnNpZGU9dm9pZCAwIT09ZS5wbG90WSYmZS5wbG90WT49MCYmZS5wbG90WTw9dGhpcy55QXhpcy5sZW4mJmUucGxvdFg+PTAmJmUucGxvdFg8PXRoaXMueEF4aXMubGVuKSx0Kys7Zm9yKGouZHJhd1BvaW50cy5hcHBseSh0aGlzLGFyZ3VtZW50cyksdD0wO3Q8aTspKGU9dGhpcy5wb2ludHNbdF0pLmdyYXBoaWNzPWUuZ3JhcGhpY3N8fFtdLChlLmdyYXBoaWN8fGUuZ3JhcGhpY3NbMV0pJiYoZS5ncmFwaGljc1sxXT1lLmdyYXBoaWMpLGUuZ3JhcGhpYz1lLmdyYXBoaWNzWzBdLGUub3JpZ1Byb3BzJiYodHQoZSxlLm9yaWdQcm9wcyksZGVsZXRlIGUub3JpZ1Byb3BzKSx0Kyt9aGFzTWFya2VyQ2hhbmdlZCh0LGUpe2xldCBpPXQubG93TWFya2VyLHM9ZS5sb3dNYXJrZXJ8fHt9O3JldHVybiBpJiYoITE9PT1pLmVuYWJsZWR8fHMuc3ltYm9sIT09aS5zeW1ib2x8fHMuaGVpZ2h0IT09aS5oZWlnaHR8fHMud2lkdGghPT1pLndpZHRoKXx8c3VwZXIuaGFzTWFya2VyQ2hhbmdlZCh0LGUpfX10YS5kZWZhdWx0T3B0aW9ucz10byhaLmRlZmF1bHRPcHRpb25zLHtsaW5lV2lkdGg6MSx0aHJlc2hvbGQ6bnVsbCx0b29sdGlwOntwb2ludEZvcm1hdDonPHNwYW4gc3R5bGU9XCJjb2xvcjp7c2VyaWVzLmNvbG9yfVwiPuKXjzwvc3Bhbj4ge3Nlcmllcy5uYW1lfTogPGI+e3BvaW50Lmxvd308L2I+IC0gPGI+e3BvaW50LmhpZ2h9PC9iPjxici8+J30sdHJhY2tCeUFyZWE6ITAsZGF0YUxhYmVsczp7YWxpZ246dm9pZCAwLHZlcnRpY2FsQWxpZ246dm9pZCAwLHhMb3c6MCx4SGlnaDowLHlMb3c6MCx5SGlnaDowfX0pLFEodGEsXCJhZnRlclRyYW5zbGF0ZVwiLGZ1bmN0aW9uKCl7XCJsb3csaGlnaFwiPT09dGhpcy5wb2ludEFycmF5TWFwLmpvaW4oXCIsXCIpJiZ0aGlzLnBvaW50cy5mb3JFYWNoKHQ9PntsZXQgZT10LmhpZ2gsaT10LnBsb3RZO3QuaXNOdWxsP3QucGxvdFk9dm9pZCAwOih0LnBsb3RMb3c9aSx0LnBsb3RIaWdoPXRpKGUpP3RoaXMueUF4aXMudHJhbnNsYXRlKHRoaXMuZGF0YU1vZGlmeT90aGlzLmRhdGFNb2RpZnkubW9kaWZ5VmFsdWUoZSk6ZSwhMSwhMCx2b2lkIDAsITApOnZvaWQgMCx0aGlzLmRhdGFNb2RpZnkmJih0LnlCb3R0b209dC5wbG90SGlnaCkpfSl9LHtvcmRlcjowfSksUSh0YSxcImFmdGVyVHJhbnNsYXRlXCIsZnVuY3Rpb24oKXt0aGlzLnBvaW50cy5mb3JFYWNoKHQ9PntpZih0aGlzLmNoYXJ0LnBvbGFyKXRoaXMuaGlnaFRvWFkodCksdC5wbG90TG93PXQucGxvdFksdC50b29sdGlwUG9zPVsoKHQucGxvdEhpZ2hYfHwwKSsodC5wbG90TG93WHx8MCkpLzIsKCh0LnBsb3RIaWdofHwwKSsodC5wbG90TG93fHwwKSkvMl07ZWxzZXtsZXQgZT10LnBvcyghMSx0LnBsb3RMb3cpLGk9dC5wb3MoITEsdC5wbG90SGlnaCk7ZSYmaSYmKGVbMF09KGVbMF0raVswXSkvMixlWzFdPShlWzFdK2lbMV0pLzIpLHQudG9vbHRpcFBvcz1lfX0pfSx7b3JkZXI6M30pLHR0KHRhLnByb3RvdHlwZSx7ZGVmZXJUcmFuc2xhdGVQb2xhcjohMCxwb2ludEFycmF5TWFwOltcImxvd1wiLFwiaGlnaFwiXSxwb2ludENsYXNzOlUscG9pbnRWYWxLZXk6XCJsb3dcIixzZXRTdGFja2VkUG9pbnRzOkt9KSxQKCkucmVnaXN0ZXJTZXJpZXNUeXBlKFwiYXJlYXJhbmdlXCIsdGEpO2xldCB0cj10YSx7c3BsaW5lOntwcm90b3R5cGU6dG59fT1QKCkuc2VyaWVzVHlwZXMse21lcmdlOnRsLGV4dGVuZDp0aH09eSgpO2NsYXNzIHRwIGV4dGVuZHMgdHJ7fXRwLmRlZmF1bHRPcHRpb25zPXRsKHRyLmRlZmF1bHRPcHRpb25zKSx0aCh0cC5wcm90b3R5cGUse2dldFBvaW50U3BsaW5lOnRuLmdldFBvaW50U3BsaW5lfSksUCgpLnJlZ2lzdGVyU2VyaWVzVHlwZShcImFyZWFzcGxpbmVyYW5nZVwiLHRwKTt2YXIgdGQ9Zig0NDgpLHRjPWYubih0ZCk7bGV0e25vb3A6dHV9PXkoKSx7Y3Jpc3A6dGcsZXh0ZW5kOnRmLG1lcmdlOnRtLHBpY2s6dGIscmVsYXRpdmVMZW5ndGg6dHl9PXkoKTtjbGFzcyB0eCBleHRlbmRzIHRjKCl7cG9pbnRBdHRyaWJzKCl7cmV0dXJue319Z2V0V2hpc2tlclBhaXIodCxlLGkscyxvKXtsZXQgYT1vLndoaXNrZXJzLnN0cm9rZVdpZHRoKCkscj0oaSxzKT0+e2xldCBvPXR5KGksMip0KS8yLHI9dGcocyxhKTtyZXR1cm5bW1wiTVwiLHRnKGUtbykscl0sW1wiTFwiLHRnKGUrbykscl1dfTtyZXR1cm5bLi4ucihpLG8uaGlnaFBsb3QpLC4uLnIocyxvLmxvd1Bsb3QpXX10cmFuc2xhdGUoKXtsZXQgdD10aGlzLnlBeGlzLGU9dGhpcy5wb2ludEFycmF5TWFwO3N1cGVyLnRyYW5zbGF0ZS5hcHBseSh0aGlzKSx0aGlzLnBvaW50cy5mb3JFYWNoKGZ1bmN0aW9uKGkpe2UuZm9yRWFjaChmdW5jdGlvbihlKXtudWxsIT09aVtlXSYmKGlbZStcIlBsb3RcIl09dC50cmFuc2xhdGUoaVtlXSwwLDEsMCwxKSl9KSxpLnBsb3RIaWdoPWkuaGlnaFBsb3R9KX1kcmF3UG9pbnRzKCl7bGV0IHQsZSxpLHMsbyxhLHIsbixsLGgscDtsZXQgZD10aGlzLnBvaW50cyxjPXRoaXMub3B0aW9ucyx1PXRoaXMuY2hhcnQsZz11LnJlbmRlcmVyLGY9ITEhPT10aGlzLmRvUXVhcnRpbGVzLG09dGhpcy5vcHRpb25zLndoaXNrZXJMZW5ndGg7Zm9yKGxldCBiIG9mIGQpe2xldCBkPShuPWIuZ3JhcGhpYyk/XCJhbmltYXRlXCI6XCJhdHRyXCIseT1iLnNoYXBlQXJncyx4PXt9LFA9e30sdj17fSxNPXt9LEw9Yi5jb2xvcnx8dGhpcy5jb2xvcixrPWIub3B0aW9ucy53aGlza2VyTGVuZ3RofHxtO2lmKHZvaWQgMCE9PWIucGxvdFkpe2xldCB3O2w9eS53aWR0aCxwPShoPXkueCkrbCx0PWY/Yi5xMVBsb3Q6Yi5sb3dQbG90LGU9Zj9iLnEzUGxvdDpiLmxvd1Bsb3QsaT1iLmhpZ2hQbG90LHM9Yi5sb3dQbG90LG58fChiLmdyYXBoaWM9bj1nLmcoXCJwb2ludFwiKS5hZGQodGhpcy5ncm91cCksYi5zdGVtPWcucGF0aCgpLmFkZENsYXNzKFwiaGlnaGNoYXJ0cy1ib3hwbG90LXN0ZW1cIikuYWRkKG4pLG0mJihiLndoaXNrZXJzPWcucGF0aCgpLmFkZENsYXNzKFwiaGlnaGNoYXJ0cy1ib3hwbG90LXdoaXNrZXJcIikuYWRkKG4pKSxmJiYoYi5ib3g9Zy5wYXRoKHIpLmFkZENsYXNzKFwiaGlnaGNoYXJ0cy1ib3hwbG90LWJveFwiKS5hZGQobikpLGIubWVkaWFuU2hhcGU9Zy5wYXRoKGEpLmFkZENsYXNzKFwiaGlnaGNoYXJ0cy1ib3hwbG90LW1lZGlhblwiKS5hZGQobikpLHUuc3R5bGVkTW9kZXx8KFAuc3Ryb2tlPWIuc3RlbUNvbG9yfHxjLnN0ZW1Db2xvcnx8TCxQW1wic3Ryb2tlLXdpZHRoXCJdPXRiKGIuc3RlbVdpZHRoLGMuc3RlbVdpZHRoLGMubGluZVdpZHRoKSxQLmRhc2hzdHlsZT1iLnN0ZW1EYXNoU3R5bGV8fGMuc3RlbURhc2hTdHlsZXx8Yy5kYXNoU3R5bGUsYi5zdGVtLmF0dHIoUCksayYmKHYuc3Ryb2tlPWIud2hpc2tlckNvbG9yfHxjLndoaXNrZXJDb2xvcnx8TCx2W1wic3Ryb2tlLXdpZHRoXCJdPXRiKGIud2hpc2tlcldpZHRoLGMud2hpc2tlcldpZHRoLGMubGluZVdpZHRoKSx2LmRhc2hzdHlsZT1iLndoaXNrZXJEYXNoU3R5bGV8fGMud2hpc2tlckRhc2hTdHlsZXx8Yy5kYXNoU3R5bGUsYi53aGlza2Vycy5hdHRyKHYpKSxmJiYoeC5maWxsPWIuZmlsbENvbG9yfHxjLmZpbGxDb2xvcnx8TCx4LnN0cm9rZT1jLmxpbmVDb2xvcnx8TCx4W1wic3Ryb2tlLXdpZHRoXCJdPWMubGluZVdpZHRofHwwLHguZGFzaHN0eWxlPWIuYm94RGFzaFN0eWxlfHxjLmJveERhc2hTdHlsZXx8Yy5kYXNoU3R5bGUsYi5ib3guYXR0cih4KSksTS5zdHJva2U9Yi5tZWRpYW5Db2xvcnx8Yy5tZWRpYW5Db2xvcnx8TCxNW1wic3Ryb2tlLXdpZHRoXCJdPXRiKGIubWVkaWFuV2lkdGgsYy5tZWRpYW5XaWR0aCxjLmxpbmVXaWR0aCksTS5kYXNoc3R5bGU9Yi5tZWRpYW5EYXNoU3R5bGV8fGMubWVkaWFuRGFzaFN0eWxlfHxjLmRhc2hTdHlsZSxiLm1lZGlhblNoYXBlLmF0dHIoTSkpO2xldCBBPXRnKChiLnBsb3RYfHwwKSsodGhpcy5wb2ludFhPZmZzZXR8fDApKyh0aGlzLmJhcld8fDApLzIsYi5zdGVtLnN0cm9rZVdpZHRoKCkpO2lmKHc9W1tcIk1cIixBLGVdLFtcIkxcIixBLGldLFtcIk1cIixBLHRdLFtcIkxcIixBLHNdXSxiLnN0ZW1bZF0oe2Q6d30pLGYpe2xldCBpPWIuYm94LnN0cm9rZVdpZHRoKCk7dD10Zyh0LGkpLGU9dGcoZSxpKSx3PVtbXCJNXCIsaD10ZyhoLGkpLGVdLFtcIkxcIixoLHRdLFtcIkxcIixwPXRnKHAsaSksdF0sW1wiTFwiLHAsZV0sW1wiTFwiLGgsZV0sW1wiWlwiXV0sYi5ib3hbZF0oe2Q6d30pfWlmKGspe2xldCB0PWwvMixlPXRoaXMuZ2V0V2hpc2tlclBhaXIodCxBLGIudXBwZXJXaGlza2VyTGVuZ3RoPz9jLnVwcGVyV2hpc2tlckxlbmd0aD8/ayxiLmxvd2VyV2hpc2tlckxlbmd0aD8/Yy5sb3dlcldoaXNrZXJMZW5ndGg/P2ssYik7Yi53aGlza2Vyc1tkXSh7ZDplfSl9dz1bW1wiTVwiLGgsbz10ZyhiLm1lZGlhblBsb3QsYi5tZWRpYW5TaGFwZS5zdHJva2VXaWR0aCgpKV0sW1wiTFwiLHAsb11dLGIubWVkaWFuU2hhcGVbZF0oe2Q6d30pfX19dG9ZRGF0YSh0KXtyZXR1cm5bdC5sb3csdC5xMSx0Lm1lZGlhbix0LnEzLHQuaGlnaF19fXR4LmRlZmF1bHRPcHRpb25zPXRtKHRjKCkuZGVmYXVsdE9wdGlvbnMse3RocmVzaG9sZDpudWxsLHRvb2x0aXA6e3BvaW50Rm9ybWF0Oic8c3BhbiBzdHlsZT1cImNvbG9yOntwb2ludC5jb2xvcn1cIj7il488L3NwYW4+IDxiPntzZXJpZXMubmFtZX08L2I+PGJyLz5NYXhpbXVtOiB7cG9pbnQuaGlnaH08YnIvPlVwcGVyIHF1YXJ0aWxlOiB7cG9pbnQucTN9PGJyLz5NZWRpYW46IHtwb2ludC5tZWRpYW59PGJyLz5Mb3dlciBxdWFydGlsZToge3BvaW50LnExfTxici8+TWluaW11bToge3BvaW50Lmxvd308YnIvPid9LHdoaXNrZXJMZW5ndGg6XCI1MCVcIixmaWxsQ29sb3I6XCIjZmZmZmZmXCIsbGluZVdpZHRoOjEsbWVkaWFuV2lkdGg6Mix3aGlza2VyV2lkdGg6Mn0pLHRmKHR4LnByb3RvdHlwZSx7cG9pbnRBcnJheU1hcDpbXCJsb3dcIixcInExXCIsXCJtZWRpYW5cIixcInEzXCIsXCJoaWdoXCJdLHBvaW50VmFsS2V5OlwiaGlnaFwiLGRyYXdEYXRhTGFiZWxzOnR1LHNldFN0YWNrZWRQb2ludHM6dHV9KSxQKCkucmVnaXN0ZXJTZXJpZXNUeXBlKFwiYm94cGxvdFwiLHR4KTtsZXQgdFA9dHgsdHY9e2JvcmRlckNvbG9yOnZvaWQgMCxib3JkZXJXaWR0aDoyLGNsYXNzTmFtZTp2b2lkIDAsY29sb3I6dm9pZCAwLGNvbm5lY3RvckNsYXNzTmFtZTp2b2lkIDAsY29ubmVjdG9yQ29sb3I6dm9pZCAwLGNvbm5lY3RvckRpc3RhbmNlOjYwLGNvbm5lY3RvcldpZHRoOjEsZW5hYmxlZDohMSxsYWJlbHM6e2NsYXNzTmFtZTp2b2lkIDAsYWxsb3dPdmVybGFwOiExLGZvcm1hdDpcIlwiLGZvcm1hdHRlcjp2b2lkIDAsYWxpZ246XCJyaWdodFwiLHN0eWxlOntmb250U2l6ZTpcIjAuOWVtXCIsY29sb3I6XCIjMDAwMDAwXCJ9LHg6MCx5OjB9LG1heFNpemU6NjAsbWluU2l6ZToxMCxsZWdlbmRJbmRleDowLHJhbmdlczp7dmFsdWU6dm9pZCAwLGJvcmRlckNvbG9yOnZvaWQgMCxjb2xvcjp2b2lkIDAsY29ubmVjdG9yQ29sb3I6dm9pZCAwfSxzaXplQnk6XCJhcmVhXCIsc2l6ZUJ5QWJzb2x1dGVWYWx1ZTohMSx6SW5kZXg6MSx6VGhyZXNob2xkOjB9O3ZhciB0TT1mKDYyMCksdEw9Zi5uKHRNKSx0az1mKDk4NCksdHc9Zi5uKHRrKTtsZXR7cGFyc2U6dEF9PXRMKCkse25vb3A6dFN9PXkoKSx7YXJyYXlNYXg6dFQsYXJyYXlNaW46dEMsaXNOdW1iZXI6dE4sbWVyZ2U6dFgscGljazp0WSxzdGFibGVTb3J0OnRJfT15KCksdFI9Y2xhc3N7Y29uc3RydWN0b3IodCxlKXt0aGlzLnNldFN0YXRlPXRTLHRoaXMuaW5pdCh0LGUpfWluaXQodCxlKXt0aGlzLm9wdGlvbnM9dCx0aGlzLnZpc2libGU9ITAsdGhpcy5jaGFydD1lLmNoYXJ0LHRoaXMubGVnZW5kPWV9YWRkVG9MZWdlbmQodCl7dC5zcGxpY2UodGhpcy5vcHRpb25zLmxlZ2VuZEluZGV4LDAsdGhpcyl9ZHJhd0xlZ2VuZFN5bWJvbCh0KXtsZXQgZTtsZXQgaT10WSh0Lm9wdGlvbnMuaXRlbURpc3RhbmNlLDIwKSxzPXRoaXMubGVnZW5kSXRlbXx8e30sbz10aGlzLm9wdGlvbnMsYT1vLnJhbmdlcyxyPW8uY29ubmVjdG9yRGlzdGFuY2U7aWYoIWF8fCFhLmxlbmd0aHx8IXROKGFbMF0udmFsdWUpKXt0Lm9wdGlvbnMuYnViYmxlTGVnZW5kLmF1dG9SYW5nZXM9ITA7cmV0dXJufXRJKGEsZnVuY3Rpb24odCxlKXtyZXR1cm4gZS52YWx1ZS10LnZhbHVlfSksdGhpcy5yYW5nZXM9YSx0aGlzLnNldE9wdGlvbnMoKSx0aGlzLnJlbmRlcigpO2xldCBuPXRoaXMuZ2V0TWF4TGFiZWxTaXplKCksbD10aGlzLnJhbmdlc1swXS5yYWRpdXMsaD0yKmw7ZT0oZT1yLWwrbi53aWR0aCk+MD9lOjAsdGhpcy5tYXhMYWJlbD1uLHRoaXMubW92ZW1lbnRYPVwibGVmdFwiPT09by5sYWJlbHMuYWxpZ24/ZTowLHMubGFiZWxXaWR0aD1oK2UraSxzLmxhYmVsSGVpZ2h0PWgrbi5oZWlnaHQvMn1zZXRPcHRpb25zKCl7bGV0IHQ9dGhpcy5yYW5nZXMsZT10aGlzLm9wdGlvbnMsaT10aGlzLmNoYXJ0LnNlcmllc1tlLnNlcmllc0luZGV4XSxzPXRoaXMubGVnZW5kLmJhc2VsaW5lLG89e3pJbmRleDplLnpJbmRleCxcInN0cm9rZS13aWR0aFwiOmUuYm9yZGVyV2lkdGh9LGE9e3pJbmRleDplLnpJbmRleCxcInN0cm9rZS13aWR0aFwiOmUuY29ubmVjdG9yV2lkdGh9LHI9e2FsaWduOnRoaXMubGVnZW5kLm9wdGlvbnMucnRsfHxcImxlZnRcIj09PWUubGFiZWxzLmFsaWduP1wicmlnaHRcIjpcImxlZnRcIix6SW5kZXg6ZS56SW5kZXh9LG49aS5vcHRpb25zLm1hcmtlci5maWxsT3BhY2l0eSxsPXRoaXMuY2hhcnQuc3R5bGVkTW9kZTt0LmZvckVhY2goZnVuY3Rpb24oaCxwKXtsfHwoby5zdHJva2U9dFkoaC5ib3JkZXJDb2xvcixlLmJvcmRlckNvbG9yLGkuY29sb3IpLG8uZmlsbD10WShoLmNvbG9yLGUuY29sb3IsMSE9PW4/dEEoaS5jb2xvcikuc2V0T3BhY2l0eShuKS5nZXQoXCJyZ2JhXCIpOmkuY29sb3IpLGEuc3Ryb2tlPXRZKGguY29ubmVjdG9yQ29sb3IsZS5jb25uZWN0b3JDb2xvcixpLmNvbG9yKSksdFtwXS5yYWRpdXM9dGhpcy5nZXRSYW5nZVJhZGl1cyhoLnZhbHVlKSx0W3BdPXRYKHRbcF0se2NlbnRlcjp0WzBdLnJhZGl1cy10W3BdLnJhZGl1cytzfSksbHx8dFgoITAsdFtwXSx7YnViYmxlQXR0cmliczp0WChvKSxjb25uZWN0b3JBdHRyaWJzOnRYKGEpLGxhYmVsQXR0cmliczpyfSl9LHRoaXMpfWdldFJhbmdlUmFkaXVzKHQpe2xldCBlPXRoaXMub3B0aW9ucyxpPXRoaXMub3B0aW9ucy5zZXJpZXNJbmRleCxzPXRoaXMuY2hhcnQuc2VyaWVzW2ldLG89ZS5yYW5nZXNbMF0udmFsdWUsYT1lLnJhbmdlc1tlLnJhbmdlcy5sZW5ndGgtMV0udmFsdWUscj1lLm1pblNpemUsbj1lLm1heFNpemU7cmV0dXJuIHMuZ2V0UmFkaXVzLmNhbGwodGhpcyxhLG8scixuLHQpfXJlbmRlcigpe2xldCB0PXRoaXMubGVnZW5kSXRlbXx8e30sZT10aGlzLmNoYXJ0LnJlbmRlcmVyLGk9dGhpcy5vcHRpb25zLnpUaHJlc2hvbGQ7Zm9yKGxldCBzIG9mKHRoaXMuc3ltYm9sc3x8KHRoaXMuc3ltYm9scz17Y29ubmVjdG9yczpbXSxidWJibGVJdGVtczpbXSxsYWJlbHM6W119KSx0LnN5bWJvbD1lLmcoXCJidWJibGUtbGVnZW5kXCIpLHQubGFiZWw9ZS5nKFwiYnViYmxlLWxlZ2VuZC1pdGVtXCIpLmNzcyh0aGlzLmxlZ2VuZC5pdGVtU3R5bGV8fHt9KSx0LnN5bWJvbC50cmFuc2xhdGVYPTAsdC5zeW1ib2wudHJhbnNsYXRlWT0wLHQuc3ltYm9sLmFkZCh0LmxhYmVsKSx0LmxhYmVsLmFkZCh0Lmdyb3VwKSx0aGlzLnJhbmdlcykpcy52YWx1ZT49aSYmdGhpcy5yZW5kZXJSYW5nZShzKTt0aGlzLmhpZGVPdmVybGFwcGluZ0xhYmVscygpfXJlbmRlclJhbmdlKHQpe2xldCBlPXRoaXMucmFuZ2VzWzBdLGk9dGhpcy5sZWdlbmQscz10aGlzLm9wdGlvbnMsbz1zLmxhYmVscyxhPXRoaXMuY2hhcnQscj1hLnNlcmllc1tzLnNlcmllc0luZGV4XSxuPWEucmVuZGVyZXIsbD10aGlzLnN5bWJvbHMsaD1sLmxhYmVscyxwPXQuY2VudGVyLGQ9TWF0aC5hYnModC5yYWRpdXMpLGM9cy5jb25uZWN0b3JEaXN0YW5jZXx8MCx1PW8uYWxpZ24sZz1pLm9wdGlvbnMucnRsLGY9cy5ib3JkZXJXaWR0aCxtPXMuY29ubmVjdG9yV2lkdGgsYj1lLnJhZGl1c3x8MCx5PXAtZC1mLzIrbS8yLHg9KHklMT8xOi41KS0obSUyPzA6LjUpLFA9bi5zdHlsZWRNb2RlLHY9Z3x8XCJsZWZ0XCI9PT11Py1jOmM7XCJjZW50ZXJcIj09PXUmJih2PTAscy5jb25uZWN0b3JEaXN0YW5jZT0wLHQubGFiZWxBdHRyaWJzLmFsaWduPVwiY2VudGVyXCIpLGwuYnViYmxlSXRlbXMucHVzaChuLmNpcmNsZShiLHAreCxkKS5hdHRyKFA/e306dC5idWJibGVBdHRyaWJzKS5hZGRDbGFzcygoUD9cImhpZ2hjaGFydHMtY29sb3ItXCIrci5jb2xvckluZGV4K1wiIFwiOlwiXCIpK1wiaGlnaGNoYXJ0cy1idWJibGUtbGVnZW5kLXN5bWJvbCBcIisocy5jbGFzc05hbWV8fFwiXCIpKS5hZGQodGhpcy5sZWdlbmRJdGVtLnN5bWJvbCkpLGwuY29ubmVjdG9ycy5wdXNoKG4ucGF0aChuLmNyaXNwTGluZShbW1wiTVwiLGIseV0sW1wiTFwiLGIrdix5XV0scy5jb25uZWN0b3JXaWR0aCkpLmF0dHIoUD97fTp0LmNvbm5lY3RvckF0dHJpYnMpLmFkZENsYXNzKChQP1wiaGlnaGNoYXJ0cy1jb2xvci1cIit0aGlzLm9wdGlvbnMuc2VyaWVzSW5kZXgrXCIgXCI6XCJcIikrXCJoaWdoY2hhcnRzLWJ1YmJsZS1sZWdlbmQtY29ubmVjdG9ycyBcIisocy5jb25uZWN0b3JDbGFzc05hbWV8fFwiXCIpKS5hZGQodGhpcy5sZWdlbmRJdGVtLnN5bWJvbCkpO2xldCBNPW4udGV4dCh0aGlzLmZvcm1hdExhYmVsKHQpKS5hdHRyKFA/e306dC5sYWJlbEF0dHJpYnMpLmNzcyhQP3t9Om8uc3R5bGUpLmFkZENsYXNzKFwiaGlnaGNoYXJ0cy1idWJibGUtbGVnZW5kLWxhYmVscyBcIisocy5sYWJlbHMuY2xhc3NOYW1lfHxcIlwiKSkuYWRkKHRoaXMubGVnZW5kSXRlbS5zeW1ib2wpLEw9e3g6Yit2K3MubGFiZWxzLngseTp5K3MubGFiZWxzLnkrLjQqTS5nZXRCQm94KCkuaGVpZ2h0fTtNLmF0dHIoTCksaC5wdXNoKE0pLE0ucGxhY2VkPSEwLE0uYWxpZ25BdHRyPUx9Z2V0TWF4TGFiZWxTaXplKCl7bGV0IHQsZTtyZXR1cm4gdGhpcy5zeW1ib2xzLmxhYmVscy5mb3JFYWNoKGZ1bmN0aW9uKGkpe2U9aS5nZXRCQm94KCEwKSx0PXQ/ZS53aWR0aD50LndpZHRoP2U6dDplfSksdHx8e319Zm9ybWF0TGFiZWwodCl7bGV0IGU9dGhpcy5vcHRpb25zLGk9ZS5sYWJlbHMuZm9ybWF0dGVyLHM9ZS5sYWJlbHMuZm9ybWF0LHtudW1iZXJGb3JtYXR0ZXI6b309dGhpcy5jaGFydDtyZXR1cm4gcz90dygpLmZvcm1hdChzLHQsdGhpcy5jaGFydCk6aT9pLmNhbGwodCk6byh0LnZhbHVlLDEpfWhpZGVPdmVybGFwcGluZ0xhYmVscygpe2xldCB0PXRoaXMuY2hhcnQsZT10aGlzLm9wdGlvbnMubGFiZWxzLmFsbG93T3ZlcmxhcCxpPXRoaXMuc3ltYm9sczshZSYmaSYmKHQuaGlkZU92ZXJsYXBwaW5nTGFiZWxzKGkubGFiZWxzKSxpLmxhYmVscy5mb3JFYWNoKGZ1bmN0aW9uKHQsZSl7dC5uZXdPcGFjaXR5P3QubmV3T3BhY2l0eSE9PXQub2xkT3BhY2l0eSYmaS5jb25uZWN0b3JzW2VdLnNob3coKTppLmNvbm5lY3RvcnNbZV0uaGlkZSgpfSkpfWdldFJhbmdlcygpe2xldCB0PXRoaXMubGVnZW5kLmJ1YmJsZUxlZ2VuZCxlPXQuY2hhcnQuc2VyaWVzLGk9dC5vcHRpb25zLnJhbmdlcyxzLG8sYT1OdW1iZXIuTUFYX1ZBTFVFLHI9LU51bWJlci5NQVhfVkFMVUU7cmV0dXJuIGUuZm9yRWFjaChmdW5jdGlvbih0KXt0LmlzQnViYmxlJiYhdC5pZ25vcmVTZXJpZXMmJihvPXQuZ2V0Q29sdW1uKFwielwiKS5maWx0ZXIodE4pKS5sZW5ndGgmJihhPXRZKHQub3B0aW9ucy56TWluLE1hdGgubWluKGEsTWF0aC5tYXgodEMobyksITE9PT10Lm9wdGlvbnMuZGlzcGxheU5lZ2F0aXZlP3Qub3B0aW9ucy56VGhyZXNob2xkOi1OdW1iZXIuTUFYX1ZBTFVFKSkpLHI9dFkodC5vcHRpb25zLnpNYXgsTWF0aC5tYXgocix0VChvKSkpKX0pLHM9YT09PXI/W3t2YWx1ZTpyfV06W3t2YWx1ZTphfSx7dmFsdWU6KGErcikvMn0se3ZhbHVlOnIsYXV0b1JhbmdlczohMH1dLGkubGVuZ3RoJiZpWzBdLnJhZGl1cyYmcy5yZXZlcnNlKCkscy5mb3JFYWNoKGZ1bmN0aW9uKHQsZSl7aSYmaVtlXSYmKHNbZV09dFgoaVtlXSx0KSl9KSxzfXByZWRpY3RCdWJibGVTaXplcygpe2xldCB0PXRoaXMuY2hhcnQsZT10LmxlZ2VuZC5vcHRpb25zLGk9ZS5mbG9hdGluZyxzPVwiaG9yaXpvbnRhbFwiPT09ZS5sYXlvdXQsbz1zP3QubGVnZW5kLmxhc3RMaW5lSGVpZ2h0OjAsYT10LnBsb3RTaXplWCxyPXQucGxvdFNpemVZLG49dC5zZXJpZXNbdGhpcy5vcHRpb25zLnNlcmllc0luZGV4XSxsPW4uZ2V0UHhFeHRyZW1lcygpLGg9TWF0aC5jZWlsKGwubWluUHhTaXplKSxwPU1hdGguY2VpbChsLm1heFB4U2l6ZSksZD1NYXRoLm1pbihyLGEpLGMsdT1uLm9wdGlvbnMubWF4U2l6ZTtyZXR1cm4gaXx8IS8lJC8udGVzdCh1KT9jPXA6KGM9KGQrbykqKHU9cGFyc2VGbG9hdCh1KSkvMTAwLyh1LzEwMCsxKSwocyYmci1jPj1hfHwhcyYmYS1jPj1yKSYmKGM9cCkpLFtoLE1hdGguY2VpbChjKV19dXBkYXRlUmFuZ2VzKHQsZSl7bGV0IGk9dGhpcy5sZWdlbmQub3B0aW9ucy5idWJibGVMZWdlbmQ7aS5taW5TaXplPXQsaS5tYXhTaXplPWUsaS5yYW5nZXM9dGhpcy5nZXRSYW5nZXMoKX1jb3JyZWN0U2l6ZXMoKXtsZXQgdD10aGlzLmxlZ2VuZCxlPXRoaXMuY2hhcnQuc2VyaWVzW3RoaXMub3B0aW9ucy5zZXJpZXNJbmRleF0uZ2V0UHhFeHRyZW1lcygpO01hdGguYWJzKE1hdGguY2VpbChlLm1heFB4U2l6ZSktdGhpcy5vcHRpb25zLm1heFNpemUpPjEmJih0aGlzLnVwZGF0ZVJhbmdlcyh0aGlzLm9wdGlvbnMubWluU2l6ZSxlLm1heFB4U2l6ZSksdC5yZW5kZXIoKSl9fSx7c2V0T3B0aW9uczp0RX09eSgpLHtjb21wb3NlZDp0en09eSgpLHthZGRFdmVudDp0RCxvYmplY3RFYWNoOnRPLHB1c2hVbmlxdWU6dEgsd3JhcDp0Qn09eSgpO2Z1bmN0aW9uIHRXKHQsZSxpKXtsZXQgcyxvLGE7bGV0IHI9dGhpcy5sZWdlbmQsbj10Rih0aGlzKT49MDtyJiZyLm9wdGlvbnMuZW5hYmxlZCYmci5idWJibGVMZWdlbmQmJnIub3B0aW9ucy5idWJibGVMZWdlbmQuYXV0b1JhbmdlcyYmbj8ocz1yLmJ1YmJsZUxlZ2VuZC5vcHRpb25zLG89ci5idWJibGVMZWdlbmQucHJlZGljdEJ1YmJsZVNpemVzKCksci5idWJibGVMZWdlbmQudXBkYXRlUmFuZ2VzKG9bMF0sb1sxXSkscy5wbGFjZWR8fChyLmdyb3VwLnBsYWNlZD0hMSxyLmFsbEl0ZW1zLmZvckVhY2godD0+eyhhPXQubGVnZW5kSXRlbXx8e30pLmdyb3VwJiYoYS5ncm91cC50cmFuc2xhdGVZPXZvaWQgMCl9KSksci5yZW5kZXIoKSxzLnBsYWNlZHx8KHRoaXMuZ2V0TWFyZ2lucygpLHRoaXMuYXhlcy5mb3JFYWNoKHQ9Pnt0LnNldFNjYWxlKCksdC51cGRhdGVOYW1lcygpLHRPKHQudGlja3MsZnVuY3Rpb24odCl7dC5pc05ldz0hMCx0LmlzTmV3TGFiZWw9ITB9KX0pLHRoaXMuZ2V0TWFyZ2lucygpKSxzLnBsYWNlZD0hMCx0LmNhbGwodGhpcyxlLGkpLHIuYnViYmxlTGVnZW5kLmNvcnJlY3RTaXplcygpLHRfKHIsdEcocikpKToodC5jYWxsKHRoaXMsZSxpKSxyJiZyLm9wdGlvbnMuZW5hYmxlZCYmci5idWJibGVMZWdlbmQmJihyLnJlbmRlcigpLHRfKHIsdEcocikpKSl9ZnVuY3Rpb24gdEYodCl7bGV0IGU9dC5zZXJpZXMsaT0wO2Zvcig7aTxlLmxlbmd0aDspe2lmKGVbaV0mJmVbaV0uaXNCdWJibGUmJmVbaV0udmlzaWJsZSYmZVtpXS5kYXRhVGFibGUucm93Q291bnQpcmV0dXJuIGk7aSsrfXJldHVybiAtMX1mdW5jdGlvbiB0Ryh0KXtsZXQgZT10LmFsbEl0ZW1zLGk9W10scz1lLmxlbmd0aCxvLGEscixuPTAsbD0wO2ZvcihuPTA7bjxzO24rKylpZihhPWVbbl0ubGVnZW5kSXRlbXx8e30scj0oZVtuKzFdfHx7fSkubGVnZW5kSXRlbXx8e30sYS5sYWJlbEhlaWdodCYmKGVbbl0uaXRlbUhlaWdodD1hLmxhYmVsSGVpZ2h0KSxlW25dPT09ZVtzLTFdfHxhLnkhPT1yLnkpe2ZvcihpLnB1c2goe2hlaWdodDowfSksbz1pW2kubGVuZ3RoLTFdO2w8PW47bCsrKWVbbF0uaXRlbUhlaWdodD5vLmhlaWdodCYmKG8uaGVpZ2h0PWVbbF0uaXRlbUhlaWdodCk7by5zdGVwPW59cmV0dXJuIGl9ZnVuY3Rpb24gdHEodCl7bGV0IGU9dGhpcy5idWJibGVMZWdlbmQsaT10aGlzLm9wdGlvbnMscz1pLmJ1YmJsZUxlZ2VuZCxvPXRGKHRoaXMuY2hhcnQpO2UmJmUucmFuZ2VzJiZlLnJhbmdlcy5sZW5ndGgmJihzLnJhbmdlcy5sZW5ndGgmJihzLmF1dG9SYW5nZXM9ISFzLnJhbmdlc1swXS5hdXRvUmFuZ2VzKSx0aGlzLmRlc3Ryb3lJdGVtKGUpKSxvPj0wJiZpLmVuYWJsZWQmJnMuZW5hYmxlZCYmKHMuc2VyaWVzSW5kZXg9byx0aGlzLmJ1YmJsZUxlZ2VuZD1uZXcgdFIocyx0aGlzKSx0aGlzLmJ1YmJsZUxlZ2VuZC5hZGRUb0xlZ2VuZCh0LmFsbEl0ZW1zKSl9ZnVuY3Rpb24gdFYodCl7bGV0IGU7aWYodC5kZWZhdWx0UHJldmVudGVkKXJldHVybiExO2xldCBpPXQubGVnZW5kSXRlbSxzPXRoaXMuY2hhcnQsbz1pLnZpc2libGU7dGhpcyYmdGhpcy5idWJibGVMZWdlbmQmJihpLnZpc2libGU9IW8saS5pZ25vcmVTZXJpZXM9byxlPXRGKHMpPj0wLHRoaXMuYnViYmxlTGVnZW5kLnZpc2libGUhPT1lJiYodGhpcy51cGRhdGUoe2J1YmJsZUxlZ2VuZDp7ZW5hYmxlZDplfX0pLHRoaXMuYnViYmxlTGVnZW5kLnZpc2libGU9ZSksaS52aXNpYmxlPW8pfWZ1bmN0aW9uIHRfKHQsZSl7bGV0IGk9dC5hbGxJdGVtcyxzPXQub3B0aW9ucy5ydGwsbyxhLHIsbixsPTA7aS5mb3JFYWNoKCh0LGkpPT57KG49dC5sZWdlbmRJdGVtfHx7fSkuZ3JvdXAmJihvPW4uZ3JvdXAudHJhbnNsYXRlWHx8MCxhPW4ueXx8MCwoKHI9dC5tb3ZlbWVudFgpfHxzJiZ0LnJhbmdlcykmJihyPXM/by10Lm9wdGlvbnMubWF4U2l6ZS8yOm8rcixuLmdyb3VwLmF0dHIoe3RyYW5zbGF0ZVg6cn0pKSxpPmVbbF0uc3RlcCYmbCsrLG4uZ3JvdXAuYXR0cih7dHJhbnNsYXRlWTpNYXRoLnJvdW5kKGErZVtsXS5oZWlnaHQvMil9KSxuLnk9YStlW2xdLmhlaWdodC8yKX0pfWxldCB0VT17Y29tcG9zZTpmdW5jdGlvbih0LGUpe3RIKHR6LFwiU2VyaWVzLkJ1YmJsZUxlZ2VuZFwiKSYmKHRFKHtsZWdlbmQ6e2J1YmJsZUxlZ2VuZDp0dn19KSx0Qih0LnByb3RvdHlwZSxcImRyYXdDaGFydEJveFwiLHRXKSx0RChlLFwiYWZ0ZXJHZXRBbGxJdGVtc1wiLHRxKSx0RChlLFwiaXRlbUNsaWNrXCIsdFYpKX19O3ZhciB0Sz1mKDI2MCksdFo9Zi5uKHRLKTtsZXR7c2VyaWVzVHlwZXM6e3NjYXR0ZXI6e3Byb3RvdHlwZTp7cG9pbnRDbGFzczp0an19fX09UCgpLHtleHRlbmQ6dCR9PXkoKTtjbGFzcyB0USBleHRlbmRzIHRqe2hhbG9QYXRoKHQpe2xldCBlPSh0JiZ0aGlzLm1hcmtlciYmdGhpcy5tYXJrZXIucmFkaXVzfHwwKSt0O2lmKHRoaXMuc2VyaWVzLmNoYXJ0LmludmVydGVkKXtsZXQgdD10aGlzLnBvcygpfHxbMCwwXSx7eEF4aXM6aSx5QXhpczpzLGNoYXJ0Om99PXRoaXMuc2VyaWVzO3JldHVybiBvLnJlbmRlcmVyLnN5bWJvbHMuY2lyY2xlKGkubGVuLXRbMV0tZSxzLmxlbi10WzBdLWUsMiplLDIqZSl9cmV0dXJuIHRaKCkucHJvdG90eXBlLmhhbG9QYXRoLmNhbGwodGhpcyxlKX19dCQodFEucHJvdG90eXBlLHt0dEJlbG93OiExfSk7bGV0e3BhcnNlOnRKfT10TCgpLHtjb21wb3NlZDp0MCxub29wOnQxfT15KCkse3Nlcmllczp0MixzZXJpZXNUeXBlczp7Y29sdW1uOntwcm90b3R5cGU6dDN9LHNjYXR0ZXI6dDV9fT1QKCkse2FkZEV2ZW50OnQ4LGFycmF5TWF4OnQ2LGFycmF5TWluOnQ0LGNsYW1wOnQ5LGV4dGVuZDp0Nyxpc051bWJlcjpldCxtZXJnZTplZSxwaWNrOmVpLHB1c2hVbmlxdWU6ZXN9PXkoKTtmdW5jdGlvbiBlbygpe2xldCB0PXRoaXMubGVuLHtjb2xsOmUsaXNYQXhpczppLG1pbjpzfT10aGlzLG89KHRoaXMubWF4fHwwKS0oc3x8MCksYT0wLHI9dCxuPXQvbyxsOyhcInhBeGlzXCI9PT1lfHxcInlBeGlzXCI9PT1lKSYmKHRoaXMuc2VyaWVzLmZvckVhY2godD0+e2lmKHQuYnViYmxlUGFkZGluZyYmdC5yZXNlcnZlU3BhY2UoKSl7dGhpcy5hbGxvd1pvb21PdXRzaWRlPSEwLGw9ITA7bGV0IGU9dC5nZXRDb2x1bW4oaT9cInhcIjpcInlcIik7aWYoaSYmKCh0Lm9uUG9pbnR8fHQpLmdldFJhZGlpKDAsMCx0KSx0Lm9uUG9pbnQmJih0LnJhZGlpPXQub25Qb2ludC5yYWRpaSkpLG8+MCl7bGV0IGk9ZS5sZW5ndGg7Zm9yKDtpLS07KWlmKGV0KGVbaV0pJiZ0aGlzLmRhdGFNaW48PWVbaV0mJmVbaV08PXRoaXMubWF4KXtsZXQgbz10LnJhZGlpJiZ0LnJhZGlpW2ldfHwwO2E9TWF0aC5taW4oKGVbaV0tcykqbi1vLGEpLHI9TWF0aC5tYXgoKGVbaV0tcykqbitvLHIpfX19fSksbCYmbz4wJiYhdGhpcy5sb2dhcml0aG1pYyYmKHItPXQsbio9KHQrTWF0aC5tYXgoMCxhKS1NYXRoLm1pbihyLHQpKS90LFtbXCJtaW5cIixcInVzZXJNaW5cIixhXSxbXCJtYXhcIixcInVzZXJNYXhcIixyXV0uZm9yRWFjaCh0PT57dm9pZCAwPT09ZWkodGhpcy5vcHRpb25zW3RbMF1dLHRoaXNbdFsxXV0pJiYodGhpc1t0WzBdXSs9dFsyXS9uKX0pKSl9ZnVuY3Rpb24gZWEoKXtsZXR7dGlja3M6dCx0aWNrUG9zaXRpb25zOmUsZGF0YU1pbjppPTAsZGF0YU1heDpzPTAsY2F0ZWdvcmllczpvfT10aGlzLGE9dGhpcy5vcHRpb25zLnR5cGU7aWYoKG8/Lmxlbmd0aHx8XCJjYXRlZ29yeVwiPT09YSkmJnRoaXMuc2VyaWVzLmZpbmQodD0+dC5idWJibGVQYWRkaW5nKSl7bGV0IG89ZS5sZW5ndGg7Zm9yKDtvLS07KXtsZXQgYT10W2Vbb11dLHI9YS5wb3N8fDA7KHI+c3x8cjxpKSYmYS5sYWJlbD8uaGlkZSgpfX19Y2xhc3MgZXIgZXh0ZW5kcyB0NXtzdGF0aWMgY29tcG9zZSh0LGUsaSl7dFUuY29tcG9zZShlLGkpLGVzKHQwLFwiU2VyaWVzLkJ1YmJsZVwiKSYmKHQ4KHQsXCJmb3VuZEV4dHJlbWVzXCIsZW8pLHQ4KHQsXCJhZnRlclJlbmRlclwiLGVhKSl9YW5pbWF0ZSh0KXshdCYmdGhpcy5wb2ludHMubGVuZ3RoPHRoaXMub3B0aW9ucy5hbmltYXRpb25MaW1pdCYmdGhpcy5wb2ludHMuZm9yRWFjaChmdW5jdGlvbih0KXtsZXR7Z3JhcGhpYzplLHBsb3RYOmk9MCxwbG90WTpzPTB9PXQ7ZSYmZS53aWR0aCYmKHRoaXMuaGFzUmVuZGVyZWR8fGUuYXR0cih7eDppLHk6cyx3aWR0aDoxLGhlaWdodDoxfSksZS5hbmltYXRlKHRoaXMubWFya2VyQXR0cmlicyh0KSx0aGlzLm9wdGlvbnMuYW5pbWF0aW9uKSl9LHRoaXMpfWdldFJhZGlpKCl7bGV0IHQ9dGhpcy5nZXRDb2x1bW4oXCJ6XCIpLGU9dGhpcy5nZXRDb2x1bW4oXCJ5XCIpLGk9W10scyxvLGEscj10aGlzLmNoYXJ0LmJ1YmJsZVpFeHRyZW1lcyx7bWluUHhTaXplOm4sbWF4UHhTaXplOmx9PXRoaXMuZ2V0UHhFeHRyZW1lcygpO2lmKCFyKXtsZXQgdCxlPU51bWJlci5NQVhfVkFMVUUsaT0tTnVtYmVyLk1BWF9WQUxVRTt0aGlzLmNoYXJ0LnNlcmllcy5mb3JFYWNoKHM9PntpZihzLmJ1YmJsZVBhZGRpbmcmJnMucmVzZXJ2ZVNwYWNlKCkpe2xldCBvPShzLm9uUG9pbnR8fHMpLmdldFpFeHRyZW1lcygpO28mJihlPU1hdGgubWluKGVpKGUsby56TWluKSxvLnpNaW4pLGk9TWF0aC5tYXgoZWkoaSxvLnpNYXgpLG8uek1heCksdD0hMCl9fSksdD8ocj17ek1pbjplLHpNYXg6aX0sdGhpcy5jaGFydC5idWJibGVaRXh0cmVtZXM9cik6cj17ek1pbjowLHpNYXg6MH19Zm9yKG89MCxzPXQubGVuZ3RoO288cztvKyspYT10W29dLGkucHVzaCh0aGlzLmdldFJhZGl1cyhyLnpNaW4sci56TWF4LG4sbCxhLGUmJmVbb10pKTt0aGlzLnJhZGlpPWl9Z2V0UmFkaXVzKHQsZSxpLHMsbyxhKXtsZXQgcj10aGlzLm9wdGlvbnMsbj1cIndpZHRoXCIhPT1yLnNpemVCeSxsPXIuelRocmVzaG9sZCxoPWUtdCxwPS41O2lmKG51bGw9PT1hfHxudWxsPT09bylyZXR1cm4gbnVsbDtpZihldChvKSl7aWYoci5zaXplQnlBYnNvbHV0ZVZhbHVlJiYobz1NYXRoLmFicyhvLWwpLGU9aD1NYXRoLm1heChlLWwsTWF0aC5hYnModC1sKSksdD0wKSxvPHQpcmV0dXJuIGkvMi0xO2g+MCYmKHA9KG8tdCkvaCl9cmV0dXJuIG4mJnA+PTAmJihwPU1hdGguc3FydChwKSksTWF0aC5jZWlsKGkrcCoocy1pKSkvMn1oYXNEYXRhKCl7cmV0dXJuISF0aGlzLmRhdGFUYWJsZS5yb3dDb3VudH1tYXJrZXJBdHRyaWJzKHQsZSl7bGV0IGk9c3VwZXIubWFya2VyQXR0cmlicyh0LGUpLHtoZWlnaHQ6cz0wLHdpZHRoOm89MH09aTtyZXR1cm4gdGhpcy5jaGFydC5pbnZlcnRlZD90NyhpLHt4Oih0LnBsb3RYfHwwKS1vLzIseToodC5wbG90WXx8MCktcy8yfSk6aX1wb2ludEF0dHJpYnModCxlKXtsZXQgaT10aGlzLm9wdGlvbnMubWFya2VyLmZpbGxPcGFjaXR5LHM9dDIucHJvdG90eXBlLnBvaW50QXR0cmlicy5jYWxsKHRoaXMsdCxlKTtyZXR1cm4gMSE9PWkmJihzLmZpbGw9dEoocy5maWxsKS5zZXRPcGFjaXR5KGkpLmdldChcInJnYmFcIikpLHN9dHJhbnNsYXRlKCl7c3VwZXIudHJhbnNsYXRlLmNhbGwodGhpcyksdGhpcy5nZXRSYWRpaSgpLHRoaXMudHJhbnNsYXRlQnViYmxlKCl9dHJhbnNsYXRlQnViYmxlKCl7bGV0e2RhdGE6dCxvcHRpb25zOmUscmFkaWk6aX09dGhpcyx7bWluUHhTaXplOnN9PXRoaXMuZ2V0UHhFeHRyZW1lcygpLG89dC5sZW5ndGg7Zm9yKDtvLS07KXtsZXQgYT10W29dLHI9aT9pW29dOjA7XCJ6XCI9PT10aGlzLnpvbmVBeGlzJiYoYS5uZWdhdGl2ZT0oYS56fHwwKTwoZS56VGhyZXNob2xkfHwwKSksZXQocikmJnI+PXMvMj8oYS5tYXJrZXI9dDcoYS5tYXJrZXIse3JhZGl1czpyLHdpZHRoOjIqcixoZWlnaHQ6MipyfSksYS5kbEJveD17eDphLnBsb3RYLXIseTphLnBsb3RZLXIsd2lkdGg6MipyLGhlaWdodDoyKnJ9KTooYS5zaGFwZUFyZ3M9YS5wbG90WT1hLmRsQm94PXZvaWQgMCxhLmlzSW5zaWRlPSExKX19Z2V0UHhFeHRyZW1lcygpe2xldCB0PU1hdGgubWluKHRoaXMuY2hhcnQucGxvdFdpZHRoLHRoaXMuY2hhcnQucGxvdEhlaWdodCksZT1lPT57bGV0IGk7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIGUmJihpPS8lJC8udGVzdChlKSxlPXBhcnNlSW50KGUsMTApKSxpP3QqZS8xMDA6ZX0saT1lKGVpKHRoaXMub3B0aW9ucy5taW5TaXplLDgpKSxzPU1hdGgubWF4KGUoZWkodGhpcy5vcHRpb25zLm1heFNpemUsXCIyMCVcIikpLGkpO3JldHVybnttaW5QeFNpemU6aSxtYXhQeFNpemU6c319Z2V0WkV4dHJlbWVzKCl7bGV0IHQ9dGhpcy5vcHRpb25zLGU9dGhpcy5nZXRDb2x1bW4oXCJ6XCIpLmZpbHRlcihldCk7aWYoZS5sZW5ndGgpe2xldCBpPWVpKHQuek1pbix0OSh0NChlKSwhMT09PXQuZGlzcGxheU5lZ2F0aXZlP3QuelRocmVzaG9sZHx8MDotTnVtYmVyLk1BWF9WQUxVRSxOdW1iZXIuTUFYX1ZBTFVFKSkscz1laSh0LnpNYXgsdDYoZSkpO2lmKGV0KGkpJiZldChzKSlyZXR1cm57ek1pbjppLHpNYXg6c319fXNlYXJjaEtEVHJlZSh0LGUsaSxzPXQxLG89dDEpe3JldHVybiBzPSh0LGUsaSk9PntsZXQgcz10W2ldfHwwLG89ZVtpXXx8MCxhLHI9ITE7cmV0dXJuIHM8MCYmbzwwPyhhPXMtKHQubWFya2VyPy5yYWRpdXN8fDApPj1vLShlLm1hcmtlcj8ucmFkaXVzfHwwKT90OmUscj0hMCk6YT1zPG8/dDplLFthLHJdfSxvPSh0LGUsaSk9PiFpJiZ0PmV8fHQ8ZSxzdXBlci5zZWFyY2hLRFRyZWUodCxlLGkscyxvKX19ZXIuZGVmYXVsdE9wdGlvbnM9ZWUodDUuZGVmYXVsdE9wdGlvbnMse2RhdGFMYWJlbHM6e2Zvcm1hdHRlcjpmdW5jdGlvbigpe2xldHtudW1iZXJGb3JtYXR0ZXI6dH09dGhpcy5zZXJpZXMuY2hhcnQse3o6ZX09dGhpcy5wb2ludDtyZXR1cm4gZXQoZSk/dChlLC0xKTpcIlwifSxpbnNpZGU6ITAsdmVydGljYWxBbGlnbjpcIm1pZGRsZVwifSxhbmltYXRpb25MaW1pdDoyNTAsbWFya2VyOntsaW5lQ29sb3I6bnVsbCxsaW5lV2lkdGg6MSxmaWxsT3BhY2l0eTouNSxyYWRpdXM6bnVsbCxzdGF0ZXM6e2hvdmVyOntyYWRpdXNQbHVzOjB9fSxzeW1ib2w6XCJjaXJjbGVcIn0sbWluU2l6ZTo4LG1heFNpemU6XCIyMCVcIixzb2Z0VGhyZXNob2xkOiExLHN0YXRlczp7aG92ZXI6e2hhbG86e3NpemU6NX19fSx0b29sdGlwOntwb2ludEZvcm1hdDpcIih7cG9pbnQueH0sIHtwb2ludC55fSksIFNpemU6IHtwb2ludC56fVwifSx0dXJib1RocmVzaG9sZDowLHpUaHJlc2hvbGQ6MCx6b25lQXhpczpcInpcIn0pLHQ3KGVyLnByb3RvdHlwZSx7YWxpZ25EYXRhTGFiZWw6dDMuYWxpZ25EYXRhTGFiZWwsYXBwbHlab25lczp0MSxidWJibGVQYWRkaW5nOiEwLGlzQnViYmxlOiEwLGtleXNBZmZlY3RZQXhpczpbXCJ5XCJdLHBvaW50QXJyYXlNYXA6W1wieVwiLFwielwiXSxwb2ludENsYXNzOnRRLHBhcmFsbGVsQXJyYXlzOltcInhcIixcInlcIixcInpcIl0sdHJhY2tlckdyb3VwczpbXCJncm91cFwiLFwiZGF0YUxhYmVsc0dyb3VwXCJdLHNwZWNpYWxHcm91cDpcImdyb3VwXCIsem9uZUF4aXM6XCJ6XCJ9KSx0OChlcixcInVwZGF0ZWREYXRhXCIsdD0+e2RlbGV0ZSB0LnRhcmdldC5jaGFydC5idWJibGVaRXh0cmVtZXN9KSx0OChlcixcInJlbW92ZVwiLHQ9PntkZWxldGUgdC50YXJnZXQuY2hhcnQuYnViYmxlWkV4dHJlbWVzfSksUCgpLnJlZ2lzdGVyU2VyaWVzVHlwZShcImJ1YmJsZVwiLGVyKTtsZXR7c2VyaWVzVHlwZXM6e2NvbHVtbjp7cHJvdG90eXBlOntwb2ludENsYXNzOntwcm90b3R5cGU6ZW59fX0sYXJlYXJhbmdlOntwcm90b3R5cGU6e3BvaW50Q2xhc3M6ZWx9fX19PVAoKSx7ZXh0ZW5kOmVoLGlzTnVtYmVyOmVwfT15KCk7Y2xhc3MgZWQgZXh0ZW5kcyBlbHtpc1ZhbGlkKCl7cmV0dXJuIGVwKHRoaXMubG93KX19ZWgoZWQucHJvdG90eXBlLHtzZXRTdGF0ZTplbi5zZXRTdGF0ZX0pO2xldHtub29wOmVjfT15KCkse3Nlcmllc1R5cGVzOnthcmVhcmFuZ2U6ZXUsY29sdW1uOmVnLGNvbHVtbjp7cHJvdG90eXBlOmVmfX19PVAoKSx7YWRkRXZlbnQ6ZW0sY2xhbXA6ZWIsZXh0ZW5kOmV5LGlzTnVtYmVyOmV4LG1lcmdlOmVQLHBpY2s6ZXZ9PXkoKTtjbGFzcyBlTSBleHRlbmRzIGV1e3NldE9wdGlvbnMoKXtyZXR1cm4gZVAoITAsYXJndW1lbnRzWzBdLHtzdGFja2luZzp2b2lkIDB9KSxldS5wcm90b3R5cGUuc2V0T3B0aW9ucy5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dHJhbnNsYXRlKCl7cmV0dXJuIGVmLnRyYW5zbGF0ZS5hcHBseSh0aGlzKX1wb2ludEF0dHJpYnMoKXtyZXR1cm4gZWYucG9pbnRBdHRyaWJzLmFwcGx5KHRoaXMsYXJndW1lbnRzKX10cmFuc2xhdGUzZFBvaW50cygpe3JldHVybiBlZi50cmFuc2xhdGUzZFBvaW50cy5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dHJhbnNsYXRlM2RTaGFwZXMoKXtyZXR1cm4gZWYudHJhbnNsYXRlM2RTaGFwZXMuYXBwbHkodGhpcyxhcmd1bWVudHMpfWFmdGVyQ29sdW1uVHJhbnNsYXRlKCl7bGV0IHQsZSxpLHM7bGV0IG89dGhpcy55QXhpcyxhPXRoaXMueEF4aXMscj1hLnN0YXJ0QW5nbGVSYWQsbj10aGlzLmNoYXJ0LGw9dGhpcy54QXhpcy5pc1JhZGlhbCxoPU1hdGgubWF4KG4uY2hhcnRXaWR0aCxuLmNoYXJ0SGVpZ2h0KSs5OTk7dGhpcy5wb2ludHMuZm9yRWFjaChwPT57bGV0IGQ9cC5zaGFwZUFyZ3N8fHt9LGM9dGhpcy5vcHRpb25zLm1pblBvaW50TGVuZ3RoLHU9cC5wbG90WSxnPW8udHJhbnNsYXRlKHAuaGlnaCwwLDEsMCwxKTtpZihleChnKSYmZXgodSkpe2lmKHAucGxvdEhpZ2g9ZWIoZywtaCxoKSxwLnBsb3RMb3c9ZWIodSwtaCxoKSxzPXAucGxvdEhpZ2gsTWF0aC5hYnModD1ldihwLnJlY3RQbG90WSxwLnBsb3RZKS1wLnBsb3RIaWdoKTxjPyhlPWMtdCx0Kz1lLHMtPWUvMik6dDwwJiYodCo9LTEscy09dCksbCYmdGhpcy5wb2xhcilpPXAuYmFyWCtyLHAuc2hhcGVUeXBlPVwiYXJjXCIscC5zaGFwZUFyZ3M9dGhpcy5wb2xhci5hcmMocyt0LHMsaSxpK3AucG9pbnRXaWR0aCk7ZWxzZXtkLmhlaWdodD10LGQueT1zO2xldHt4OmU9MCx3aWR0aDppPTB9PWQ7cC5zaGFwZUFyZ3M9ZVAocC5zaGFwZUFyZ3MsdGhpcy5jcmlzcENvbChlLHMsaSx0KSkscC50b29sdGlwUG9zPW4uaW52ZXJ0ZWQ/W28ubGVuK28ucG9zLW4ucGxvdExlZnQtcy10LzIsYS5sZW4rYS5wb3Mtbi5wbG90VG9wLWUtaS8yLHRdOlthLmxlZnQtbi5wbG90TGVmdCtlK2kvMixvLnBvcy1uLnBsb3RUb3Arcyt0LzIsdF19fX0pfX1lTS5kZWZhdWx0T3B0aW9ucz1lUChlZy5kZWZhdWx0T3B0aW9ucyxldS5kZWZhdWx0T3B0aW9ucyx7Ym9yZGVyUmFkaXVzOnt3aGVyZTpcImFsbFwifSxwb2ludFJhbmdlOm51bGwsbGVnZW5kU3ltYm9sOlwicmVjdGFuZ2xlXCIsbWFya2VyOm51bGwsc3RhdGVzOntob3Zlcjp7aGFsbzohMX19fSksZW0oZU0sXCJhZnRlckNvbHVtblRyYW5zbGF0ZVwiLGZ1bmN0aW9uKCl7ZU0ucHJvdG90eXBlLmFmdGVyQ29sdW1uVHJhbnNsYXRlLmFwcGx5KHRoaXMpfSx7b3JkZXI6NX0pLGV5KGVNLnByb3RvdHlwZSx7ZGlyZWN0VG91Y2g6ITAscG9pbnRDbGFzczplZCx0cmFja2VyR3JvdXBzOltcImdyb3VwXCIsXCJkYXRhTGFiZWxzR3JvdXBcIl0sYWRqdXN0Rm9yTWlzc2luZ0NvbHVtbnM6ZWYuYWRqdXN0Rm9yTWlzc2luZ0NvbHVtbnMsYW5pbWF0ZTplZi5hbmltYXRlLGNyaXNwQ29sOmVmLmNyaXNwQ29sLGRyYXdHcmFwaDplYyxkcmF3UG9pbnRzOmVmLmRyYXdQb2ludHMsZ2V0U3ltYm9sOmVjLGRyYXdUcmFja2VyOmVmLmRyYXdUcmFja2VyLGdldENvbHVtbk1ldHJpY3M6ZWYuZ2V0Q29sdW1uTWV0cmljc30pLFAoKS5yZWdpc3RlclNlcmllc1R5cGUoXCJjb2x1bW5yYW5nZVwiLGVNKTtsZXR7Y29sdW1uOmVMfT1QKCkuc2VyaWVzVHlwZXMse2NsYW1wOmVrLG1lcmdlOmV3LHBpY2s6ZUF9PXkoKTtjbGFzcyBlUyBleHRlbmRzIGVMe3RyYW5zbGF0ZSgpe2xldCB0PXRoaXMuY2hhcnQsZT10aGlzLm9wdGlvbnMsaT10aGlzLmRlbnNlPXRoaXMuY2xvc2VzdFBvaW50UmFuZ2UqdGhpcy54QXhpcy50cmFuc0E8MixzPXRoaXMuYm9yZGVyV2lkdGg9ZUEoZS5ib3JkZXJXaWR0aCxpPzA6MSksbz10aGlzLnlBeGlzLGE9ZS50aHJlc2hvbGQscj1lQShlLm1pblBvaW50TGVuZ3RoLDUpLG49dGhpcy5nZXRDb2x1bW5NZXRyaWNzKCksbD1uLndpZHRoLGg9dGhpcy5wb2ludFhPZmZzZXQ9bi5vZmZzZXQscD10aGlzLnRyYW5zbGF0ZWRUaHJlc2hvbGQ9by5nZXRUaHJlc2hvbGQoYSksZD10aGlzLmJhclc9TWF0aC5tYXgobCwxKzIqcyk7Zm9yKGxldCBpIG9mKHQuaW52ZXJ0ZWQmJihwLT0uNSksZS5wb2ludFBhZGRpbmcmJihkPU1hdGguY2VpbChkKSksc3VwZXIudHJhbnNsYXRlKCksdGhpcy5wb2ludHMpKXtsZXQgcz1lQShpLnlCb3R0b20scCksYz05OTkrTWF0aC5hYnMocyksdT1layhpLnBsb3RZLC1jLG8ubGVuK2MpLGc9ZC8yLGY9TWF0aC5taW4odSxzKSxtPU1hdGgubWF4KHUscyktZixiPWkucGxvdFgraCx5LHgsUCx2LE0sTCxrLHcsQSxTLFQ7ZS5jZW50ZXJJbkNhdGVnb3J5JiYoYj10aGlzLmFkanVzdEZvck1pc3NpbmdDb2x1bW5zKGIsbCxpLG4pKSxpLmJhclg9YixpLnBvaW50V2lkdGg9bCxpLnRvb2x0aXBQb3M9dC5pbnZlcnRlZD9bby5sZW4rby5wb3MtdC5wbG90TGVmdC11LHRoaXMueEF4aXMubGVuLWItZyxtXTpbYitnLHUrby5wb3MtdC5wbG90VG9wLG1dLHk9YSsoaS50b3RhbHx8aS55KSxcInBlcmNlbnRcIj09PWUuc3RhY2tpbmcmJih5PWErKGkueTwwKT8tMTAwOjEwMCk7bGV0IEM9by50b1BpeGVscyh5LCEwKTtQPSh4PXQucGxvdEhlaWdodC1DLSh0LnBsb3RIZWlnaHQtcCkpP2cqKGYtQykveDowLHY9eD9nKihmK20tQykveDowLEw9Yi1QK2csaz1iK1ArZyx3PWIrditnLEE9Yi12K2csUz1mLXIsVD1mK20saS55PDAmJihTPWYsVD1mK20rciksdC5pbnZlcnRlZCYmKE09by53aWR0aC1mLHg9Qy0oby53aWR0aC1wKSxQPWcqKEMtTSkveCx2PWcqKEMtKE0tbSkpL3gsaz0oTD1iK2crUCktMipQLHc9Yi12K2csQT1iK3YrZyxTPWYsVD1mK20tcixpLnk8MCYmKFQ9ZittK3IpKSxpLnNoYXBlVHlwZT1cInBhdGhcIixpLnNoYXBlQXJncz17eDpMLHk6Uyx3aWR0aDprLUwsaGVpZ2h0Om0sZDpbW1wiTVwiLEwsU10sW1wiTFwiLGssU10sW1wiTFwiLHcsVF0sW1wiTFwiLEEsVF0sW1wiWlwiXV19fX19ZVMuZGVmYXVsdE9wdGlvbnM9ZXcoZUwuZGVmYXVsdE9wdGlvbnMse30pLFAoKS5yZWdpc3RlclNlcmllc1R5cGUoXCJjb2x1bW5weXJhbWlkXCIsZVMpO2xldHthcmVhcmFuZ2U6ZVR9PVAoKS5zZXJpZXNUeXBlcyx7YWRkRXZlbnQ6ZUMsbWVyZ2U6ZU4sZXh0ZW5kOmVYfT15KCk7Y2xhc3MgZVkgZXh0ZW5kcyB0UHtnZXRDb2x1bW5NZXRyaWNzKCl7cmV0dXJuIHRoaXMubGlua2VkUGFyZW50JiZ0aGlzLmxpbmtlZFBhcmVudC5jb2x1bW5NZXRyaWNzfHx0YygpLnByb3RvdHlwZS5nZXRDb2x1bW5NZXRyaWNzLmNhbGwodGhpcyl9ZHJhd0RhdGFMYWJlbHMoKXtsZXQgdD10aGlzLnBvaW50VmFsS2V5O2lmKGVUKWZvcihsZXQgZSBvZihlVC5wcm90b3R5cGUuZHJhd0RhdGFMYWJlbHMuY2FsbCh0aGlzKSx0aGlzLnBvaW50cykpZS55PWVbdF19dG9ZRGF0YSh0KXtyZXR1cm5bdC5sb3csdC5oaWdoXX19ZVkuZGVmYXVsdE9wdGlvbnM9ZU4odFAuZGVmYXVsdE9wdGlvbnMse2NvbG9yOlwiIzAwMDAwMFwiLGdyb3VwaW5nOiExLGxpbmtlZFRvOlwiOnByZXZpb3VzXCIsdG9vbHRpcDp7cG9pbnRGb3JtYXQ6JzxzcGFuIHN0eWxlPVwiY29sb3I6e3BvaW50LmNvbG9yfVwiPuKXjzwvc3Bhbj4ge3Nlcmllcy5uYW1lfTogPGI+e3BvaW50Lmxvd308L2I+IC0gPGI+e3BvaW50LmhpZ2h9PC9iPjxici8+J30sd2hpc2tlcldpZHRoOm51bGx9KSxlQyhlWSxcImFmdGVyVHJhbnNsYXRlXCIsZnVuY3Rpb24oKXtmb3IobGV0IHQgb2YgdGhpcy5wb2ludHMpdC5wbG90TG93PXQucGxvdFl9LHtvcmRlcjowfSksZVgoZVkucHJvdG90eXBlLHtwb2ludEFycmF5TWFwOltcImxvd1wiLFwiaGlnaFwiXSxwb2ludFZhbEtleTpcImhpZ2hcIixkb1F1YXJ0aWxlczohMX0pLFAoKS5yZWdpc3RlclNlcmllc1R5cGUoXCJlcnJvcmJhclwiLGVZKTtsZXR7c2VyaWVzOntwcm90b3R5cGU6e3BvaW50Q2xhc3M6ZUl9fX09UCgpLHtub29wOmVSfT15KCkse3NlcmllczplRSxzZXJpZXNUeXBlczp7Y29sdW1uOmV6fX09UCgpLHtjbGFtcDplRCxpc051bWJlcjplTyxleHRlbmQ6ZUgsbWVyZ2U6ZUIscGljazplVyxwSW50OmVGLGRlZmluZWQ6ZUd9PXkoKTtjbGFzcyBlcSBleHRlbmRzIGVFe3RyYW5zbGF0ZSgpe2xldCB0PXRoaXMueUF4aXMsZT10aGlzLm9wdGlvbnMsaT10LmNlbnRlcjt0aGlzLmdlbmVyYXRlUG9pbnRzKCksdGhpcy5wb2ludHMuZm9yRWFjaChzPT57bGV0IG89ZUIoZS5kaWFsLHMuZGlhbCksYT1lRihvLnJhZGl1cykqaVsyXS8yMDAscj1lRihvLmJhc2VMZW5ndGgpKmEvMTAwLG49ZUYoby5yZWFyTGVuZ3RoKSphLzEwMCxsPW8uYmFzZVdpZHRoLGg9by50b3BXaWR0aCxwPWUub3ZlcnNob290LGQ9dC5zdGFydEFuZ2xlUmFkK3QudHJhbnNsYXRlKHMueSx2b2lkIDAsdm9pZCAwLHZvaWQgMCwhMCk7KGVPKHApfHwhMT09PWUud3JhcCkmJihwPWVPKHApP3AvMTgwKk1hdGguUEk6MCxkPWVEKGQsdC5zdGFydEFuZ2xlUmFkLXAsdC5lbmRBbmdsZVJhZCtwKSksZD0xODAqZC9NYXRoLlBJLHMuc2hhcGVUeXBlPVwicGF0aFwiO2xldCBjPW8ucGF0aHx8W1tcIk1cIiwtbiwtbC8yXSxbXCJMXCIsciwtbC8yXSxbXCJMXCIsYSwtaC8yXSxbXCJMXCIsYSxoLzJdLFtcIkxcIixyLGwvMl0sW1wiTFwiLC1uLGwvMl0sW1wiWlwiXV07cy5zaGFwZUFyZ3M9e2Q6Yyx0cmFuc2xhdGVYOmlbMF0sdHJhbnNsYXRlWTppWzFdLHJvdGF0aW9uOmR9LHMucGxvdFg9aVswXSxzLnBsb3RZPWlbMV0sZUcocy55KSYmdC5tYXgtdC5taW4mJihzLnBlcmNlbnRhZ2U9KHMueS10Lm1pbikvKHQubWF4LXQubWluKSoxMDApfSl9ZHJhd1BvaW50cygpe2xldCB0PXRoaXMsZT10LmNoYXJ0LGk9dC55QXhpcy5jZW50ZXIscz10LnBpdm90LG89dC5vcHRpb25zLGE9by5waXZvdCxyPWUucmVuZGVyZXI7dC5wb2ludHMuZm9yRWFjaChpPT57bGV0IHM9aS5ncmFwaGljLGE9aS5zaGFwZUFyZ3Msbj1hLmQsbD1lQihvLmRpYWwsaS5kaWFsKTtzPyhzLmFuaW1hdGUoYSksYS5kPW4pOmkuZ3JhcGhpYz1yW2kuc2hhcGVUeXBlXShhKS5hZGRDbGFzcyhcImhpZ2hjaGFydHMtZGlhbFwiKS5hZGQodC5ncm91cCksZS5zdHlsZWRNb2RlfHxpLmdyYXBoaWNbcz9cImFuaW1hdGVcIjpcImF0dHJcIl0oe3N0cm9rZTpsLmJvcmRlckNvbG9yLFwic3Ryb2tlLXdpZHRoXCI6bC5ib3JkZXJXaWR0aCxmaWxsOmwuYmFja2dyb3VuZENvbG9yfSl9KSxzP3MuYW5pbWF0ZSh7dHJhbnNsYXRlWDppWzBdLHRyYW5zbGF0ZVk6aVsxXX0pOmEmJih0LnBpdm90PXIuY2lyY2xlKDAsMCxhLnJhZGl1cykuYXR0cih7ekluZGV4OjJ9KS5hZGRDbGFzcyhcImhpZ2hjaGFydHMtcGl2b3RcIikudHJhbnNsYXRlKGlbMF0saVsxXSkuYWRkKHQuZ3JvdXApLGUuc3R5bGVkTW9kZXx8dC5waXZvdC5hdHRyKHtmaWxsOmEuYmFja2dyb3VuZENvbG9yLHN0cm9rZTphLmJvcmRlckNvbG9yLFwic3Ryb2tlLXdpZHRoXCI6YS5ib3JkZXJXaWR0aH0pKX1hbmltYXRlKHQpe2xldCBlPXRoaXM7dHx8ZS5wb2ludHMuZm9yRWFjaCh0PT57bGV0IGk9dC5ncmFwaGljO2kmJihpLmF0dHIoe3JvdGF0aW9uOjE4MCplLnlBeGlzLnN0YXJ0QW5nbGVSYWQvTWF0aC5QSX0pLGkuYW5pbWF0ZSh7cm90YXRpb246dC5zaGFwZUFyZ3Mucm90YXRpb259LGUub3B0aW9ucy5hbmltYXRpb24pKX0pfXJlbmRlcigpe3RoaXMuZ3JvdXA9dGhpcy5wbG90R3JvdXAoXCJncm91cFwiLFwic2VyaWVzXCIsdGhpcy52aXNpYmxlP1wiaW5oZXJpdFwiOlwiaGlkZGVuXCIsdGhpcy5vcHRpb25zLnpJbmRleCx0aGlzLmNoYXJ0LnNlcmllc0dyb3VwKSxlRS5wcm90b3R5cGUucmVuZGVyLmNhbGwodGhpcyksdGhpcy5ncm91cC5jbGlwKHRoaXMuY2hhcnQuY2xpcFJlY3QpfXNldERhdGEodCxlKXtlRS5wcm90b3R5cGUuc2V0RGF0YS5jYWxsKHRoaXMsdCwhMSksdGhpcy5wcm9jZXNzRGF0YSgpLHRoaXMuZ2VuZXJhdGVQb2ludHMoKSxlVyhlLCEwKSYmdGhpcy5jaGFydC5yZWRyYXcoKX1oYXNEYXRhKCl7cmV0dXJuISF0aGlzLnBvaW50cy5sZW5ndGh9fWVxLmRlZmF1bHRPcHRpb25zPWVCKGVFLmRlZmF1bHRPcHRpb25zLHtkYXRhTGFiZWxzOntib3JkZXJDb2xvcjpcIiNjY2NjY2NcIixib3JkZXJSYWRpdXM6Myxib3JkZXJXaWR0aDoxLGNyb3A6ITEsZGVmZXI6ITEsZW5hYmxlZDohMCx2ZXJ0aWNhbEFsaWduOlwidG9wXCIseToxNSx6SW5kZXg6Mn0sZGlhbDp7YmFja2dyb3VuZENvbG9yOlwiIzAwMDAwMFwiLGJhc2VMZW5ndGg6XCI3MCVcIixiYXNlV2lkdGg6Myxib3JkZXJDb2xvcjpcIiNjY2NjY2NcIixib3JkZXJXaWR0aDowLHJhZGl1czpcIjgwJVwiLHJlYXJMZW5ndGg6XCIxMCVcIix0b3BXaWR0aDoxfSxwaXZvdDp7cmFkaXVzOjUsYm9yZGVyV2lkdGg6MCxib3JkZXJDb2xvcjpcIiNjY2NjY2NcIixiYWNrZ3JvdW5kQ29sb3I6XCIjMDAwMDAwXCJ9LHRvb2x0aXA6e2hlYWRlckZvcm1hdDpcIlwifSxzaG93SW5MZWdlbmQ6ITF9KSxlSChlcS5wcm90b3R5cGUse2FuZ3VsYXI6ITAsZGlyZWN0VG91Y2g6ITAsZHJhd0dyYXBoOmVSLGRyYXdUcmFja2VyOmV6LnByb3RvdHlwZS5kcmF3VHJhY2tlcixmaXhlZEJveDohMCxmb3JjZURMOiEwLG5vU2hhcmVkVG9vbHRpcDohMCxwb2ludENsYXNzOmNsYXNzIGV4dGVuZHMgZUl7c2V0U3RhdGUodCl7dGhpcy5zdGF0ZT10fX0sdHJhY2tlckdyb3VwczpbXCJncm91cFwiLFwiZGF0YUxhYmVsc0dyb3VwXCJdfSksUCgpLnJlZ2lzdGVyU2VyaWVzVHlwZShcImdhdWdlXCIsZXEpO2xldHtjb21wb3NlZDplVn09eSgpLHthZGRFdmVudDplXyxwdXNoVW5pcXVlOmVVfT15KCk7ZnVuY3Rpb24gZUsoKXtsZXQgdCxlLGk7bGV0IHM9dGhpcztzLmNvbnRhaW5lciYmKHQ9ZV8ocy5jb250YWluZXIsXCJtb3VzZWRvd25cIix0PT57bGV0IG89cy5ob3ZlclBvaW50O28mJm8uc2VyaWVzJiZvLnNlcmllcy5oYXNEcmFnZ2FibGVOb2RlcyYmby5zZXJpZXMub3B0aW9ucy5kcmFnZ2FibGUmJihvLnNlcmllcy5vbk1vdXNlRG93bihvLHQpLGU9ZV8ocy5jb250YWluZXIsXCJtb3VzZW1vdmVcIix0PT5vJiZvLnNlcmllcyYmby5zZXJpZXMub25Nb3VzZU1vdmUobyx0KSksaT1lXyhzLmNvbnRhaW5lci5vd25lckRvY3VtZW50LFwibW91c2V1cFwiLHQ9PihlKCksaSgpLG8mJm8uc2VyaWVzJiZvLnNlcmllcy5vbk1vdXNlVXAobyx0KSkpKX0pKSxlXyhzLFwiZGVzdHJveVwiLGZ1bmN0aW9uKCl7dCgpfSl9bGV0IGVaPXtjb21wb3NlOmZ1bmN0aW9uKHQpe2VVKGVWLFwiRHJhZ05vZGVzXCIpJiZlXyh0LFwibG9hZFwiLGVLKX0sb25Nb3VzZURvd246ZnVuY3Rpb24odCxlKXtsZXQgaT10aGlzLmNoYXJ0LnBvaW50ZXI/Lm5vcm1hbGl6ZShlKXx8ZTt0LmZpeGVkUG9zaXRpb249e2NoYXJ0WDppLmNoYXJ0WCxjaGFydFk6aS5jaGFydFkscGxvdFg6dC5wbG90WCxwbG90WTp0LnBsb3RZfSx0LmluRHJhZ01vZGU9ITB9LG9uTW91c2VNb3ZlOmZ1bmN0aW9uKHQsZSl7aWYodC5maXhlZFBvc2l0aW9uJiZ0LmluRHJhZ01vZGUpe2xldCBpLHM7bGV0IG89dGhpcy5jaGFydCxhPW8ucG9pbnRlcj8ubm9ybWFsaXplKGUpfHxlLHI9dC5maXhlZFBvc2l0aW9uLmNoYXJ0WC1hLmNoYXJ0WCxuPXQuZml4ZWRQb3NpdGlvbi5jaGFydFktYS5jaGFydFksbD1vLmdyYXBoTGF5b3V0c0xvb2t1cDsoTWF0aC5hYnMocik+NXx8TWF0aC5hYnMobik+NSkmJihpPXQuZml4ZWRQb3NpdGlvbi5wbG90WC1yLHM9dC5maXhlZFBvc2l0aW9uLnBsb3RZLW4sby5pc0luc2lkZVBsb3QoaSxzKSYmKHQucGxvdFg9aSx0LnBsb3RZPXMsdC5oYXNEcmFnZ2VkPSEwLHRoaXMucmVkcmF3SGFsbyh0KSxsLmZvckVhY2godD0+e3QucmVzdGFydFNpbXVsYXRpb24oKX0pKSl9fSxvbk1vdXNlVXA6ZnVuY3Rpb24odCl7dC5maXhlZFBvc2l0aW9uJiYodC5oYXNEcmFnZ2VkJiYodGhpcy5sYXlvdXQuZW5hYmxlU2ltdWxhdGlvbj90aGlzLmxheW91dC5zdGFydCgpOnRoaXMuY2hhcnQucmVkcmF3KCkpLHQuaW5EcmFnTW9kZT10Lmhhc0RyYWdnZWQ9ITEsdGhpcy5vcHRpb25zLmZpeGVkRHJhZ2dhYmxlfHxkZWxldGUgdC5maXhlZFBvc2l0aW9uKX0scmVkcmF3SGFsbzpmdW5jdGlvbih0KXt0JiZ0aGlzLmhhbG8mJnRoaXMuaGFsby5hdHRyKHtkOnQuaGFsb1BhdGgodGhpcy5vcHRpb25zLnN0YXRlcy5ob3Zlci5oYWxvLnNpemUpfSl9fSx7c2V0QW5pbWF0aW9uOmVqfT15KCkse2NvbXBvc2VkOmUkfT15KCkse2FkZEV2ZW50OmVRLHB1c2hVbmlxdWU6ZUp9PXkoKTtmdW5jdGlvbiBlMCgpe3RoaXMuZ3JhcGhMYXlvdXRzTG9va3VwJiYodGhpcy5ncmFwaExheW91dHNMb29rdXAuZm9yRWFjaCh0PT57dC51cGRhdGVTaW11bGF0aW9uKCl9KSx0aGlzLnJlZHJhdygpKX1mdW5jdGlvbiBlMSgpe3RoaXMuZ3JhcGhMYXlvdXRzTG9va3VwJiYodGhpcy5ncmFwaExheW91dHNMb29rdXAuZm9yRWFjaCh0PT57dC51cGRhdGVTaW11bGF0aW9uKCExKX0pLHRoaXMucmVkcmF3KCkpfWZ1bmN0aW9uIGUyKCl7dGhpcy5ncmFwaExheW91dHNMb29rdXAmJnRoaXMuZ3JhcGhMYXlvdXRzTG9va3VwLmZvckVhY2godD0+e3Quc3RvcCgpfSl9ZnVuY3Rpb24gZTMoKXtsZXQgdCxlPSExLGk9aT0+e2kubWF4SXRlcmF0aW9ucy0tJiZpc0Zpbml0ZShpLnRlbXBlcmF0dXJlKSYmIWkuaXNTdGFibGUoKSYmIWkuZW5hYmxlU2ltdWxhdGlvbiYmKGkuYmVmb3JlU3RlcCYmaS5iZWZvcmVTdGVwKCksaS5zdGVwKCksdD0hMSxlPSEwKX07aWYodGhpcy5ncmFwaExheW91dHNMb29rdXApe2ZvcihlaighMSx0aGlzKSx0aGlzLmdyYXBoTGF5b3V0c0xvb2t1cC5mb3JFYWNoKHQ9PnQuc3RhcnQoKSk7IXQ7KXQ9ITAsdGhpcy5ncmFwaExheW91dHNMb29rdXAuZm9yRWFjaChpKTtlJiZ0aGlzLnNlcmllcy5mb3JFYWNoKHQ9Pnt0JiZ0LmxheW91dCYmdC5yZW5kZXIoKX0pfX1sZXQgZTU9e2NvbXBvc2U6ZnVuY3Rpb24odCl7ZUooZSQsXCJHcmFwaExheW91dFwiKSYmKGVRKHQsXCJhZnRlclByaW50XCIsZTApLGVRKHQsXCJiZWZvcmVQcmludFwiLGUxKSxlUSh0LFwicHJlZHJhd1wiLGUyKSxlUSh0LFwicmVuZGVyXCIsZTMpKX0saW50ZWdyYXRpb25zOnt9LGxheW91dHM6e319O3ZhciBlOD1mKDk2MCksZTY9Zi5uKGU4KTtsZXR7c2VyaWVzVHlwZXM6e2J1YmJsZTp7cHJvdG90eXBlOntwb2ludENsYXNzOmU0fX19fT1QKCksZTk9Y2xhc3MgZXh0ZW5kcyBlNHtkZXN0cm95KCl7cmV0dXJuIHRoaXMuc2VyaWVzPy5sYXlvdXQmJnRoaXMuc2VyaWVzLmxheW91dC5yZW1vdmVFbGVtZW50RnJvbUNvbGxlY3Rpb24odGhpcyx0aGlzLnNlcmllcy5sYXlvdXQubm9kZXMpLHRaKCkucHJvdG90eXBlLmRlc3Ryb3kuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpcmVQb2ludEV2ZW50KCl7bGV0IHQ9dGhpcy5zZXJpZXMub3B0aW9ucztpZih0aGlzLmlzUGFyZW50Tm9kZSYmdC5wYXJlbnROb2RlKXtsZXQgZT10LmFsbG93UG9pbnRTZWxlY3Q7dC5hbGxvd1BvaW50U2VsZWN0PXQucGFyZW50Tm9kZS5hbGxvd1BvaW50U2VsZWN0LHRaKCkucHJvdG90eXBlLmZpcmVQb2ludEV2ZW50LmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0LmFsbG93UG9pbnRTZWxlY3Q9ZX1lbHNlIHRaKCkucHJvdG90eXBlLmZpcmVQb2ludEV2ZW50LmFwcGx5KHRoaXMsYXJndW1lbnRzKX1zZWxlY3QoKXtsZXQgdD10aGlzLnNlcmllcy5jaGFydDt0aGlzLmlzUGFyZW50Tm9kZT8odC5nZXRTZWxlY3RlZFBvaW50cz10LmdldFNlbGVjdGVkUGFyZW50Tm9kZXMsdFooKS5wcm90b3R5cGUuc2VsZWN0LmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0LmdldFNlbGVjdGVkUG9pbnRzPWU2KCkucHJvdG90eXBlLmdldFNlbGVjdGVkUG9pbnRzKTp0WigpLnByb3RvdHlwZS5zZWxlY3QuYXBwbHkodGhpcyxhcmd1bWVudHMpfX0se2lzTnVtYmVyOmU3fT15KCksaXQ9e2F0dHJhY3RpdmU6ZnVuY3Rpb24odCxlLGkpe2xldCBzPXQuZ2V0TWFzcygpLG89LWkueCplKnRoaXMuZGlmZlRlbXBlcmF0dXJlLGE9LWkueSplKnRoaXMuZGlmZlRlbXBlcmF0dXJlO3QuZnJvbU5vZGUuZml4ZWRQb3NpdGlvbnx8KHQuZnJvbU5vZGUucGxvdFgtPW8qcy5mcm9tTm9kZS90LmZyb21Ob2RlLmRlZ3JlZSx0LmZyb21Ob2RlLnBsb3RZLT1hKnMuZnJvbU5vZGUvdC5mcm9tTm9kZS5kZWdyZWUpLHQudG9Ob2RlLmZpeGVkUG9zaXRpb258fCh0LnRvTm9kZS5wbG90WCs9bypzLnRvTm9kZS90LnRvTm9kZS5kZWdyZWUsdC50b05vZGUucGxvdFkrPWEqcy50b05vZGUvdC50b05vZGUuZGVncmVlKX0sYXR0cmFjdGl2ZUZvcmNlRnVuY3Rpb246ZnVuY3Rpb24odCxlKXtyZXR1cm4oZS10KS90fSxiYXJ5Y2VudGVyOmZ1bmN0aW9uKCl7bGV0IHQ9dGhpcy5vcHRpb25zLmdyYXZpdGF0aW9uYWxDb25zdGFudHx8MCxlPSh0aGlzLmJhcnljZW50ZXIueEZhY3Rvci0odGhpcy5ib3gubGVmdCt0aGlzLmJveC53aWR0aCkvMikqdCxpPSh0aGlzLmJhcnljZW50ZXIueUZhY3Rvci0odGhpcy5ib3gudG9wK3RoaXMuYm94LmhlaWdodCkvMikqdDt0aGlzLm5vZGVzLmZvckVhY2goZnVuY3Rpb24odCl7dC5maXhlZFBvc2l0aW9ufHwodC5wbG90WC09ZS90Lm1hc3MvdC5kZWdyZWUsdC5wbG90WS09aS90Lm1hc3MvdC5kZWdyZWUpfSl9LGdldEs6ZnVuY3Rpb24odCl7cmV0dXJuIE1hdGgucG93KHQuYm94LndpZHRoKnQuYm94LmhlaWdodC90Lm5vZGVzLmxlbmd0aCwuNSl9LGludGVncmF0ZTpmdW5jdGlvbih0LGUpe2xldCBpPS10Lm9wdGlvbnMuZnJpY3Rpb24scz10Lm9wdGlvbnMubWF4U3BlZWQsbz1lLnByZXZYLGE9ZS5wcmV2WSxyPShlLnBsb3RYK2UuZGlzcFgtbykqaSxuPShlLnBsb3RZK2UuZGlzcFktYSkqaSxsPU1hdGguYWJzLGg9bChyKS8ocnx8MSkscD1sKG4pLyhufHwxKSxkPWgqTWF0aC5taW4ocyxNYXRoLmFicyhyKSksYz1wKk1hdGgubWluKHMsTWF0aC5hYnMobikpO2UucHJldlg9ZS5wbG90WCtlLmRpc3BYLGUucHJldlk9ZS5wbG90WStlLmRpc3BZLGUucGxvdFgrPWQsZS5wbG90WSs9YyxlLnRlbXBlcmF0dXJlPXQudmVjdG9yTGVuZ3RoKHt4OmQseTpjfSl9LHJlcHVsc2l2ZTpmdW5jdGlvbih0LGUsaSl7bGV0IHM9ZSp0aGlzLmRpZmZUZW1wZXJhdHVyZS90Lm1hc3MvdC5kZWdyZWU7dC5maXhlZFBvc2l0aW9ufHwodC5wbG90WCs9aS54KnMsdC5wbG90WSs9aS55KnMpfSxyZXB1bHNpdmVGb3JjZUZ1bmN0aW9uOmZ1bmN0aW9uKHQsZSl7cmV0dXJuKGUtdCkvdCooZT50PzE6MCl9fSx7bm9vcDppZX09eSgpLGlpPXtiYXJ5Y2VudGVyOmZ1bmN0aW9uKCl7bGV0IHQsZTtsZXQgaT10aGlzLm9wdGlvbnMuZ3Jhdml0YXRpb25hbENvbnN0YW50LHM9dGhpcy5ib3gsbz10aGlzLm5vZGVzO2ZvcihsZXQgYSBvZiBvKXRoaXMub3B0aW9ucy5zcGxpdFNlcmllcyYmIWEuaXNQYXJlbnROb2RlPyh0PWEuc2VyaWVzLnBhcmVudE5vZGUucGxvdFgsZT1hLnNlcmllcy5wYXJlbnROb2RlLnBsb3RZKToodD1zLndpZHRoLzIsZT1zLmhlaWdodC8yKSxhLmZpeGVkUG9zaXRpb258fChhLnBsb3RYLT0oYS5wbG90WC10KSppLyhhLm1hc3MqTWF0aC5zcXJ0KG8ubGVuZ3RoKSksYS5wbG90WS09KGEucGxvdFktZSkqaS8oYS5tYXNzKk1hdGguc3FydChvLmxlbmd0aCkpKX0sZ2V0SzppZSxpbnRlZ3JhdGU6aXQuaW50ZWdyYXRlLHJlcHVsc2l2ZTpmdW5jdGlvbih0LGUsaSxzKXtsZXQgbz1lKnRoaXMuZGlmZlRlbXBlcmF0dXJlL3QubWFzcy90LmRlZ3JlZSxhPWkueCpvLHI9aS55Km87dC5maXhlZFBvc2l0aW9ufHwodC5wbG90WCs9YSx0LnBsb3RZKz1yKSxzLmZpeGVkUG9zaXRpb258fChzLnBsb3RYLT1hLHMucGxvdFktPXIpfSxyZXB1bHNpdmVGb3JjZUZ1bmN0aW9uOmZ1bmN0aW9uKHQsZSxpLHMpe3JldHVybiBNYXRoLm1pbih0LChpLm1hcmtlci5yYWRpdXMrcy5tYXJrZXIucmFkaXVzKS8yKX19LGlzPXthdHRyYWN0aXZlOmZ1bmN0aW9uKHQsZSxpLHMpe2xldCBvPXQuZ2V0TWFzcygpLGE9aS54L3MqZSxyPWkueS9zKmU7dC5mcm9tTm9kZS5maXhlZFBvc2l0aW9ufHwodC5mcm9tTm9kZS5kaXNwWC09YSpvLmZyb21Ob2RlL3QuZnJvbU5vZGUuZGVncmVlLHQuZnJvbU5vZGUuZGlzcFktPXIqby5mcm9tTm9kZS90LmZyb21Ob2RlLmRlZ3JlZSksdC50b05vZGUuZml4ZWRQb3NpdGlvbnx8KHQudG9Ob2RlLmRpc3BYKz1hKm8udG9Ob2RlL3QudG9Ob2RlLmRlZ3JlZSx0LnRvTm9kZS5kaXNwWSs9cipvLnRvTm9kZS90LnRvTm9kZS5kZWdyZWUpfSxhdHRyYWN0aXZlRm9yY2VGdW5jdGlvbjpmdW5jdGlvbih0LGUpe3JldHVybiB0KnQvZX0sYmFyeWNlbnRlcjpmdW5jdGlvbigpe2xldCB0PXRoaXMub3B0aW9ucy5ncmF2aXRhdGlvbmFsQ29uc3RhbnQsZT10aGlzLmJhcnljZW50ZXIueEZhY3RvcixpPXRoaXMuYmFyeWNlbnRlci55RmFjdG9yO3RoaXMubm9kZXMuZm9yRWFjaChmdW5jdGlvbihzKXtpZighcy5maXhlZFBvc2l0aW9uKXtsZXQgbz1zLmdldERlZ3JlZSgpLGE9byooMStvLzIpO3MuZGlzcFgrPShlLXMucGxvdFgpKnQqYS9zLmRlZ3JlZSxzLmRpc3BZKz0oaS1zLnBsb3RZKSp0KmEvcy5kZWdyZWV9fSl9LGdldEs6ZnVuY3Rpb24odCl7cmV0dXJuIE1hdGgucG93KHQuYm94LndpZHRoKnQuYm94LmhlaWdodC90Lm5vZGVzLmxlbmd0aCwuMyl9LGludGVncmF0ZTpmdW5jdGlvbih0LGUpe2UuZGlzcFgrPWUuZGlzcFgqdC5vcHRpb25zLmZyaWN0aW9uLGUuZGlzcFkrPWUuZGlzcFkqdC5vcHRpb25zLmZyaWN0aW9uO2xldCBpPWUudGVtcGVyYXR1cmU9dC52ZWN0b3JMZW5ndGgoe3g6ZS5kaXNwWCx5OmUuZGlzcFl9KTswIT09aSYmKGUucGxvdFgrPWUuZGlzcFgvaSpNYXRoLm1pbihNYXRoLmFicyhlLmRpc3BYKSx0LnRlbXBlcmF0dXJlKSxlLnBsb3RZKz1lLmRpc3BZL2kqTWF0aC5taW4oTWF0aC5hYnMoZS5kaXNwWSksdC50ZW1wZXJhdHVyZSkpfSxyZXB1bHNpdmU6ZnVuY3Rpb24odCxlLGkscyl7dC5kaXNwWCs9aS54L3MqZS90LmRlZ3JlZSx0LmRpc3BZKz1pLnkvcyplL3QuZGVncmVlfSxyZXB1bHNpdmVGb3JjZUZ1bmN0aW9uOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIGUqZS90fX07Y2xhc3MgaW97Y29uc3RydWN0b3IodCl7dGhpcy5ib2R5PSExLHRoaXMuaXNFbXB0eT0hMSx0aGlzLmlzSW50ZXJuYWw9ITEsdGhpcy5ub2Rlcz1bXSx0aGlzLmJveD10LHRoaXMuYm94U2l6ZT1NYXRoLm1pbih0LndpZHRoLHQuaGVpZ2h0KX1kaXZpZGVCb3goKXtsZXQgdD10aGlzLmJveC53aWR0aC8yLGU9dGhpcy5ib3guaGVpZ2h0LzI7dGhpcy5ub2Rlc1swXT1uZXcgaW8oe2xlZnQ6dGhpcy5ib3gubGVmdCx0b3A6dGhpcy5ib3gudG9wLHdpZHRoOnQsaGVpZ2h0OmV9KSx0aGlzLm5vZGVzWzFdPW5ldyBpbyh7bGVmdDp0aGlzLmJveC5sZWZ0K3QsdG9wOnRoaXMuYm94LnRvcCx3aWR0aDp0LGhlaWdodDplfSksdGhpcy5ub2Rlc1syXT1uZXcgaW8oe2xlZnQ6dGhpcy5ib3gubGVmdCt0LHRvcDp0aGlzLmJveC50b3ArZSx3aWR0aDp0LGhlaWdodDplfSksdGhpcy5ub2Rlc1szXT1uZXcgaW8oe2xlZnQ6dGhpcy5ib3gubGVmdCx0b3A6dGhpcy5ib3gudG9wK2Usd2lkdGg6dCxoZWlnaHQ6ZX0pfWdldEJveFBvc2l0aW9uKHQpe2xldCBlPXQucGxvdFg8dGhpcy5ib3gubGVmdCt0aGlzLmJveC53aWR0aC8yLGk9dC5wbG90WTx0aGlzLmJveC50b3ArdGhpcy5ib3guaGVpZ2h0LzI7cmV0dXJuIGU/aT8wOjM6aT8xOjJ9aW5zZXJ0KHQsZSl7bGV0IGk7dGhpcy5pc0ludGVybmFsP3RoaXMubm9kZXNbdGhpcy5nZXRCb3hQb3NpdGlvbih0KV0uaW5zZXJ0KHQsZS0xKToodGhpcy5pc0VtcHR5PSExLHRoaXMuYm9keT9lPyh0aGlzLmlzSW50ZXJuYWw9ITAsdGhpcy5kaXZpZGVCb3goKSwhMCE9PXRoaXMuYm9keSYmKHRoaXMubm9kZXNbdGhpcy5nZXRCb3hQb3NpdGlvbih0aGlzLmJvZHkpXS5pbnNlcnQodGhpcy5ib2R5LGUtMSksdGhpcy5ib2R5PSEwKSx0aGlzLm5vZGVzW3RoaXMuZ2V0Qm94UG9zaXRpb24odCldLmluc2VydCh0LGUtMSkpOigoaT1uZXcgaW8oe3RvcDp0LnBsb3RYfHxOYU4sbGVmdDp0LnBsb3RZfHxOYU4sd2lkdGg6LjEsaGVpZ2h0Oi4xfSkpLmJvZHk9dCxpLmlzSW50ZXJuYWw9ITEsdGhpcy5ub2Rlcy5wdXNoKGkpKToodGhpcy5pc0ludGVybmFsPSExLHRoaXMuYm9keT10KSl9dXBkYXRlTWFzc0FuZENlbnRlcigpe2xldCB0PTAsZT0wLGk9MDtpZih0aGlzLmlzSW50ZXJuYWwpe2ZvcihsZXQgcyBvZiB0aGlzLm5vZGVzKXMuaXNFbXB0eXx8KHQrPXMubWFzcyxlKz1zLnBsb3RYKnMubWFzcyxpKz1zLnBsb3RZKnMubWFzcyk7ZS89dCxpLz10fWVsc2UgdGhpcy5ib2R5JiYodD10aGlzLmJvZHkubWFzcyxlPXRoaXMuYm9keS5wbG90WCxpPXRoaXMuYm9keS5wbG90WSk7dGhpcy5tYXNzPXQsdGhpcy5wbG90WD1lLHRoaXMucGxvdFk9aX19bGV0IGlhPWNsYXNze2NvbnN0cnVjdG9yKHQsZSxpLHMpe3RoaXMuYm94PXtsZWZ0OnQsdG9wOmUsd2lkdGg6aSxoZWlnaHQ6c30sdGhpcy5tYXhEZXB0aD0yNSx0aGlzLnJvb3Q9bmV3IGlvKHRoaXMuYm94KSx0aGlzLnJvb3QuaXNJbnRlcm5hbD0hMCx0aGlzLnJvb3QuaXNSb290PSEwLHRoaXMucm9vdC5kaXZpZGVCb3goKX1jYWxjdWxhdGVNYXNzQW5kQ2VudGVyKCl7dGhpcy52aXNpdE5vZGVSZWN1cnNpdmUobnVsbCxudWxsLGZ1bmN0aW9uKHQpe3QudXBkYXRlTWFzc0FuZENlbnRlcigpfSl9aW5zZXJ0Tm9kZXModCl7Zm9yKGxldCBlIG9mIHQpdGhpcy5yb290Lmluc2VydChlLHRoaXMubWF4RGVwdGgpfXZpc2l0Tm9kZVJlY3Vyc2l2ZSh0LGUsaSl7bGV0IHM7aWYodHx8KHQ9dGhpcy5yb290KSx0PT09dGhpcy5yb290JiZlJiYocz1lKHQpKSwhMSE9PXMpe2ZvcihsZXQgbyBvZiB0Lm5vZGVzKXtpZihvLmlzSW50ZXJuYWwpe2lmKGUmJihzPWUobykpLCExPT09cyljb250aW51ZTt0aGlzLnZpc2l0Tm9kZVJlY3Vyc2l2ZShvLGUsaSl9ZWxzZSBvLmJvZHkmJmUmJmUoby5ib2R5KTtpJiZpKG8pfXQ9PT10aGlzLnJvb3QmJmkmJmkodCl9fX0se3dpbjppcn09eSgpLHtjbGFtcDppbCxkZWZpbmVkOmloLGlzRnVuY3Rpb246aXAsZmlyZUV2ZW50OmlkLHBpY2s6aWN9PXkoKTtjbGFzcyBpdXtjb25zdHJ1Y3Rvcigpe3RoaXMuYm94PXt9LHRoaXMuY3VycmVudFN0ZXA9MCx0aGlzLmluaXRpYWxSZW5kZXJpbmc9ITAsdGhpcy5saW5rcz1bXSx0aGlzLm5vZGVzPVtdLHRoaXMuc2VyaWVzPVtdLHRoaXMuc2ltdWxhdGlvbj0hMX1zdGF0aWMgY29tcG9zZSh0KXtlNS5jb21wb3NlKHQpLGU1LmludGVncmF0aW9ucy5ldWxlcj1pcyxlNS5pbnRlZ3JhdGlvbnMudmVybGV0PWl0LGU1LmxheW91dHNbXCJyZWluZ29sZC1mcnVjaHRlcm1hblwiXT1pdX1pbml0KHQpe3RoaXMub3B0aW9ucz10LHRoaXMubm9kZXM9W10sdGhpcy5saW5rcz1bXSx0aGlzLnNlcmllcz1bXSx0aGlzLmJveD17eDowLHk6MCx3aWR0aDowLGhlaWdodDowfSx0aGlzLnNldEluaXRpYWxSZW5kZXJpbmcoITApLHRoaXMuaW50ZWdyYXRpb249ZTUuaW50ZWdyYXRpb25zW3QuaW50ZWdyYXRpb25dLHRoaXMuZW5hYmxlU2ltdWxhdGlvbj10LmVuYWJsZVNpbXVsYXRpb24sdGhpcy5hdHRyYWN0aXZlRm9yY2U9aWModC5hdHRyYWN0aXZlRm9yY2UsdGhpcy5pbnRlZ3JhdGlvbi5hdHRyYWN0aXZlRm9yY2VGdW5jdGlvbiksdGhpcy5yZXB1bHNpdmVGb3JjZT1pYyh0LnJlcHVsc2l2ZUZvcmNlLHRoaXMuaW50ZWdyYXRpb24ucmVwdWxzaXZlRm9yY2VGdW5jdGlvbiksdGhpcy5hcHByb3hpbWF0aW9uPXQuYXBwcm94aW1hdGlvbn11cGRhdGVTaW11bGF0aW9uKHQpe3RoaXMuZW5hYmxlU2ltdWxhdGlvbj1pYyh0LHRoaXMub3B0aW9ucy5lbmFibGVTaW11bGF0aW9uKX1zdGFydCgpe2xldCB0PXRoaXMuc2VyaWVzLGU9dGhpcy5vcHRpb25zO3RoaXMuY3VycmVudFN0ZXA9MCx0aGlzLmZvcmNlcz10WzBdJiZ0WzBdLmZvcmNlc3x8W10sdGhpcy5jaGFydD10WzBdJiZ0WzBdLmNoYXJ0LHRoaXMuaW5pdGlhbFJlbmRlcmluZyYmKHRoaXMuaW5pdFBvc2l0aW9ucygpLHQuZm9yRWFjaChmdW5jdGlvbih0KXt0LmZpbmlzaGVkQW5pbWF0aW5nPSEwLHQucmVuZGVyKCl9KSksdGhpcy5zZXRLKCksdGhpcy5yZXNldFNpbXVsYXRpb24oZSksdGhpcy5lbmFibGVTaW11bGF0aW9uJiZ0aGlzLnN0ZXAoKX1zdGVwKCl7bGV0IHQ9dGhpcy5zZXJpZXM7Zm9yKGxldCB0IG9mKHRoaXMuY3VycmVudFN0ZXArKyxcImJhcm5lcy1odXRcIj09PXRoaXMuYXBwcm94aW1hdGlvbiYmKHRoaXMuY3JlYXRlUXVhZFRyZWUoKSx0aGlzLnF1YWRUcmVlLmNhbGN1bGF0ZU1hc3NBbmRDZW50ZXIoKSksdGhpcy5mb3JjZXN8fFtdKSl0aGlzW3QrXCJGb3JjZXNcIl0odGhpcy50ZW1wZXJhdHVyZSk7aWYodGhpcy5hcHBseUxpbWl0cygpLHRoaXMudGVtcGVyYXR1cmU9dGhpcy5jb29sRG93bih0aGlzLnN0YXJ0VGVtcGVyYXR1cmUsdGhpcy5kaWZmVGVtcGVyYXR1cmUsdGhpcy5jdXJyZW50U3RlcCksdGhpcy5wcmV2U3lzdGVtVGVtcGVyYXR1cmU9dGhpcy5zeXN0ZW1UZW1wZXJhdHVyZSx0aGlzLnN5c3RlbVRlbXBlcmF0dXJlPXRoaXMuZ2V0U3lzdGVtVGVtcGVyYXR1cmUoKSx0aGlzLmVuYWJsZVNpbXVsYXRpb24pe2ZvcihsZXQgZSBvZiB0KWUuY2hhcnQmJmUucmVuZGVyKCk7dGhpcy5tYXhJdGVyYXRpb25zLS0mJmlzRmluaXRlKHRoaXMudGVtcGVyYXR1cmUpJiYhdGhpcy5pc1N0YWJsZSgpPyh0aGlzLnNpbXVsYXRpb24mJmlyLmNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMuc2ltdWxhdGlvbiksdGhpcy5zaW11bGF0aW9uPWlyLnJlcXVlc3RBbmltYXRpb25GcmFtZSgoKT0+dGhpcy5zdGVwKCkpKToodGhpcy5zaW11bGF0aW9uPSExLHRoaXMuc2VyaWVzLmZvckVhY2godD0+e2lkKHQsXCJhZnRlclNpbXVsYXRpb25cIil9KSl9fXN0b3AoKXt0aGlzLnNpbXVsYXRpb24mJmlyLmNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMuc2ltdWxhdGlvbil9c2V0QXJlYSh0LGUsaSxzKXt0aGlzLmJveD17bGVmdDp0LHRvcDplLHdpZHRoOmksaGVpZ2h0OnN9fXNldEsoKXt0aGlzLms9dGhpcy5vcHRpb25zLmxpbmtMZW5ndGh8fHRoaXMuaW50ZWdyYXRpb24uZ2V0Syh0aGlzKX1hZGRFbGVtZW50c1RvQ29sbGVjdGlvbih0LGUpe2ZvcihsZXQgaSBvZiB0KS0xPT09ZS5pbmRleE9mKGkpJiZlLnB1c2goaSl9cmVtb3ZlRWxlbWVudEZyb21Db2xsZWN0aW9uKHQsZSl7bGV0IGk9ZS5pbmRleE9mKHQpOy0xIT09aSYmZS5zcGxpY2UoaSwxKX1jbGVhcigpe3RoaXMubm9kZXMubGVuZ3RoPTAsdGhpcy5saW5rcy5sZW5ndGg9MCx0aGlzLnNlcmllcy5sZW5ndGg9MCx0aGlzLnJlc2V0U2ltdWxhdGlvbigpfXJlc2V0U2ltdWxhdGlvbigpe3RoaXMuZm9yY2VkU3RvcD0hMSx0aGlzLnN5c3RlbVRlbXBlcmF0dXJlPTAsdGhpcy5zZXRNYXhJdGVyYXRpb25zKCksdGhpcy5zZXRUZW1wZXJhdHVyZSgpLHRoaXMuc2V0RGlmZlRlbXBlcmF0dXJlKCl9cmVzdGFydFNpbXVsYXRpb24oKXt0aGlzLnNpbXVsYXRpb24/dGhpcy5yZXNldFNpbXVsYXRpb24oKToodGhpcy5zZXRJbml0aWFsUmVuZGVyaW5nKCExKSx0aGlzLmVuYWJsZVNpbXVsYXRpb24/dGhpcy5zdGFydCgpOnRoaXMuc2V0TWF4SXRlcmF0aW9ucygxKSx0aGlzLmNoYXJ0JiZ0aGlzLmNoYXJ0LnJlZHJhdygpLHRoaXMuc2V0SW5pdGlhbFJlbmRlcmluZyghMCkpfXNldE1heEl0ZXJhdGlvbnModCl7dGhpcy5tYXhJdGVyYXRpb25zPWljKHQsdGhpcy5vcHRpb25zLm1heEl0ZXJhdGlvbnMpfXNldFRlbXBlcmF0dXJlKCl7dGhpcy50ZW1wZXJhdHVyZT10aGlzLnN0YXJ0VGVtcGVyYXR1cmU9TWF0aC5zcXJ0KHRoaXMubm9kZXMubGVuZ3RoKX1zZXREaWZmVGVtcGVyYXR1cmUoKXt0aGlzLmRpZmZUZW1wZXJhdHVyZT10aGlzLnN0YXJ0VGVtcGVyYXR1cmUvKHRoaXMub3B0aW9ucy5tYXhJdGVyYXRpb25zKzEpfXNldEluaXRpYWxSZW5kZXJpbmcodCl7dGhpcy5pbml0aWFsUmVuZGVyaW5nPXR9Y3JlYXRlUXVhZFRyZWUoKXt0aGlzLnF1YWRUcmVlPW5ldyBpYSh0aGlzLmJveC5sZWZ0LHRoaXMuYm94LnRvcCx0aGlzLmJveC53aWR0aCx0aGlzLmJveC5oZWlnaHQpLHRoaXMucXVhZFRyZWUuaW5zZXJ0Tm9kZXModGhpcy5ub2Rlcyl9aW5pdFBvc2l0aW9ucygpe2xldCB0PXRoaXMub3B0aW9ucy5pbml0aWFsUG9zaXRpb25zO2lmKGlwKHQpKWZvcihsZXQgZSBvZih0LmNhbGwodGhpcyksdGhpcy5ub2RlcykpaWgoZS5wcmV2WCl8fChlLnByZXZYPWUucGxvdFgpLGloKGUucHJldlkpfHwoZS5wcmV2WT1lLnBsb3RZKSxlLmRpc3BYPTAsZS5kaXNwWT0wO2Vsc2VcImNpcmNsZVwiPT09dD90aGlzLnNldENpcmN1bGFyUG9zaXRpb25zKCk6dGhpcy5zZXRSYW5kb21Qb3NpdGlvbnMoKX1zZXRDaXJjdWxhclBvc2l0aW9ucygpe2xldCB0O2xldCBlPXRoaXMuYm94LGk9dGhpcy5ub2RlcyxzPTIqTWF0aC5QSS8oaS5sZW5ndGgrMSksbz1pLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4gMD09PXQubGlua3NUby5sZW5ndGh9KSxhPXt9LHI9dGhpcy5vcHRpb25zLmluaXRpYWxQb3NpdGlvblJhZGl1cyxuPXQ9Pntmb3IobGV0IGUgb2YgdC5saW5rc0Zyb218fFtdKWFbZS50b05vZGUuaWRdfHwoYVtlLnRvTm9kZS5pZF09ITAsbC5wdXNoKGUudG9Ob2RlKSxuKGUudG9Ob2RlKSl9LGw9W107Zm9yKGxldCB0IG9mIG8pbC5wdXNoKHQpLG4odCk7aWYobC5sZW5ndGgpZm9yKGxldCB0IG9mIGkpLTE9PT1sLmluZGV4T2YodCkmJmwucHVzaCh0KTtlbHNlIGw9aTtmb3IobGV0IGk9MCxvPWwubGVuZ3RoO2k8bzsrK2kpKHQ9bFtpXSkucGxvdFg9dC5wcmV2WD1pYyh0LnBsb3RYLGUud2lkdGgvMityKk1hdGguY29zKGkqcykpLHQucGxvdFk9dC5wcmV2WT1pYyh0LnBsb3RZLGUuaGVpZ2h0LzIrcipNYXRoLnNpbihpKnMpKSx0LmRpc3BYPTAsdC5kaXNwWT0wfXNldFJhbmRvbVBvc2l0aW9ucygpe2xldCB0O2xldCBlPXRoaXMuYm94LGk9dGhpcy5ub2RlcyxzPWkubGVuZ3RoKzEsbz10PT57bGV0IGU9dCp0L01hdGguUEk7cmV0dXJuIGUtTWF0aC5mbG9vcihlKX07Zm9yKGxldCBhPTAscj1pLmxlbmd0aDthPHI7KythKSh0PWlbYV0pLnBsb3RYPXQucHJldlg9aWModC5wbG90WCxlLndpZHRoKm8oYSkpLHQucGxvdFk9dC5wcmV2WT1pYyh0LnBsb3RZLGUuaGVpZ2h0Km8ocythKSksdC5kaXNwWD0wLHQuZGlzcFk9MH1mb3JjZSh0LC4uLmUpe3RoaXMuaW50ZWdyYXRpb25bdF0uYXBwbHkodGhpcyxlKX1iYXJ5Y2VudGVyRm9yY2VzKCl7dGhpcy5nZXRCYXJ5Y2VudGVyKCksdGhpcy5mb3JjZShcImJhcnljZW50ZXJcIil9Z2V0QmFyeWNlbnRlcigpe2xldCB0PTAsZT0wLGk9MDtmb3IobGV0IHMgb2YgdGhpcy5ub2RlcyllKz1zLnBsb3RYKnMubWFzcyxpKz1zLnBsb3RZKnMubWFzcyx0Kz1zLm1hc3M7cmV0dXJuIHRoaXMuYmFyeWNlbnRlcj17eDplLHk6aSx4RmFjdG9yOmUvdCx5RmFjdG9yOmkvdH0sdGhpcy5iYXJ5Y2VudGVyfWJhcm5lc0h1dEFwcHJveGltYXRpb24odCxlKXtsZXQgaSxzO2xldCBvPXRoaXMuZ2V0RGlzdFhZKHQsZSksYT10aGlzLnZlY3Rvckxlbmd0aChvKTtyZXR1cm4gdCE9PWUmJjAhPT1hJiYoZS5pc0ludGVybmFsP2UuYm94U2l6ZS9hPHRoaXMub3B0aW9ucy50aGV0YSYmMCE9PWE/KHM9dGhpcy5yZXB1bHNpdmVGb3JjZShhLHRoaXMuayksdGhpcy5mb3JjZShcInJlcHVsc2l2ZVwiLHQscyplLm1hc3MsbyxhKSxpPSExKTppPSEwOihzPXRoaXMucmVwdWxzaXZlRm9yY2UoYSx0aGlzLmspLHRoaXMuZm9yY2UoXCJyZXB1bHNpdmVcIix0LHMqZS5tYXNzLG8sYSkpKSxpfXJlcHVsc2l2ZUZvcmNlcygpe2lmKFwiYmFybmVzLWh1dFwiPT09dGhpcy5hcHByb3hpbWF0aW9uKWZvcihsZXQgdCBvZiB0aGlzLm5vZGVzKXRoaXMucXVhZFRyZWUudmlzaXROb2RlUmVjdXJzaXZlKG51bGwsZT0+dGhpcy5iYXJuZXNIdXRBcHByb3hpbWF0aW9uKHQsZSkpO2Vsc2V7bGV0IHQsZSxpO2ZvcihsZXQgcyBvZiB0aGlzLm5vZGVzKWZvcihsZXQgbyBvZiB0aGlzLm5vZGVzKXM9PT1vfHxzLmZpeGVkUG9zaXRpb258fChpPXRoaXMuZ2V0RGlzdFhZKHMsbyksMCE9PShlPXRoaXMudmVjdG9yTGVuZ3RoKGkpKSYmKHQ9dGhpcy5yZXB1bHNpdmVGb3JjZShlLHRoaXMuayksdGhpcy5mb3JjZShcInJlcHVsc2l2ZVwiLHMsdCpvLm1hc3MsaSxlKSkpfX1hdHRyYWN0aXZlRm9yY2VzKCl7bGV0IHQsZSxpO2ZvcihsZXQgcyBvZiB0aGlzLmxpbmtzKXMuZnJvbU5vZGUmJnMudG9Ob2RlJiYodD10aGlzLmdldERpc3RYWShzLmZyb21Ob2RlLHMudG9Ob2RlKSwwIT09KGU9dGhpcy52ZWN0b3JMZW5ndGgodCkpJiYoaT10aGlzLmF0dHJhY3RpdmVGb3JjZShlLHRoaXMuayksdGhpcy5mb3JjZShcImF0dHJhY3RpdmVcIixzLGksdCxlKSkpfWFwcGx5TGltaXRzKCl7Zm9yKGxldCB0IG9mIHRoaXMubm9kZXMpdC5maXhlZFBvc2l0aW9ufHwodGhpcy5pbnRlZ3JhdGlvbi5pbnRlZ3JhdGUodGhpcyx0KSx0aGlzLmFwcGx5TGltaXRCb3godCx0aGlzLmJveCksdC5kaXNwWD0wLHQuZGlzcFk9MCl9YXBwbHlMaW1pdEJveCh0LGUpe2xldCBpPXQucmFkaXVzO3QucGxvdFg9aWwodC5wbG90WCxlLmxlZnQraSxlLndpZHRoLWkpLHQucGxvdFk9aWwodC5wbG90WSxlLnRvcCtpLGUuaGVpZ2h0LWkpfWNvb2xEb3duKHQsZSxpKXtyZXR1cm4gdC1lKml9aXNTdGFibGUoKXtyZXR1cm4gMWUtNT5NYXRoLmFicyh0aGlzLnN5c3RlbVRlbXBlcmF0dXJlLXRoaXMucHJldlN5c3RlbVRlbXBlcmF0dXJlKXx8dGhpcy50ZW1wZXJhdHVyZTw9MH1nZXRTeXN0ZW1UZW1wZXJhdHVyZSgpe2xldCB0PTA7Zm9yKGxldCBlIG9mIHRoaXMubm9kZXMpdCs9ZS50ZW1wZXJhdHVyZTtyZXR1cm4gdH12ZWN0b3JMZW5ndGgodCl7cmV0dXJuIE1hdGguc3FydCh0LngqdC54K3QueSp0LnkpfWdldERpc3RSKHQsZSl7bGV0IGk9dGhpcy5nZXREaXN0WFkodCxlKTtyZXR1cm4gdGhpcy52ZWN0b3JMZW5ndGgoaSl9Z2V0RGlzdFhZKHQsZSl7bGV0IGk9dC5wbG90WC1lLnBsb3RYLHM9dC5wbG90WS1lLnBsb3RZO3JldHVybnt4OmkseTpzLGFic1g6TWF0aC5hYnMoaSksYWJzWTpNYXRoLmFicyhzKX19fWxldCBpZz1pdSx7YWRkRXZlbnQ6aW0scGljazppYn09eSgpO2Z1bmN0aW9uIGl5KCl7bGV0IHQ9dGhpcy5zZXJpZXMsZT1bXTtyZXR1cm4gdC5mb3JFYWNoKHQ9Pnt0LnBhcmVudE5vZGUmJnQucGFyZW50Tm9kZS5zZWxlY3RlZCYmZS5wdXNoKHQucGFyZW50Tm9kZSl9KSxlfWZ1bmN0aW9uIGl4KCl7dGhpcy5hbGxEYXRhUG9pbnRzJiZkZWxldGUgdGhpcy5hbGxEYXRhUG9pbnRzfWNsYXNzIGlQIGV4dGVuZHMgaWd7Y29uc3RydWN0b3IoKXtzdXBlciguLi5hcmd1bWVudHMpLHRoaXMuaW5kZXg9TmFOLHRoaXMubm9kZXM9W10sdGhpcy5zZXJpZXM9W119c3RhdGljIGNvbXBvc2UodCl7aWcuY29tcG9zZSh0KSxlNS5pbnRlZ3JhdGlvbnMucGFja2VkYnViYmxlPWlpLGU1LmxheW91dHMucGFja2VkYnViYmxlPWlQO2xldCBlPXQucHJvdG90eXBlO2UuZ2V0U2VsZWN0ZWRQYXJlbnROb2Rlc3x8KGltKHQsXCJiZWZvcmVSZWRyYXdcIixpeCksZS5nZXRTZWxlY3RlZFBhcmVudE5vZGVzPWl5KX1iZWZvcmVTdGVwKCl7dGhpcy5vcHRpb25zLm1hcmtlciYmdGhpcy5zZXJpZXMuZm9yRWFjaCh0PT57dCYmdC5jYWxjdWxhdGVQYXJlbnRSYWRpdXMoKX0pfWlzU3RhYmxlKCl7bGV0IHQ9TWF0aC5hYnModGhpcy5wcmV2U3lzdGVtVGVtcGVyYXR1cmUtdGhpcy5zeXN0ZW1UZW1wZXJhdHVyZSk7cmV0dXJuIDE+TWF0aC5hYnMoMTAqdGhpcy5zeXN0ZW1UZW1wZXJhdHVyZS9NYXRoLnNxcnQodGhpcy5ub2Rlcy5sZW5ndGgpKSYmdDwxZS01fHx0aGlzLnRlbXBlcmF0dXJlPD0wfXNldENpcmN1bGFyUG9zaXRpb25zKCl7bGV0IHQ9dGhpcy5ib3gsZT10aGlzLm5vZGVzLGk9MipNYXRoLlBJLyhlLmxlbmd0aCsxKSxzPXRoaXMub3B0aW9ucy5pbml0aWFsUG9zaXRpb25SYWRpdXMsbyxhLHI9MDtmb3IobGV0IG4gb2YgZSl0aGlzLm9wdGlvbnMuc3BsaXRTZXJpZXMmJiFuLmlzUGFyZW50Tm9kZT8obz1uLnNlcmllcy5wYXJlbnROb2RlLnBsb3RYLGE9bi5zZXJpZXMucGFyZW50Tm9kZS5wbG90WSk6KG89dC53aWR0aC8yLGE9dC5oZWlnaHQvMiksbi5wbG90WD1uLnByZXZYPWliKG4ucGxvdFgsbytzKk1hdGguY29zKG4uaW5kZXh8fHIqaSkpLG4ucGxvdFk9bi5wcmV2WT1pYihuLnBsb3RZLGErcypNYXRoLnNpbihuLmluZGV4fHxyKmkpKSxuLmRpc3BYPTAsbi5kaXNwWT0wLHIrK31yZXB1bHNpdmVGb3JjZXMoKXtsZXQgdCxlLGk7bGV0IHM9dGhpcyxvPXMub3B0aW9ucy5idWJibGVQYWRkaW5nLGE9cy5ub2RlczthLmZvckVhY2gocj0+e3IuZGVncmVlPXIubWFzcyxyLm5laWdoYm91cnM9MCxhLmZvckVhY2goYT0+e3Q9MCxyIT09YSYmIXIuZml4ZWRQb3NpdGlvbiYmKHMub3B0aW9ucy5zZXJpZXNJbnRlcmFjdGlvbnx8ci5zZXJpZXM9PT1hLnNlcmllcykmJihpPXMuZ2V0RGlzdFhZKHIsYSksKGU9cy52ZWN0b3JMZW5ndGgoaSktKHIubWFya2VyLnJhZGl1cythLm1hcmtlci5yYWRpdXMrbykpPDAmJihyLmRlZ3JlZSs9LjAxLHIubmVpZ2hib3VycysrLHQ9cy5yZXB1bHNpdmVGb3JjZSgtZS9NYXRoLnNxcnQoci5uZWlnaGJvdXJzKSxzLmsscixhKSkscy5mb3JjZShcInJlcHVsc2l2ZVwiLHIsdCphLm1hc3MsaSxhLGUpKX0pfSl9YXBwbHlMaW1pdEJveCh0LGUpe2xldCBpLHM7dGhpcy5vcHRpb25zLnNwbGl0U2VyaWVzJiYhdC5pc1BhcmVudE5vZGUmJnRoaXMub3B0aW9ucy5wYXJlbnROb2RlTGltaXQmJihpPXRoaXMuZ2V0RGlzdFhZKHQsdC5zZXJpZXMucGFyZW50Tm9kZSksKHM9dC5zZXJpZXMucGFyZW50Tm9kZVJhZGl1cy10Lm1hcmtlci5yYWRpdXMtdGhpcy52ZWN0b3JMZW5ndGgoaSkpPDAmJnM+LTIqdC5tYXJrZXIucmFkaXVzJiYodC5wbG90WC09LjAxKmkueCx0LnBsb3RZLT0uMDEqaS55KSksc3VwZXIuYXBwbHlMaW1pdEJveCh0LGUpfX1lNS5sYXlvdXRzLnBhY2tlZGJ1YmJsZT1pUDtsZXR7bWVyZ2U6aXYsc3luY1RpbWVvdXQ6aU19PXkoKSx7YW5pbU9iamVjdDppTH09eSgpO3ZhciBpaz1mKDI4KSxpdz1mLm4oaWspO2xldHtkZWcycmFkOmlBfT15KCkse2FkZEV2ZW50OmlTLG1lcmdlOmlULHVuaXF1ZUtleTppQyxkZWZpbmVkOmlOLGV4dGVuZDppWH09eSgpO2Z1bmN0aW9uIGlZKHQsZSl7ZT1pVCghMCx7ZW5hYmxlZDohMCxhdHRyaWJ1dGVzOntkeTotNSxzdGFydE9mZnNldDpcIjUwJVwiLHRleHRBbmNob3I6XCJtaWRkbGVcIn19LGUpO2xldCBpPXRoaXMucmVuZGVyZXIudXJsLHM9dGhpcy50ZXh0fHx0aGlzLG89cy50ZXh0UGF0aCx7YXR0cmlidXRlczphLGVuYWJsZWQ6cn09ZTtpZih0PXR8fG8mJm8ucGF0aCxvJiZvLnVuZG8oKSx0JiZyKXtsZXQgZT1pUyhzLFwiYWZ0ZXJNb2RpZnlUcmVlXCIsZT0+e2lmKHQmJnIpe2xldCBvPXQuYXR0cihcImlkXCIpO298fHQuYXR0cihcImlkXCIsbz1pQygpKTtsZXQgcj17eDowLHk6MH07aU4oYS5keCkmJihyLmR4PWEuZHgsZGVsZXRlIGEuZHgpLGlOKGEuZHkpJiYoci5keT1hLmR5LGRlbGV0ZSBhLmR5KSxzLmF0dHIociksdGhpcy5hdHRyKHt0cmFuc2Zvcm06XCJcIn0pLHRoaXMuYm94JiYodGhpcy5ib3g9dGhpcy5ib3guZGVzdHJveSgpKTtsZXQgbj1lLm5vZGVzLnNsaWNlKDApO2Uubm9kZXMubGVuZ3RoPTAsZS5ub2Rlc1swXT17dGFnTmFtZTpcInRleHRQYXRoXCIsYXR0cmlidXRlczppWChhLHtcInRleHQtYW5jaG9yXCI6YS50ZXh0QW5jaG9yLGhyZWY6YCR7aX0jJHtvfWB9KSxjaGlsZHJlbjpufX19KTtzLnRleHRQYXRoPXtwYXRoOnQsdW5kbzplfX1lbHNlIHMuYXR0cih7ZHg6MCxkeTowfSksZGVsZXRlIHMudGV4dFBhdGg7cmV0dXJuIHRoaXMuYWRkZWQmJihzLnRleHRDYWNoZT1cIlwiLHRoaXMucmVuZGVyZXIuYnVpbGRUZXh0KHMpKSx0aGlzfWZ1bmN0aW9uIGlJKHQpe2xldCBlPXQuYkJveCxpPXRoaXMuZWxlbWVudD8ucXVlcnlTZWxlY3RvcihcInRleHRQYXRoXCIpO2lmKGkpe2xldCB0PVtdLHtiOnMsaDpvfT10aGlzLnJlbmRlcmVyLmZvbnRNZXRyaWNzKHRoaXMuZWxlbWVudCksYT1vLXMscj1SZWdFeHAoJyg8dHNwYW4+fDx0c3Bhbig/IVxcXFxzY2xhc3M9XCJoaWdoY2hhcnRzLWJyXCIpW14+XSo+fDxcXFxcL3RzcGFuPiknLFwiZ1wiKSxuPWkuaW5uZXJIVE1MLnJlcGxhY2UocixcIlwiKS5zcGxpdCgvPHRzcGFuIGNsYXNzPVwiaGlnaGNoYXJ0cy1iclwiW14+XSo+LyksbD1uLmxlbmd0aCxoPSh0LGUpPT57bGV0e3g6byx5OnJ9PWUsbj0oaS5nZXRSb3RhdGlvbk9mQ2hhcih0KS05MCkqaUEsbD1NYXRoLmNvcyhuKSxoPU1hdGguc2luKG4pO3JldHVybltbby1hKmwsci1hKmhdLFtvK3MqbCxyK3MqaF1dfTtmb3IobGV0IGU9MCxzPTA7czxsO3MrKyl7bGV0IG89bltzXS5sZW5ndGg7Zm9yKGxldCBhPTA7YTxvO2ErPTUpdHJ5e2xldCBvPWUrYStzLFtyLG5dPWgobyxpLmdldFN0YXJ0UG9zaXRpb25PZkNoYXIobykpOzA9PT1hPyh0LnB1c2gobiksdC5wdXNoKHIpKTooMD09PXMmJnQudW5zaGlmdChuKSxzPT09bC0xJiZ0LnB1c2gocikpfWNhdGNoKHQpe2JyZWFrfWUrPW8tMTt0cnl7bGV0IG89ZStzLGE9aS5nZXRFbmRQb3NpdGlvbk9mQ2hhcihvKSxbcixuXT1oKG8sYSk7dC51bnNoaWZ0KG4pLHQudW5zaGlmdChyKX1jYXRjaCh0KXticmVha319dC5sZW5ndGgmJnQucHVzaCh0WzBdLnNsaWNlKCkpLGUucG9seWdvbj10fXJldHVybiBlfWZ1bmN0aW9uIGlSKHQpe2xldCBlPXQubGFiZWxPcHRpb25zLGk9dC5wb2ludCxzPWVbaS5mb3JtYXRQcmVmaXgrXCJUZXh0UGF0aFwiXXx8ZS50ZXh0UGF0aDtzJiYhZS51c2VIVE1MJiYodGhpcy5zZXRUZXh0UGF0aChpLmdldERhdGFMYWJlbFBhdGg/Lih0aGlzKXx8aS5ncmFwaGljLHMpLGkuZGF0YUxhYmVsUGF0aCYmIXMuZW5hYmxlZCYmKGkuZGF0YUxhYmVsUGF0aD1pLmRhdGFMYWJlbFBhdGguZGVzdHJveSgpKSl9bGV0e3BhcnNlOmlFfT10TCgpLHtub29wOml6fT15KCkse3Nlcmllczp7cHJvdG90eXBlOmlEfSxzZXJpZXNUeXBlczp7YnViYmxlOmlPfX09UCgpLHtpbml0RGF0YUxhYmVsczppSCxpbml0RGF0YUxhYmVsc0RlZmVyOmlCfT17aW5pdERhdGFMYWJlbHM6ZnVuY3Rpb24oKXtsZXQgdD10aGlzLm9wdGlvbnMuZGF0YUxhYmVscztpZighdGhpcy5kYXRhTGFiZWxzR3JvdXApe2xldCBlPXRoaXMuaW5pdERhdGFMYWJlbHNHcm91cCgpO3JldHVybiF0aGlzLmNoYXJ0LnN0eWxlZE1vZGUmJnQ/LnN0eWxlJiZlLmNzcyh0LnN0eWxlKSxlLmF0dHIoe29wYWNpdHk6MH0pLHRoaXMudmlzaWJsZSYmZS5zaG93KCksZX1yZXR1cm4gdGhpcy5kYXRhTGFiZWxzR3JvdXAuYXR0cihpdih7b3BhY2l0eToxfSx0aGlzLmdldFBsb3RCb3goXCJkYXRhLWxhYmVsc1wiKSkpLHRoaXMuZGF0YUxhYmVsc0dyb3VwfSxpbml0RGF0YUxhYmVsc0RlZmVyOmZ1bmN0aW9uKCl7bGV0IHQ9dGhpcy5vcHRpb25zLmRhdGFMYWJlbHM7dD8uZGVmZXImJnRoaXMub3B0aW9ucy5sYXlvdXRBbGdvcml0aG0/LmVuYWJsZVNpbXVsYXRpb24/aU0oKCk9Pnt0aGlzLmRlZmVyRGF0YUxhYmVscz0hMX0sdD9pTCh0LmFuaW1hdGlvbikuZGVmZXI6MCk6dGhpcy5kZWZlckRhdGFMYWJlbHM9ITF9fSx7YWRkRXZlbnQ6aVcsY2xhbXA6aUYsZGVmaW5lZDppRyxleHRlbmQ6aXEsZmlyZUV2ZW50OmlWLGlzQXJyYXk6aV8saXNOdW1iZXI6aVUsbWVyZ2U6aUsscGljazppWn09eSgpOyh7Y29tcG9zZTpmdW5jdGlvbih0KXtpUyh0LFwiYWZ0ZXJHZXRCQm94XCIsaUkpLGlTKHQsXCJiZWZvcmVBZGRpbmdEYXRhTGFiZWxcIixpUik7bGV0IGU9dC5wcm90b3R5cGU7ZS5zZXRUZXh0UGF0aHx8KGUuc2V0VGV4dFBhdGg9aVkpfX0pLmNvbXBvc2UoaXcoKSk7Y2xhc3MgaWogZXh0ZW5kcyBpT3tjb25zdHJ1Y3Rvcigpe3N1cGVyKC4uLmFyZ3VtZW50cyksdGhpcy5wYXJlbnROb2RlTWFzcz0wLHRoaXMuZGVmZXJEYXRhTGFiZWxzPSEwfXN0YXRpYyBjb21wb3NlKHQsZSxpKXtpTy5jb21wb3NlKHQsZSxpKSxlWi5jb21wb3NlKGUpLGlQLmNvbXBvc2UoZSl9YWNjdW11bGF0ZUFsbFBvaW50cygpe2xldCB0PXRoaXMuY2hhcnQsZT1bXTtmb3IobGV0IGkgb2YgdC5zZXJpZXMpaWYoaS5pcyhcInBhY2tlZGJ1YmJsZVwiKSYmaS5yZXNlcnZlU3BhY2UoKSl7bGV0IHQ9aS5nZXRDb2x1bW4oXCJ2YWx1ZVwiKTtmb3IobGV0IHM9MDtzPHQubGVuZ3RoO3MrKyllLnB1c2goW251bGwsbnVsbCx0W3NdLGkuaW5kZXgscyx7aWQ6cyxtYXJrZXI6e3JhZGl1czowfX1dKX1yZXR1cm4gZX1hZGRMYXlvdXQoKXtsZXQgdD10aGlzLm9wdGlvbnMubGF5b3V0QWxnb3JpdGhtPXRoaXMub3B0aW9ucy5sYXlvdXRBbGdvcml0aG18fHt9LGU9dC50eXBlfHxcInBhY2tlZGJ1YmJsZVwiLGk9dGhpcy5jaGFydC5vcHRpb25zLmNoYXJ0LHM9dGhpcy5jaGFydC5ncmFwaExheW91dHNTdG9yYWdlLG89dGhpcy5jaGFydC5ncmFwaExheW91dHNMb29rdXAsYTtzfHwodGhpcy5jaGFydC5ncmFwaExheW91dHNTdG9yYWdlPXM9e30sdGhpcy5jaGFydC5ncmFwaExheW91dHNMb29rdXA9bz1bXSksKGE9c1tlXSl8fCh0LmVuYWJsZVNpbXVsYXRpb249aUcoaS5mb3JFeHBvcnQpPyFpLmZvckV4cG9ydDp0LmVuYWJsZVNpbXVsYXRpb24sc1tlXT1hPW5ldyBlNS5sYXlvdXRzW2VdLGEuaW5pdCh0KSxvLnNwbGljZShhLmluZGV4LDAsYSkpLHRoaXMubGF5b3V0PWEsdGhpcy5wb2ludHMuZm9yRWFjaCh0PT57dC5tYXNzPTIsdC5kZWdyZWU9MSx0LmNvbGxpc2lvbk5tYj0xfSksYS5zZXRBcmVhKDAsMCx0aGlzLmNoYXJ0LnBsb3RXaWR0aCx0aGlzLmNoYXJ0LnBsb3RIZWlnaHQpLGEuYWRkRWxlbWVudHNUb0NvbGxlY3Rpb24oW3RoaXNdLGEuc2VyaWVzKSxhLmFkZEVsZW1lbnRzVG9Db2xsZWN0aW9uKHRoaXMucG9pbnRzLGEubm9kZXMpfWFkZFNlcmllc0xheW91dCgpe2xldCB0PXRoaXMub3B0aW9ucy5sYXlvdXRBbGdvcml0aG09dGhpcy5vcHRpb25zLmxheW91dEFsZ29yaXRobXx8e30sZT10LnR5cGV8fFwicGFja2VkYnViYmxlXCIsaT10aGlzLmNoYXJ0LmdyYXBoTGF5b3V0c1N0b3JhZ2Uscz10aGlzLmNoYXJ0LmdyYXBoTGF5b3V0c0xvb2t1cCxvPWlLKHQsdC5wYXJlbnROb2RlT3B0aW9ucyx7ZW5hYmxlU2ltdWxhdGlvbjp0aGlzLmxheW91dC5vcHRpb25zLmVuYWJsZVNpbXVsYXRpb259KSxhPWlbZStcIi1zZXJpZXNcIl07YXx8KGlbZStcIi1zZXJpZXNcIl09YT1uZXcgZTUubGF5b3V0c1tlXSxhLmluaXQobykscy5zcGxpY2UoYS5pbmRleCwwLGEpKSx0aGlzLnBhcmVudE5vZGVMYXlvdXQ9YSx0aGlzLmNyZWF0ZVBhcmVudE5vZGVzKCl9Y2FsY3VsYXRlUGFyZW50UmFkaXVzKCl7bGV0IHQ9dGhpcy5zZXJpZXNCb3goKTt0aGlzLnBhcmVudE5vZGVSYWRpdXM9aUYoTWF0aC5zcXJ0KDIqdGhpcy5wYXJlbnROb2RlTWFzcy9NYXRoLlBJKSsyMCwyMCx0P01hdGgubWF4KE1hdGguc3FydChNYXRoLnBvdyh0LndpZHRoLDIpK01hdGgucG93KHQuaGVpZ2h0LDIpKS8yKzIwLDIwKTpNYXRoLnNxcnQoMip0aGlzLnBhcmVudE5vZGVNYXNzL01hdGguUEkpKzIwKSx0aGlzLnBhcmVudE5vZGUmJih0aGlzLnBhcmVudE5vZGUubWFya2VyLnJhZGl1cz10aGlzLnBhcmVudE5vZGUucmFkaXVzPXRoaXMucGFyZW50Tm9kZVJhZGl1cyl9Y2FsY3VsYXRlWkV4dHJlbWVzKCl7bGV0IHQ9dGhpcy5jaGFydC5zZXJpZXMsZT10aGlzLm9wdGlvbnMuek1pbixpPXRoaXMub3B0aW9ucy56TWF4LHM9MS8wLG89LTEvMDtyZXR1cm4gZSYmaT9bZSxpXToodC5mb3JFYWNoKHQ9Pnt0LmdldENvbHVtbihcInZhbHVlXCIpLmZvckVhY2godD0+e2lHKHQpJiYodD5vJiYobz10KSx0PHMmJihzPXQpKX0pfSksW2U9aVooZSxzKSxpPWlaKGksbyldKX1jaGVja092ZXJsYXAodCxlKXtsZXQgaT10WzBdLWVbMF0scz10WzFdLWVbMV07cmV0dXJuIE1hdGguc3FydChpKmkrcypzKS1NYXRoLmFicyh0WzJdK2VbMl0pPC0uMDAxfWNyZWF0ZVBhcmVudE5vZGVzKCl7bGV0IHQ9dGhpcy5wb2ludENsYXNzLGU9dGhpcy5jaGFydCxpPXRoaXMucGFyZW50Tm9kZUxheW91dCxzPXRoaXMubGF5b3V0Lm9wdGlvbnMsbyxhPXRoaXMucGFyZW50Tm9kZSxyPXtyYWRpdXM6dGhpcy5wYXJlbnROb2RlUmFkaXVzLGxpbmVDb2xvcjp0aGlzLmNvbG9yLGZpbGxDb2xvcjppRSh0aGlzLmNvbG9yKS5icmlnaHRlbiguNCkuZ2V0KCl9O3MucGFyZW50Tm9kZU9wdGlvbnMmJihyPWlLKHMucGFyZW50Tm9kZU9wdGlvbnMubWFya2VyfHx7fSxyKSksdGhpcy5wYXJlbnROb2RlTWFzcz0wLHRoaXMucG9pbnRzLmZvckVhY2godD0+e3RoaXMucGFyZW50Tm9kZU1hc3MrPU1hdGguUEkqTWF0aC5wb3codC5tYXJrZXIucmFkaXVzLDIpfSksdGhpcy5jYWxjdWxhdGVQYXJlbnRSYWRpdXMoKSxpLm5vZGVzLmZvckVhY2godD0+e3Quc2VyaWVzSW5kZXg9PT10aGlzLmluZGV4JiYobz0hMCl9KSxpLnNldEFyZWEoMCwwLGUucGxvdFdpZHRoLGUucGxvdEhlaWdodCksb3x8KGF8fChhPW5ldyB0KHRoaXMse21hc3M6dGhpcy5wYXJlbnROb2RlUmFkaXVzLzIsbWFya2VyOnIsZGF0YUxhYmVsczp7aW5zaWRlOiExfSxzdGF0ZXM6e25vcm1hbDp7bWFya2VyOnJ9LGhvdmVyOnttYXJrZXI6cn19LGRhdGFMYWJlbE9uTnVsbDohMCxkZWdyZWU6dGhpcy5wYXJlbnROb2RlUmFkaXVzLGlzUGFyZW50Tm9kZTohMCxzZXJpZXNJbmRleDp0aGlzLmluZGV4fSkpLHRoaXMucGFyZW50Tm9kZSYmKGEucGxvdFg9dGhpcy5wYXJlbnROb2RlLnBsb3RYLGEucGxvdFk9dGhpcy5wYXJlbnROb2RlLnBsb3RZKSx0aGlzLnBhcmVudE5vZGU9YSxpLmFkZEVsZW1lbnRzVG9Db2xsZWN0aW9uKFt0aGlzXSxpLnNlcmllcyksaS5hZGRFbGVtZW50c1RvQ29sbGVjdGlvbihbYV0saS5ub2RlcykpfWRlZmVyTGF5b3V0KCl7bGV0IHQ9dGhpcy5vcHRpb25zLmxheW91dEFsZ29yaXRobTt0aGlzLnZpc2libGUmJih0aGlzLmFkZExheW91dCgpLHQuc3BsaXRTZXJpZXMmJnRoaXMuYWRkU2VyaWVzTGF5b3V0KCkpfWRlc3Ryb3koKXt0aGlzLmNoYXJ0LmdyYXBoTGF5b3V0c0xvb2t1cCYmdGhpcy5jaGFydC5ncmFwaExheW91dHNMb29rdXAuZm9yRWFjaCh0PT57dC5yZW1vdmVFbGVtZW50RnJvbUNvbGxlY3Rpb24odGhpcyx0LnNlcmllcyl9LHRoaXMpLHRoaXMucGFyZW50Tm9kZSYmdGhpcy5wYXJlbnROb2RlTGF5b3V0JiYodGhpcy5wYXJlbnROb2RlTGF5b3V0LnJlbW92ZUVsZW1lbnRGcm9tQ29sbGVjdGlvbih0aGlzLnBhcmVudE5vZGUsdGhpcy5wYXJlbnROb2RlTGF5b3V0Lm5vZGVzKSx0aGlzLnBhcmVudE5vZGUuZGF0YUxhYmVsJiYodGhpcy5wYXJlbnROb2RlLmRhdGFMYWJlbD10aGlzLnBhcmVudE5vZGUuZGF0YUxhYmVsLmRlc3Ryb3koKSkpLGlELmRlc3Ryb3kuYXBwbHkodGhpcyxhcmd1bWVudHMpfWRyYXdEYXRhTGFiZWxzKCl7IXRoaXMuZGVmZXJEYXRhTGFiZWxzJiYoaUQuZHJhd0RhdGFMYWJlbHMuY2FsbCh0aGlzLHRoaXMucG9pbnRzKSx0aGlzLnBhcmVudE5vZGUmJih0aGlzLnBhcmVudE5vZGUuZm9ybWF0UHJlZml4PVwicGFyZW50Tm9kZVwiLGlELmRyYXdEYXRhTGFiZWxzLmNhbGwodGhpcyxbdGhpcy5wYXJlbnROb2RlXSkpKX1kcmF3R3JhcGgoKXtpZighdGhpcy5sYXlvdXR8fCF0aGlzLmxheW91dC5vcHRpb25zLnNwbGl0U2VyaWVzKXJldHVybjtsZXQgdD10aGlzLmNoYXJ0LGU9dGhpcy5sYXlvdXQub3B0aW9ucy5wYXJlbnROb2RlT3B0aW9ucy5tYXJrZXIsaT17ZmlsbDplLmZpbGxDb2xvcnx8aUUodGhpcy5jb2xvcikuYnJpZ2h0ZW4oLjQpLmdldCgpLG9wYWNpdHk6ZS5maWxsT3BhY2l0eSxzdHJva2U6ZS5saW5lQ29sb3J8fHRoaXMuY29sb3IsXCJzdHJva2Utd2lkdGhcIjppWihlLmxpbmVXaWR0aCx0aGlzLm9wdGlvbnMubGluZVdpZHRoKX0scz17fTt0aGlzLnBhcmVudE5vZGVzR3JvdXA9dGhpcy5wbG90R3JvdXAoXCJwYXJlbnROb2Rlc0dyb3VwXCIsXCJwYXJlbnROb2RlXCIsdGhpcy52aXNpYmxlP1wiaW5oZXJpdFwiOlwiaGlkZGVuXCIsLjEsdC5zZXJpZXNHcm91cCksdGhpcy5ncm91cD8uYXR0cih7ekluZGV4OjJ9KSx0aGlzLmNhbGN1bGF0ZVBhcmVudFJhZGl1cygpLHRoaXMucGFyZW50Tm9kZSYmaUcodGhpcy5wYXJlbnROb2RlLnBsb3RYKSYmaUcodGhpcy5wYXJlbnROb2RlLnBsb3RZKSYmaUcodGhpcy5wYXJlbnROb2RlUmFkaXVzKSYmKHM9aUsoe3g6dGhpcy5wYXJlbnROb2RlLnBsb3RYLXRoaXMucGFyZW50Tm9kZVJhZGl1cyx5OnRoaXMucGFyZW50Tm9kZS5wbG90WS10aGlzLnBhcmVudE5vZGVSYWRpdXMsd2lkdGg6Mip0aGlzLnBhcmVudE5vZGVSYWRpdXMsaGVpZ2h0OjIqdGhpcy5wYXJlbnROb2RlUmFkaXVzfSxpKSx0aGlzLnBhcmVudE5vZGUuZ3JhcGhpY3x8KHRoaXMuZ3JhcGg9dGhpcy5wYXJlbnROb2RlLmdyYXBoaWM9dC5yZW5kZXJlci5zeW1ib2woaS5zeW1ib2wpLmFkZCh0aGlzLnBhcmVudE5vZGVzR3JvdXApKSx0aGlzLnBhcmVudE5vZGUuZ3JhcGhpYy5hdHRyKHMpKX1kcmF3VHJhY2tlcigpe2xldCB0O2xldCBlPXRoaXMucGFyZW50Tm9kZTtzdXBlci5kcmF3VHJhY2tlcigpLGUmJih0PWlfKGUuZGF0YUxhYmVscyk/ZS5kYXRhTGFiZWxzOmUuZGF0YUxhYmVsP1tlLmRhdGFMYWJlbF06W10sZS5ncmFwaGljJiYoZS5ncmFwaGljLmVsZW1lbnQucG9pbnQ9ZSksdC5mb3JFYWNoKHQ9PnsodC5kaXZ8fHQuZWxlbWVudCkucG9pbnQ9ZX0pKX1nZXRQb2ludFJhZGl1cygpe2xldCB0LGUsaSxzO2xldCBvPXRoaXMuY2hhcnQsYT1vLnBsb3RXaWR0aCxyPW8ucGxvdEhlaWdodCxuPXRoaXMub3B0aW9ucyxsPW4udXNlU2ltdWxhdGlvbixoPU1hdGgubWluKGEscikscD17fSxkPVtdLGM9by5hbGxEYXRhUG9pbnRzfHxbXSx1PWMubGVuZ3RoO1tcIm1pblNpemVcIixcIm1heFNpemVcIl0uZm9yRWFjaCh0PT57bGV0IGU9cGFyc2VJbnQoblt0XSwxMCksaT0vJSQvLnRlc3Qoblt0XSk7cFt0XT1pP2gqZS8xMDA6ZSpNYXRoLnNxcnQodSl9KSxvLm1pblJhZGl1cz10PXAubWluU2l6ZS9NYXRoLnNxcnQodSksby5tYXhSYWRpdXM9ZT1wLm1heFNpemUvTWF0aC5zcXJ0KHUpO2xldCBnPWw/dGhpcy5jYWxjdWxhdGVaRXh0cmVtZXMoKTpbdCxlXTtjLmZvckVhY2goKG8sYSk9PntpPWw/aUYob1syXSxnWzBdLGdbMV0pOm9bMl0sMD09PShzPXRoaXMuZ2V0UmFkaXVzKGdbMF0sZ1sxXSx0LGUsaSkpJiYocz1udWxsKSxjW2FdWzJdPXMsZC5wdXNoKHMpfSksdGhpcy5yYWRpaT1kfWluaXQoKXtyZXR1cm4gaUQuaW5pdC5hcHBseSh0aGlzLGFyZ3VtZW50cyksaUIuY2FsbCh0aGlzKSx0aGlzLmV2ZW50c1RvVW5iaW5kLnB1c2goaVcodGhpcyxcInVwZGF0ZWREYXRhXCIsZnVuY3Rpb24oKXt0aGlzLmNoYXJ0LnNlcmllcy5mb3JFYWNoKHQ9Pnt0LnR5cGU9PT10aGlzLnR5cGUmJih0LmlzRGlydHk9ITApfSx0aGlzKX0pKSx0aGlzfW9uTW91c2VVcCh0KXtpZih0LmZpeGVkUG9zaXRpb24mJiF0LnJlbW92ZWQpe2xldCBlO2xldCBpPXRoaXMubGF5b3V0LHM9dGhpcy5wYXJlbnROb2RlTGF5b3V0O3MmJmkub3B0aW9ucy5kcmFnQmV0d2VlblNlcmllcyYmcy5ub2Rlcy5mb3JFYWNoKHM9Pnt0JiZ0Lm1hcmtlciYmcyE9PXQuc2VyaWVzLnBhcmVudE5vZGUmJihlPWkuZ2V0RGlzdFhZKHQscyksaS52ZWN0b3JMZW5ndGgoZSktcy5tYXJrZXIucmFkaXVzLXQubWFya2VyLnJhZGl1czwwJiYocy5zZXJpZXMuYWRkUG9pbnQoaUsodC5vcHRpb25zLHtwbG90WDp0LnBsb3RYLHBsb3RZOnQucGxvdFl9KSwhMSksaS5yZW1vdmVFbGVtZW50RnJvbUNvbGxlY3Rpb24odCxpLm5vZGVzKSx0LnJlbW92ZSgpKSl9KSxlWi5vbk1vdXNlVXAuYXBwbHkodGhpcyxhcmd1bWVudHMpfX1wbGFjZUJ1YmJsZXModCl7bGV0IGU9dGhpcy5jaGVja092ZXJsYXAsaT10aGlzLnBvc2l0aW9uQnViYmxlLHM9W10sbz0xLGE9MCxyPTAsbixsPVtdLGgscD10LnNvcnQoKHQsZSk9PmVbMl0tdFsyXSk7aWYocC5sZW5ndGgpe2lmKHMucHVzaChbWzAsMCxwWzBdWzJdLHBbMF1bM10scFswXVs0XV1dKSxwLmxlbmd0aD4xKWZvcihzLnB1c2goW1swLDAtcFsxXVsyXS1wWzBdWzJdLHBbMV1bMl0scFsxXVszXSxwWzFdWzRdXV0pLGg9MjtoPHAubGVuZ3RoO2grKylwW2hdWzJdPXBbaF1bMl18fDEsZShuPWkoc1tvXVthXSxzW28tMV1bcl0scFtoXSksc1tvXVswXSk/KHMucHVzaChbXSkscj0wLHNbbysxXS5wdXNoKGkoc1tvXVthXSxzW29dWzBdLHBbaF0pKSxvKyssYT0wKTpvPjEmJnNbby0xXVtyKzFdJiZlKG4sc1tvLTFdW3IrMV0pPyhyKyssc1tvXS5wdXNoKGkoc1tvXVthXSxzW28tMV1bcl0scFtoXSkpLGErKyk6KGErKyxzW29dLnB1c2gobikpO3RoaXMuY2hhcnQuc3RhZ2VzPXMsdGhpcy5jaGFydC5yYXdQb3NpdGlvbnM9W10uY29uY2F0LmFwcGx5KFtdLHMpLHRoaXMucmVzaXplUmFkaXVzKCksbD10aGlzLmNoYXJ0LnJhd1Bvc2l0aW9uc31yZXR1cm4gbH1wb2ludEF0dHJpYnModCxlKXtsZXQgaT10aGlzLm9wdGlvbnMscz10JiZ0LmlzUGFyZW50Tm9kZSxvPWkubWFya2VyO3MmJmkubGF5b3V0QWxnb3JpdGhtJiZpLmxheW91dEFsZ29yaXRobS5wYXJlbnROb2RlT3B0aW9ucyYmKG89aS5sYXlvdXRBbGdvcml0aG0ucGFyZW50Tm9kZU9wdGlvbnMubWFya2VyKTtsZXQgYT1vLmZpbGxPcGFjaXR5LHI9aUQucG9pbnRBdHRyaWJzLmNhbGwodGhpcyx0LGUpO3JldHVybiAxIT09YSYmKHJbXCJmaWxsLW9wYWNpdHlcIl09YSkscn1wb3NpdGlvbkJ1YmJsZSh0LGUsaSl7bGV0IHM9TWF0aC5hc2luLG89TWF0aC5hY29zLGE9TWF0aC5wb3cscj1NYXRoLmFicyxuPSgwLE1hdGguc3FydCkoYSh0WzBdLWVbMF0sMikrYSh0WzFdLWVbMV0sMikpLGw9bygoYShuLDIpK2EoaVsyXStlWzJdLDIpLWEoaVsyXSt0WzJdLDIpKS8oMiooaVsyXStlWzJdKSpuKSksaD1zKHIodFswXS1lWzBdKS9uKSxwPSh0WzFdLWVbMV08MD8wOk1hdGguUEkpK2wraCooKHRbMF0tZVswXSkqKHRbMV0tZVsxXSk8MD8xOi0xKSxkPU1hdGguY29zKHApLGM9TWF0aC5zaW4ocCk7cmV0dXJuW2VbMF0rKGVbMl0raVsyXSkqYyxlWzFdLShlWzJdK2lbMl0pKmQsaVsyXSxpWzNdLGlbNF1dfXJlbmRlcigpe2xldCB0PVtdO2lELnJlbmRlci5hcHBseSh0aGlzLGFyZ3VtZW50cyksIXRoaXMub3B0aW9ucy5kYXRhTGFiZWxzLmFsbG93T3ZlcmxhcCYmKHRoaXMuZGF0YS5mb3JFYWNoKGU9PntpXyhlLmRhdGFMYWJlbHMpJiZlLmRhdGFMYWJlbHMuZm9yRWFjaChlPT57dC5wdXNoKGUpfSl9KSx0aGlzLm9wdGlvbnMudXNlU2ltdWxhdGlvbiYmdGhpcy5jaGFydC5oaWRlT3ZlcmxhcHBpbmdMYWJlbHModCkpfXJlc2l6ZVJhZGl1cygpe2xldCB0LGUsaSxzLG87bGV0IGE9dGhpcy5jaGFydCxyPWEucmF3UG9zaXRpb25zLG49TWF0aC5taW4sbD1NYXRoLm1heCxoPWEucGxvdExlZnQscD1hLnBsb3RUb3AsZD1hLnBsb3RIZWlnaHQsYz1hLnBsb3RXaWR0aDtmb3IobGV0IGEgb2YodD1pPU51bWJlci5QT1NJVElWRV9JTkZJTklUWSxlPXM9TnVtYmVyLk5FR0FUSVZFX0lORklOSVRZLHIpKW89YVsyXSx0PW4odCxhWzBdLW8pLGU9bChlLGFbMF0rbyksaT1uKGksYVsxXS1vKSxzPWwocyxhWzFdK28pO2xldCB1PVtlLXQscy1pXSxnPVsoYy1oKS91WzBdLChkLXApL3VbMV1dLGY9bi5hcHBseShbXSxnKTtpZihNYXRoLmFicyhmLTEpPjFlLTEwKXtmb3IobGV0IHQgb2Ygcil0WzJdKj1mO3RoaXMucGxhY2VCdWJibGVzKHIpfWVsc2UgYS5kaWZmWT1kLzIrcC1pLShzLWkpLzIsYS5kaWZmWD1jLzIraC10LShlLXQpLzJ9c2VyaWVzQm94KCl7bGV0IHQ7bGV0IGU9dGhpcy5jaGFydCxpPXRoaXMuZGF0YSxzPU1hdGgubWF4LG89TWF0aC5taW4sYT1bZS5wbG90TGVmdCxlLnBsb3RMZWZ0K2UucGxvdFdpZHRoLGUucGxvdFRvcCxlLnBsb3RUb3ArZS5wbG90SGVpZ2h0XTtyZXR1cm4gaS5mb3JFYWNoKGU9PntpRyhlLnBsb3RYKSYmaUcoZS5wbG90WSkmJmUubWFya2VyLnJhZGl1cyYmKHQ9ZS5tYXJrZXIucmFkaXVzLGFbMF09byhhWzBdLGUucGxvdFgtdCksYVsxXT1zKGFbMV0sZS5wbG90WCt0KSxhWzJdPW8oYVsyXSxlLnBsb3RZLXQpLGFbM109cyhhWzNdLGUucGxvdFkrdCkpfSksaVUoYS53aWR0aC9hLmhlaWdodCk/YTpudWxsfXNldFZpc2libGUoKXtsZXQgdD10aGlzO2lELnNldFZpc2libGUuYXBwbHkodCxhcmd1bWVudHMpLHQucGFyZW50Tm9kZUxheW91dCYmdC5ncmFwaD90LnZpc2libGU/KHQuZ3JhcGguc2hvdygpLHQucGFyZW50Tm9kZS5kYXRhTGFiZWwmJnQucGFyZW50Tm9kZS5kYXRhTGFiZWwuc2hvdygpKToodC5ncmFwaC5oaWRlKCksdC5wYXJlbnROb2RlTGF5b3V0LnJlbW92ZUVsZW1lbnRGcm9tQ29sbGVjdGlvbih0LnBhcmVudE5vZGUsdC5wYXJlbnROb2RlTGF5b3V0Lm5vZGVzKSx0LnBhcmVudE5vZGUuZGF0YUxhYmVsJiZ0LnBhcmVudE5vZGUuZGF0YUxhYmVsLmhpZGUoKSk6dC5sYXlvdXQmJih0LnZpc2libGU/dC5sYXlvdXQuYWRkRWxlbWVudHNUb0NvbGxlY3Rpb24odC5wb2ludHMsdC5sYXlvdXQubm9kZXMpOnQucG9pbnRzLmZvckVhY2goZT0+e3QubGF5b3V0LnJlbW92ZUVsZW1lbnRGcm9tQ29sbGVjdGlvbihlLHQubGF5b3V0Lm5vZGVzKX0pKX10cmFuc2xhdGUoKXtsZXQgdCxlLGk7bGV0IHM9dGhpcy5jaGFydCxvPXRoaXMuZGF0YSxhPXRoaXMuaW5kZXgscj10aGlzLm9wdGlvbnMudXNlU2ltdWxhdGlvbjtmb3IobGV0IG4gb2YodGhpcy5nZW5lcmF0ZVBvaW50cygpLGlHKHMuYWxsRGF0YVBvaW50cyl8fChzLmFsbERhdGFQb2ludHM9dGhpcy5hY2N1bXVsYXRlQWxsUG9pbnRzKCksdGhpcy5nZXRQb2ludFJhZGl1cygpKSxyP2k9cy5hbGxEYXRhUG9pbnRzOihpPXRoaXMucGxhY2VCdWJibGVzKHMuYWxsRGF0YVBvaW50cyksdGhpcy5vcHRpb25zLmRyYWdnYWJsZT0hMSksaSkpblszXT09PWEmJih0PW9bbls0XV0sZT1pWihuWzJdLHZvaWQgMCkscnx8KHQucGxvdFg9blswXS1zLnBsb3RMZWZ0K3MuZGlmZlgsdC5wbG90WT1uWzFdLXMucGxvdFRvcCtzLmRpZmZZKSxpVShlKSYmKHQubWFya2VyPWlxKHQubWFya2VyLHtyYWRpdXM6ZSx3aWR0aDoyKmUsaGVpZ2h0OjIqZX0pLHQucmFkaXVzPWUpKTtyJiZ0aGlzLmRlZmVyTGF5b3V0KCksaVYodGhpcyxcImFmdGVyVHJhbnNsYXRlXCIpfX1pai5kZWZhdWx0T3B0aW9ucz1pSyhpTy5kZWZhdWx0T3B0aW9ucyx7bWluU2l6ZTpcIjEwJVwiLG1heFNpemU6XCI1MCVcIixzaXplQnk6XCJhcmVhXCIsem9uZUF4aXM6XCJ5XCIsY3Jpc3A6ITEsdG9vbHRpcDp7cG9pbnRGb3JtYXQ6XCJWYWx1ZToge3BvaW50LnZhbHVlfVwifSxkcmFnZ2FibGU6ITAsdXNlU2ltdWxhdGlvbjohMCxwYXJlbnROb2RlOnthbGxvd1BvaW50U2VsZWN0OiExfSxkYXRhTGFiZWxzOntmb3JtYXR0ZXI6ZnVuY3Rpb24oKXtsZXR7bnVtYmVyRm9ybWF0dGVyOnR9PXRoaXMuc2VyaWVzLmNoYXJ0LHt2YWx1ZTplfT10aGlzLnBvaW50O3JldHVybiBlNyhlKT90KGUsLTEpOlwiXCJ9LHBhcmVudE5vZGVGb3JtYXR0ZXI6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5uYW1lfHxcIlwifSxwYXJlbnROb2RlVGV4dFBhdGg6e2VuYWJsZWQ6ITB9LHBhZGRpbmc6MCxzdHlsZTp7dHJhbnNpdGlvbjpcIm9wYWNpdHkgMjAwMG1zXCJ9fSxsYXlvdXRBbGdvcml0aG06e2luaXRpYWxQb3NpdGlvbnM6XCJjaXJjbGVcIixpbml0aWFsUG9zaXRpb25SYWRpdXM6MjAsYnViYmxlUGFkZGluZzo1LHBhcmVudE5vZGVMaW1pdDohMSxzZXJpZXNJbnRlcmFjdGlvbjohMCxkcmFnQmV0d2VlblNlcmllczohMSxwYXJlbnROb2RlT3B0aW9uczp7bWF4SXRlcmF0aW9uczo0MDAsZ3Jhdml0YXRpb25hbENvbnN0YW50Oi4wMyxtYXhTcGVlZDo1MCxpbml0aWFsUG9zaXRpb25SYWRpdXM6MTAwLHNlcmllc0ludGVyYWN0aW9uOiEwLG1hcmtlcjp7ZmlsbENvbG9yOm51bGwsZmlsbE9wYWNpdHk6MSxsaW5lV2lkdGg6bnVsbCxsaW5lQ29sb3I6bnVsbCxzeW1ib2w6XCJjaXJjbGVcIn19LGVuYWJsZVNpbXVsYXRpb246ITAsdHlwZTpcInBhY2tlZGJ1YmJsZVwiLGludGVncmF0aW9uOlwicGFja2VkYnViYmxlXCIsbWF4SXRlcmF0aW9uczoxZTMsc3BsaXRTZXJpZXM6ITEsbWF4U3BlZWQ6NSxncmF2aXRhdGlvbmFsQ29uc3RhbnQ6LjAxLGZyaWN0aW9uOi0uOTgxfX0pLGlxKGlqLnByb3RvdHlwZSx7cG9pbnRDbGFzczplOSxheGlzVHlwZXM6W10sZGlyZWN0VG91Y2g6ITAsZm9yY2VzOltcImJhcnljZW50ZXJcIixcInJlcHVsc2l2ZVwiXSxoYXNEcmFnZ2FibGVOb2RlczohMCxpbnZlcnRpYmxlOiExLGlzQ2FydGVzaWFuOiExLG5vU2hhcmVkVG9vbHRpcDohMCxwb2ludEFycmF5TWFwOltcInZhbHVlXCJdLHBvaW50VmFsS2V5OlwidmFsdWVcIixyZXF1aXJlU29ydGluZzohMSx0cmFja2VyR3JvdXBzOltcImdyb3VwXCIsXCJkYXRhTGFiZWxzR3JvdXBcIixcInBhcmVudE5vZGVzR3JvdXBcIl0saW5pdERhdGFMYWJlbHM6aUgsYWxpZ25EYXRhTGFiZWw6aUQuYWxpZ25EYXRhTGFiZWwsaW5kZXhhdGVOb2Rlczppeixvbk1vdXNlRG93bjplWi5vbk1vdXNlRG93bixvbk1vdXNlTW92ZTplWi5vbk1vdXNlTW92ZSxyZWRyYXdIYWxvOmVaLnJlZHJhd0hhbG8sc2VhcmNoUG9pbnQ6aXp9KSxQKCkucmVnaXN0ZXJTZXJpZXNUeXBlKFwicGFja2VkYnViYmxlXCIsaWopO2xldHtub29wOmkkfT15KCkse2FyZWE6aVEsbGluZTppSixzY2F0dGVyOmkwfT1QKCkuc2VyaWVzVHlwZXMse2V4dGVuZDppMSxtZXJnZTppMn09eSgpO2NsYXNzIGkzIGV4dGVuZHMgaTB7Z2V0R3JhcGhQYXRoKCl7bGV0IHQ9aUoucHJvdG90eXBlLmdldEdyYXBoUGF0aC5jYWxsKHRoaXMpLGU9dC5sZW5ndGgrMTtmb3IoO2UtLTspKGU9PT10Lmxlbmd0aHx8XCJNXCI9PT10W2VdWzBdKSYmZT4wJiZ0LnNwbGljZShlLDAsW1wiWlwiXSk7cmV0dXJuIHRoaXMuYXJlYVBhdGg9dCx0fWRyYXdHcmFwaCgpe3RoaXMub3B0aW9ucy5maWxsQ29sb3I9dGhpcy5jb2xvcixpUS5wcm90b3R5cGUuZHJhd0dyYXBoLmNhbGwodGhpcyl9fWkzLmRlZmF1bHRPcHRpb25zPWkyKGkwLmRlZmF1bHRPcHRpb25zLHttYXJrZXI6e2VuYWJsZWQ6ITEsc3RhdGVzOntob3Zlcjp7ZW5hYmxlZDohMX19fSxzdGlja3lUcmFja2luZzohMSx0b29sdGlwOntmb2xsb3dQb2ludGVyOiEwLHBvaW50Rm9ybWF0OlwiXCJ9LHRyYWNrQnlBcmVhOiEwLGxlZ2VuZFN5bWJvbDpcInJlY3RhbmdsZVwifSksaTEoaTMucHJvdG90eXBlLHt0eXBlOlwicG9seWdvblwiLGRyYXdUcmFja2VyOmlKLnByb3RvdHlwZS5kcmF3VHJhY2tlcixzZXRTdGFja2VkUG9pbnRzOmkkfSksUCgpLnJlZ2lzdGVyU2VyaWVzVHlwZShcInBvbHlnb25cIixpMyk7bGV0IGk1PXtjaXJjdWxhcjp7Z3JpZExpbmVXaWR0aDoxLGxhYmVsczp7YWxpZ246dm9pZCAwLHg6MCx5OnZvaWQgMH0sbWF4UGFkZGluZzowLG1pblBhZGRpbmc6MCxzaG93TGFzdExhYmVsOiExLHRpY2tMZW5ndGg6MH0scmFkaWFsOntncmlkTGluZUludGVycG9sYXRpb246XCJjaXJjbGVcIixncmlkTGluZVdpZHRoOjEsbGFiZWxzOnthbGlnbjpcInJpZ2h0XCIscGFkZGluZzo1LHg6LTMseTotMn0sc2hvd0xhc3RMYWJlbDohMSx0aXRsZTp7eDo0LHRleHQ6bnVsbCxyb3RhdGlvbjo5MH19LHJhZGlhbEdhdWdlOntlbmRPblRpY2s6ITEsZ3JpZExpbmVXaWR0aDowLGxhYmVsczp7YWxpZ246XCJjZW50ZXJcIixkaXN0YW5jZTotMjUseDowLHk6dm9pZCAwfSxsaW5lV2lkdGg6MSxtaW5vckdyaWRMaW5lV2lkdGg6MCxtaW5vclRpY2tJbnRlcnZhbDpcImF1dG9cIixtaW5vclRpY2tMZW5ndGg6MTAsbWlub3JUaWNrUG9zaXRpb246XCJpbnNpZGVcIixtaW5vclRpY2tXaWR0aDoxLHN0YXJ0T25UaWNrOiExLHRpY2tMZW5ndGg6MTAsdGlja1BpeGVsSW50ZXJ2YWw6MTAwLHRpY2tQb3NpdGlvbjpcImluc2lkZVwiLHRpY2tXaWR0aDoyLHRpdGxlOntyb3RhdGlvbjowLHRleHQ6XCJcIn0sekluZGV4OjJ9fSx7ZGVmYXVsdE9wdGlvbnM6aTh9PXkoKSx7Y29tcG9zZWQ6aTYsbm9vcDppNH09eSgpLHthZGRFdmVudDppOSxjb3JyZWN0RmxvYXQ6aTcsZGVmaW5lZDpzdCxleHRlbmQ6c2UsZmlyZUV2ZW50OnNpLGlzT2JqZWN0OnNzLG1lcmdlOnNvLHBpY2s6c2EscHVzaFVuaXF1ZTpzcixyZWxhdGl2ZUxlbmd0aDpzbix3cmFwOnNsfT15KCk7IWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt0aGlzLmF1dG9Db25uZWN0PXRoaXMuaXNDaXJjdWxhciYmdm9pZCAwPT09c2EodGhpcy51c2VyTWF4LHRoaXMub3B0aW9ucy5tYXgpJiZpNyh0aGlzLmVuZEFuZ2xlUmFkLXRoaXMuc3RhcnRBbmdsZVJhZCk9PT1pNygyKk1hdGguUEkpLCF0aGlzLmlzQ2lyY3VsYXImJnRoaXMuY2hhcnQuaW52ZXJ0ZWQmJnRoaXMubWF4KyssdGhpcy5hdXRvQ29ubmVjdCYmKHRoaXMubWF4Kz10aGlzLmNhdGVnb3JpZXMmJjF8fHRoaXMucG9pbnRSYW5nZXx8dGhpcy5jbG9zZXN0UG9pbnRSYW5nZXx8MCl9ZnVuY3Rpb24gaSgpe3JldHVybigpPT57aWYodGhpcy5pc1JhZGlhbCYmdGhpcy50aWNrUG9zaXRpb25zJiZ0aGlzLm9wdGlvbnMubGFiZWxzJiYhMCE9PXRoaXMub3B0aW9ucy5sYWJlbHMuYWxsb3dPdmVybGFwKXJldHVybiB0aGlzLnRpY2tQb3NpdGlvbnMubWFwKHQ9PnRoaXMudGlja3NbdF0mJnRoaXMudGlja3NbdF0ubGFiZWwpLmZpbHRlcih0PT4hIXQpfX1mdW5jdGlvbiBzKCl7cmV0dXJuIGk0fWZ1bmN0aW9uIG8odCxlLGkpe2xldCBzPXRoaXMucGFuZS5jZW50ZXIsbz10LnZhbHVlLGEscixuO3JldHVybiB0aGlzLmlzQ2lyY3VsYXI/KHN0KG8pP3QucG9pbnQmJih0LnBvaW50LnNoYXBlQXJnc3x8e30pLnN0YXJ0JiYobz10aGlzLmNoYXJ0LmludmVydGVkP3RoaXMudHJhbnNsYXRlKHQucG9pbnQucmVjdFBsb3RZLCEwKTp0LnBvaW50LngpOihyPXQuY2hhcnRYfHwwLG49dC5jaGFydFl8fDAsbz10aGlzLnRyYW5zbGF0ZShNYXRoLmF0YW4yKG4taSxyLWUpLXRoaXMuc3RhcnRBbmdsZVJhZCwhMCkpLHI9KGE9dGhpcy5nZXRQb3NpdGlvbihvKSkueCxuPWEueSk6KHN0KG8pfHwocj10LmNoYXJ0WCxuPXQuY2hhcnRZKSxzdChyKSYmc3QobikmJihpPXNbMV0rdGhpcy5jaGFydC5wbG90VG9wLG89dGhpcy50cmFuc2xhdGUoTWF0aC5taW4oTWF0aC5zcXJ0KE1hdGgucG93KHItZSwyKStNYXRoLnBvdyhuLWksMikpLHNbMl0vMiktc1szXS8yLCEwKSkpLFtvLHJ8fDAsbnx8MF19ZnVuY3Rpb24gYSh0LGUsaSl7bGV0IHM9dGhpcy5wYW5lLmNlbnRlcixvPXRoaXMuY2hhcnQsYT10aGlzLmxlZnR8fDAscj10aGlzLnRvcHx8MCxuLGw9c2EoZSxzWzJdLzItdGhpcy5vZmZzZXQpLGg7cmV0dXJuIHZvaWQgMD09PWkmJihpPXRoaXMuaG9yaXo/MDp0aGlzLmNlbnRlciYmLXRoaXMuY2VudGVyWzNdLzIpLGkmJihsKz1pKSx0aGlzLmlzQ2lyY3VsYXJ8fHZvaWQgMCE9PWU/KChoPXRoaXMuY2hhcnQucmVuZGVyZXIuc3ltYm9scy5hcmMoYStzWzBdLHIrc1sxXSxsLGwse3N0YXJ0OnRoaXMuc3RhcnRBbmdsZVJhZCxlbmQ6dGhpcy5lbmRBbmdsZVJhZCxvcGVuOiEwLGlubmVyUjowfSkpLnhCb3VuZHM9W2Erc1swXV0saC55Qm91bmRzPVtyK3NbMV0tbF0pOihuPXRoaXMucG9zdFRyYW5zbGF0ZSh0aGlzLmFuZ2xlUmFkLGwpLGg9W1tcIk1cIix0aGlzLmNlbnRlclswXStvLnBsb3RMZWZ0LHRoaXMuY2VudGVyWzFdK28ucGxvdFRvcF0sW1wiTFwiLG4ueCxuLnldXSksaH1mdW5jdGlvbiByKCl7dGhpcy5jb25zdHJ1Y3Rvci5wcm90b3R5cGUuZ2V0T2Zmc2V0LmNhbGwodGhpcyksdGhpcy5jaGFydC5heGlzT2Zmc2V0W3RoaXMuc2lkZV09MH1mdW5jdGlvbiBuKHQsZSxpKXtsZXQgcz10aGlzLmNoYXJ0LG89dD0+e2lmKFwic3RyaW5nXCI9PXR5cGVvZiB0KXtsZXQgZT1wYXJzZUludCh0LDEwKTtyZXR1cm4gZC50ZXN0KHQpJiYoZT1lKm4vMTAwKSxlfXJldHVybiB0fSxhPXRoaXMuY2VudGVyLHI9dGhpcy5zdGFydEFuZ2xlUmFkLG49YVsyXS8yLGw9TWF0aC5taW4odGhpcy5vZmZzZXQsMCksaD10aGlzLmxlZnR8fDAscD10aGlzLnRvcHx8MCxkPS8lJC8sYz10aGlzLmlzQ2lyY3VsYXIsdSxnLGYsbSxiLHkseD1zYShvKGkub3V0ZXJSYWRpdXMpLG4pLFA9byhpLmlubmVyUmFkaXVzKSx2PXNhKG8oaS50aGlja25lc3MpLDEwKTtpZihcInBvbHlnb25cIj09PXRoaXMub3B0aW9ucy5ncmlkTGluZUludGVycG9sYXRpb24peT10aGlzLmdldFBsb3RMaW5lUGF0aCh7dmFsdWU6dH0pLmNvbmNhdCh0aGlzLmdldFBsb3RMaW5lUGF0aCh7dmFsdWU6ZSxyZXZlcnNlOiEwfSkpO2Vsc2V7dD1NYXRoLm1heCh0LHRoaXMubWluKSxlPU1hdGgubWluKGUsdGhpcy5tYXgpO2xldCBvPXRoaXMudHJhbnNsYXRlKHQpLG49dGhpcy50cmFuc2xhdGUoZSk7Y3x8KHg9b3x8MCxQPW58fDApLFwiY2lyY2xlXCIhPT1pLnNoYXBlJiZjPyh1PXIrKG98fDApLGc9cisobnx8MCkpOih1PS1NYXRoLlBJLzIsZz0xLjUqTWF0aC5QSSxiPSEwKSx4LT1sLHYtPWwseT1zLnJlbmRlcmVyLnN5bWJvbHMuYXJjKGgrYVswXSxwK2FbMV0seCx4LHtzdGFydDpNYXRoLm1pbih1LGcpLGVuZDpNYXRoLm1heCh1LGcpLGlubmVyUjpzYShQLHgtdiksb3BlbjpiLGJvcmRlclJhZGl1czppLmJvcmRlclJhZGl1c30pLGMmJihmPShnK3UpLzIsbT1oK2FbMF0rYVsyXS8yKk1hdGguY29zKGYpLHkueEJvdW5kcz1mPi1NYXRoLlBJLzImJmY8TWF0aC5QSS8yP1ttLHMucGxvdFdpZHRoXTpbMCxtXSx5LnlCb3VuZHM9W3ArYVsxXSthWzJdLzIqTWF0aC5zaW4oZildLHkueUJvdW5kc1swXSs9Zj4tTWF0aC5QSSYmZjwwfHxmPk1hdGguUEk/LTEwOjEwKX1yZXR1cm4geX1mdW5jdGlvbiBsKHQpe2xldCBlPXRoaXMucGFuZS5jZW50ZXIsaT10aGlzLmNoYXJ0LHM9aS5pbnZlcnRlZCxvPXQucmV2ZXJzZSxhPXRoaXMucGFuZS5vcHRpb25zLmJhY2tncm91bmQ/dGhpcy5wYW5lLm9wdGlvbnMuYmFja2dyb3VuZFswXXx8dGhpcy5wYW5lLm9wdGlvbnMuYmFja2dyb3VuZDp7fSxyPWEuaW5uZXJSYWRpdXN8fFwiMCVcIixuPWEub3V0ZXJSYWRpdXN8fFwiMTAwJVwiLGw9ZVswXStpLnBsb3RMZWZ0LGg9ZVsxXStpLnBsb3RUb3AscD10aGlzLmhlaWdodCxkPXQuaXNDcm9zc2hhaXIsYz1lWzNdLzIsdT10LnZhbHVlLGcsZixtLGIseSx4LFAsdixNLEw9dGhpcy5nZXRQb3NpdGlvbih1KSxrPUwueCx3PUwueTtpZihkJiYodT0odj10aGlzLmdldENyb3NzaGFpclBvc2l0aW9uKHQsbCxoKSlbMF0saz12WzFdLHc9dlsyXSksdGhpcy5pc0NpcmN1bGFyKWY9TWF0aC5zcXJ0KE1hdGgucG93KGstbCwyKStNYXRoLnBvdyh3LWgsMikpLG09XCJzdHJpbmdcIj09dHlwZW9mIHI/c24ociwxKTpyL2YsYj1cInN0cmluZ1wiPT10eXBlb2Ygbj9zbihuLDEpOm4vZixlJiZjJiYobTwoZz1jL2YpJiYobT1nKSxiPGcmJihiPWcpKSxNPVtbXCJNXCIsbCttKihrLWwpLGgtbSooaC13KV0sW1wiTFwiLGstKDEtYikqKGstbCksdysoMS1iKSooaC13KV1dO2Vsc2UgaWYoKHU9dGhpcy50cmFuc2xhdGUodSkpJiYodTwwfHx1PnApJiYodT0wKSxcImNpcmNsZVwiPT09dGhpcy5vcHRpb25zLmdyaWRMaW5lSW50ZXJwb2xhdGlvbilNPXRoaXMuZ2V0TGluZVBhdGgoMCx1LGMpO2Vsc2UgaWYoTT1bXSxpW3M/XCJ5QXhpc1wiOlwieEF4aXNcIl0uZm9yRWFjaCh0PT57dC5wYW5lPT09dGhpcy5wYW5lJiYoeT10KX0pLHkpe1A9eS50aWNrUG9zaXRpb25zLHkuYXV0b0Nvbm5lY3QmJihQPVAuY29uY2F0KFtQWzBdXSkpLG8mJihQPVAuc2xpY2UoKS5yZXZlcnNlKCkpLHUmJih1Kz1jKTtmb3IobGV0IHQ9MDt0PFAubGVuZ3RoO3QrKyl4PXkuZ2V0UG9zaXRpb24oUFt0XSx1KSxNLnB1c2godD9bXCJMXCIseC54LHgueV06W1wiTVwiLHgueCx4LnldKX1yZXR1cm4gTX1mdW5jdGlvbiBoKHQsZSl7bGV0IGk9dGhpcy50cmFuc2xhdGUodCk7cmV0dXJuIHRoaXMucG9zdFRyYW5zbGF0ZSh0aGlzLmlzQ2lyY3VsYXI/aTp0aGlzLmFuZ2xlUmFkLHNhKHRoaXMuaXNDaXJjdWxhcj9lOmk8MD8wOmksdGhpcy5jZW50ZXJbMl0vMiktdGhpcy5vZmZzZXQpfWZ1bmN0aW9uIHAoKXtsZXQgdD10aGlzLmNlbnRlcixlPXRoaXMuY2hhcnQsaT10aGlzLm9wdGlvbnMudGl0bGU7cmV0dXJue3g6ZS5wbG90TGVmdCt0WzBdKyhpLnh8fDApLHk6ZS5wbG90VG9wK3RbMV0tKHtoaWdoOi41LG1pZGRsZTouMjUsbG93OjB9KVtpLmFsaWduXSp0WzJdKyhpLnl8fDApfX1mdW5jdGlvbiBkKHQpe3QuYmVmb3JlU2V0VGlja1Bvc2l0aW9ucz1lLHQuY3JlYXRlTGFiZWxDb2xsZWN0b3I9aSx0LmdldENyb3NzaGFpclBvc2l0aW9uPW8sdC5nZXRMaW5lUGF0aD1hLHQuZ2V0T2Zmc2V0PXIsdC5nZXRQbG90QmFuZFBhdGg9bix0LmdldFBsb3RMaW5lUGF0aD1sLHQuZ2V0UG9zaXRpb249aCx0LmdldFRpdGxlUG9zaXRpb249cCx0LnBvc3RUcmFuc2xhdGU9dix0LnNldEF4aXNTaXplPUwsdC5zZXRBeGlzVHJhbnNsYXRpb249ayx0LnNldE9wdGlvbnM9d31mdW5jdGlvbiBjKCl7bGV0IHQ9dGhpcy5jaGFydCxlPXRoaXMub3B0aW9ucyxpPXQuYW5ndWxhciYmdGhpcy5pc1hBeGlzLHM9dGhpcy5wYW5lLG89cyYmcy5vcHRpb25zO2lmKCFpJiZzJiYodC5hbmd1bGFyfHx0LnBvbGFyKSl7bGV0IHQ9MipNYXRoLlBJLGk9KHNhKG8uc3RhcnRBbmdsZSwwKS05MCkqTWF0aC5QSS8xODAscz0oc2Eoby5lbmRBbmdsZSxzYShvLnN0YXJ0QW5nbGUsMCkrMzYwKS05MCkqTWF0aC5QSS8xODA7dGhpcy5hbmdsZVJhZD0oZS5hbmdsZXx8MCkqTWF0aC5QSS8xODAsdGhpcy5zdGFydEFuZ2xlUmFkPWksdGhpcy5lbmRBbmdsZVJhZD1zLHRoaXMub2Zmc2V0PWUub2Zmc2V0fHwwO2xldCBhPShpJXQrdCkldCxyPShzJXQrdCkldDthPk1hdGguUEkmJihhLT10KSxyPk1hdGguUEkmJihyLT10KSx0aGlzLm5vcm1hbGl6ZWRTdGFydEFuZ2xlUmFkPWEsdGhpcy5ub3JtYWxpemVkRW5kQW5nbGVSYWQ9cn19ZnVuY3Rpb24gdSh0KXt0aGlzLmlzUmFkaWFsJiYodC5hbGlnbj12b2lkIDAsdC5wcmV2ZW50RGVmYXVsdCgpKX1mdW5jdGlvbiBnKCl7aWYodGhpcy5jaGFydCYmdGhpcy5jaGFydC5sYWJlbENvbGxlY3RvcnMpe2xldCB0PXRoaXMubGFiZWxDb2xsZWN0b3I/dGhpcy5jaGFydC5sYWJlbENvbGxlY3RvcnMuaW5kZXhPZih0aGlzLmxhYmVsQ29sbGVjdG9yKTotMTt0Pj0wJiZ0aGlzLmNoYXJ0LmxhYmVsQ29sbGVjdG9ycy5zcGxpY2UodCwxKX19ZnVuY3Rpb24gZih0KXtsZXQgZTtsZXQgaT10aGlzLmNoYXJ0LG89aS5hbmd1bGFyLGE9aS5wb2xhcixyPXRoaXMuaXNYQXhpcyxuPXRoaXMuY29sbCxsPXQudXNlck9wdGlvbnMucGFuZXx8MCxoPXRoaXMucGFuZT1pLnBhbmUmJmkucGFuZVtsXTtpZihcImNvbG9yQXhpc1wiPT09bil7dGhpcy5pc1JhZGlhbD0hMTtyZXR1cm59bz8obyYmcj8odGhpcy5pc0hpZGRlbj0hMCx0aGlzLmNyZWF0ZUxhYmVsQ29sbGVjdG9yPXMsdGhpcy5nZXRPZmZzZXQ9aTQsdGhpcy5yZWRyYXc9TSx0aGlzLnJlbmRlcj1NLHRoaXMuc2V0U2NhbGU9aTQsdGhpcy5zZXRDYXRlZ29yaWVzPWk0LHRoaXMuc2V0VGl0bGU9aTQpOmQodGhpcyksZT0hcik6YSYmKGQodGhpcyksZT10aGlzLmhvcml6KSxvfHxhPyh0aGlzLmlzUmFkaWFsPSEwLHRoaXMubGFiZWxDb2xsZWN0b3J8fCh0aGlzLmxhYmVsQ29sbGVjdG9yPXRoaXMuY3JlYXRlTGFiZWxDb2xsZWN0b3IoKSksdGhpcy5sYWJlbENvbGxlY3RvciYmaS5sYWJlbENvbGxlY3RvcnMucHVzaCh0aGlzLmxhYmVsQ29sbGVjdG9yKSk6dGhpcy5pc1JhZGlhbD0hMSxoJiZlJiYoaC5heGlzPXRoaXMpLHRoaXMuaXNDaXJjdWxhcj1lfWZ1bmN0aW9uIG0oKXt0aGlzLmlzUmFkaWFsJiZ0aGlzLmJlZm9yZVNldFRpY2tQb3NpdGlvbnMoKX1mdW5jdGlvbiBiKHQpe2xldCBlPXRoaXMubGFiZWw7aWYoIWUpcmV0dXJuO2xldCBpPXRoaXMuYXhpcyxzPWUuZ2V0QkJveCgpLG89aS5vcHRpb25zLmxhYmVscyxhPShpLnRyYW5zbGF0ZSh0aGlzLnBvcykraS5zdGFydEFuZ2xlUmFkK01hdGguUEkvMikvTWF0aC5QSSoxODAlMzYwLHI9TWF0aC5yb3VuZChhKSxuPXN0KG8ueSk/MDotKC4zKnMuaGVpZ2h0KSxsPW8ueSxoLHA9MjAsZD1vLmFsaWduLGM9XCJlbmRcIix1PXI8MD9yKzM2MDpyLGc9dSxmPTAsbT0wO2kuaXNSYWRpYWwmJihoPWkuZ2V0UG9zaXRpb24odGhpcy5wb3MsaS5jZW50ZXJbMl0vMitzbihzYShvLmRpc3RhbmNlLC0yNSksaS5jZW50ZXJbMl0vMiwtaS5jZW50ZXJbMl0vMikpLFwiYXV0b1wiPT09by5yb3RhdGlvbj9lLmF0dHIoe3JvdGF0aW9uOmF9KTpzdChsKXx8KGw9aS5jaGFydC5yZW5kZXJlci5mb250TWV0cmljcyhlKS5iLXMuaGVpZ2h0LzIpLHN0KGQpfHwoaS5pc0NpcmN1bGFyPyhzLndpZHRoPmkubGVuKmkudGlja0ludGVydmFsLyhpLm1heC1pLm1pbikmJihwPTApLGQ9YT5wJiZhPDE4MC1wP1wibGVmdFwiOmE+MTgwK3AmJmE8MzYwLXA/XCJyaWdodFwiOlwiY2VudGVyXCIpOmQ9XCJjZW50ZXJcIixlLmF0dHIoe2FsaWduOmR9KSksXCJhdXRvXCI9PT1kJiYyPT09aS50aWNrUG9zaXRpb25zLmxlbmd0aCYmaS5pc0NpcmN1bGFyJiYodT45MCYmdTwxODA/dT0xODAtdTp1PjI3MCYmdTw9MzYwJiYodT01NDAtdSksZz4xODAmJmc8PTM2MCYmKGc9MzYwLWcpLChpLnBhbmUub3B0aW9ucy5zdGFydEFuZ2xlPT09cnx8aS5wYW5lLm9wdGlvbnMuc3RhcnRBbmdsZT09PXIrMzYwfHxpLnBhbmUub3B0aW9ucy5zdGFydEFuZ2xlPT09ci0zNjApJiYoYz1cInN0YXJ0XCIpLGQ9cj49LTkwJiZyPD05MHx8cj49LTM2MCYmcjw9LTI3MHx8cj49MjcwJiZyPD0zNjA/XCJzdGFydFwiPT09Yz9cInJpZ2h0XCI6XCJsZWZ0XCI6XCJzdGFydFwiPT09Yz9cImxlZnRcIjpcInJpZ2h0XCIsZz43MCYmZzwxMTAmJihkPVwiY2VudGVyXCIpLHU8MTV8fHU+PTE4MCYmdTwxOTU/Zj0uMypzLmhlaWdodDp1Pj0xNSYmdTw9MzU/Zj1cInN0YXJ0XCI9PT1jPzA6Ljc1KnMuaGVpZ2h0OnU+PTE5NSYmdTw9MjE1P2Y9XCJzdGFydFwiPT09Yz8uNzUqcy5oZWlnaHQ6MDp1PjM1JiZ1PD05MD9mPVwic3RhcnRcIj09PWM/LSguMjUqcy5oZWlnaHQpOnMuaGVpZ2h0OnU+MjE1JiZ1PD0yNzAmJihmPVwic3RhcnRcIj09PWM/cy5oZWlnaHQ6LSguMjUqcy5oZWlnaHQpKSxnPDE1P209XCJzdGFydFwiPT09Yz8tKC4xNSpzLmhlaWdodCk6LjE1KnMuaGVpZ2h0Omc+MTY1JiZnPD0xODAmJihtPVwic3RhcnRcIj09PWM/LjE1KnMuaGVpZ2h0Oi0oLjE1KnMuaGVpZ2h0KSksZS5hdHRyKHthbGlnbjpkfSksZS50cmFuc2xhdGUobSxmK24pKSx0LnBvcy54PWgueCsoby54fHwwKSx0LnBvcy55PWgueSsobHx8MCkpfWZ1bmN0aW9uIHgodCl7dGhpcy5heGlzLmdldFBvc2l0aW9uJiZzZSh0LnBvcyx0aGlzLmF4aXMuZ2V0UG9zaXRpb24odGhpcy5wb3MpKX1mdW5jdGlvbiBQKHtvcHRpb25zOmV9KXtlLnhBeGlzJiZzbyghMCx0LnJhZGlhbERlZmF1bHRPcHRpb25zLmNpcmN1bGFyLGUueEF4aXMpLGUueUF4aXMmJnNvKCEwLHQucmFkaWFsRGVmYXVsdE9wdGlvbnMucmFkaWFsR2F1Z2UsZS55QXhpcyl9ZnVuY3Rpb24gdih0LGUpe2xldCBpPXRoaXMuY2hhcnQscz10aGlzLmNlbnRlcjtyZXR1cm4gdD10aGlzLnN0YXJ0QW5nbGVSYWQrdCx7eDppLnBsb3RMZWZ0K3NbMF0rTWF0aC5jb3ModCkqZSx5OmkucGxvdFRvcCtzWzFdK01hdGguc2luKHQpKmV9fWZ1bmN0aW9uIE0oKXt0aGlzLmlzRGlydHk9ITF9ZnVuY3Rpb24gTCgpe2xldCB0LGU7dGhpcy5jb25zdHJ1Y3Rvci5wcm90b3R5cGUuc2V0QXhpc1NpemUuY2FsbCh0aGlzKSx0aGlzLmlzUmFkaWFsJiYodGhpcy5wYW5lLnVwZGF0ZUNlbnRlcih0aGlzKSx0PXRoaXMuY2VudGVyPXRoaXMucGFuZS5jZW50ZXIuc2xpY2UoKSx0aGlzLmlzQ2lyY3VsYXI/dGhpcy5zZWN0b3I9dGhpcy5lbmRBbmdsZVJhZC10aGlzLnN0YXJ0QW5nbGVSYWQ6KGU9dGhpcy5wb3N0VHJhbnNsYXRlKHRoaXMuYW5nbGVSYWQsdFszXS8yKSx0WzBdPWUueC10aGlzLmNoYXJ0LnBsb3RMZWZ0LHRbMV09ZS55LXRoaXMuY2hhcnQucGxvdFRvcCksdGhpcy5sZW49dGhpcy53aWR0aD10aGlzLmhlaWdodD0odFsyXS10WzNdKSpzYSh0aGlzLnNlY3RvciwxKS8yKX1mdW5jdGlvbiBrKCl7dGhpcy5jb25zdHJ1Y3Rvci5wcm90b3R5cGUuc2V0QXhpc1RyYW5zbGF0aW9uLmNhbGwodGhpcyksdGhpcy5jZW50ZXImJih0aGlzLmlzQ2lyY3VsYXI/dGhpcy50cmFuc0E9KHRoaXMuZW5kQW5nbGVSYWQtdGhpcy5zdGFydEFuZ2xlUmFkKS8odGhpcy5tYXgtdGhpcy5taW58fDEpOnRoaXMudHJhbnNBPSh0aGlzLmNlbnRlclsyXS10aGlzLmNlbnRlclszXSkvMi8odGhpcy5tYXgtdGhpcy5taW58fDEpLHRoaXMuaXNYQXhpcz90aGlzLm1pblBpeGVsUGFkZGluZz10aGlzLnRyYW5zQSp0aGlzLm1pblBvaW50T2Zmc2V0OnRoaXMubWluUGl4ZWxQYWRkaW5nPTApfWZ1bmN0aW9uIHcoZSl7bGV0e2NvbGw6aX09dGhpcyx7YW5ndWxhcjpzLGludmVydGVkOm8scG9sYXI6YX09dGhpcy5jaGFydCxyPXt9O3M/dGhpcy5pc1hBeGlzfHwocj1zbyhpOC55QXhpcyx0LnJhZGlhbERlZmF1bHRPcHRpb25zLnJhZGlhbEdhdWdlKSk6YSYmKHI9dGhpcy5ob3Jpej9zbyhpOC54QXhpcyx0LnJhZGlhbERlZmF1bHRPcHRpb25zLmNpcmN1bGFyKTpzbyhcInhBeGlzXCI9PT1pP2k4LnhBeGlzOmk4LnlBeGlzLHQucmFkaWFsRGVmYXVsdE9wdGlvbnMucmFkaWFsKSksbyYmXCJ5QXhpc1wiPT09aSYmKHIuc3RhY2tMYWJlbHM9c3MoaTgueUF4aXMsITApP2k4LnlBeGlzLnN0YWNrTGFiZWxzOnt9LHIucmV2ZXJzZWRTdGFja3M9ITApO2xldCBuPXRoaXMub3B0aW9ucz1zbyhyLGUpO24ucGxvdEJhbmRzfHwobi5wbG90QmFuZHM9W10pLHNpKHRoaXMsXCJhZnRlclNldE9wdGlvbnNcIil9ZnVuY3Rpb24gQSh0LGUsaSxzLG8sYSxyKXtsZXQgbjtsZXQgbD10aGlzLmF4aXM7cmV0dXJuIGwuaXNSYWRpYWw/W1wiTVwiLGUsaSxcIkxcIiwobj1sLmdldFBvc2l0aW9uKHRoaXMucG9zLGwuY2VudGVyWzJdLzIrcykpLngsbi55XTp0LmNhbGwodGhpcyxlLGkscyxvLGEscil9dC5yYWRpYWxEZWZhdWx0T3B0aW9ucz1zbyhpNSksdC5jb21wb3NlPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHNyKGk2LFwiQXhpcy5SYWRpYWxcIikmJihpOSh0LFwiYWZ0ZXJJbml0XCIsYyksaTkodCxcImF1dG9MYWJlbEFsaWduXCIsdSksaTkodCxcImRlc3Ryb3lcIixnKSxpOSh0LFwiaW5pdFwiLGYpLGk5KHQsXCJpbml0aWFsQXhpc1RyYW5zbGF0aW9uXCIsbSksaTkoZSxcImFmdGVyR2V0TGFiZWxQb3NpdGlvblwiLGIpLGk5KGUsXCJhZnRlckdldFBvc2l0aW9uXCIseCksaTkoeSgpLFwic2V0T3B0aW9uc1wiLFApLHNsKGUucHJvdG90eXBlLFwiZ2V0TWFya1BhdGhcIixBKSksdH19KGR8fChkPXt9KSk7bGV0IHNoPWQse2FuaW1PYmplY3Q6c3B9PXkoKSx7Y29tcG9zZWQ6c2R9PXkoKSx7YWRkRXZlbnQ6c2MsZGVmaW5lZDpzdSxmaW5kOnNnLGlzTnVtYmVyOnNmLG1lcmdlOnNtLHBpY2s6c2IscHVzaFVuaXF1ZTpzeSxyZWxhdGl2ZUxlbmd0aDpzeCxzcGxhdDpzUCx1bmlxdWVLZXk6c3Ysd3JhcDpzTX09eSgpO2Z1bmN0aW9uIHNMKCl7KHRoaXMucGFuZXx8W10pLmZvckVhY2godD0+e3QucmVuZGVyKCl9KX1mdW5jdGlvbiBzayh0KXtsZXQgZT10LmFyZ3NbMF0ueEF4aXMsaT10LmFyZ3NbMF0ueUF4aXMscz10LmFyZ3NbMF0uY2hhcnQ7ZSYmaSYmKFwicG9seWdvblwiPT09aS5ncmlkTGluZUludGVycG9sYXRpb24/KGUuc3RhcnRPblRpY2s9ITAsZS5lbmRPblRpY2s9ITApOlwicG9seWdvblwiPT09ZS5ncmlkTGluZUludGVycG9sYXRpb24mJnMuaW52ZXJ0ZWQmJihpLnN0YXJ0T25UaWNrPSEwLGkuZW5kT25UaWNrPSEwKSl9ZnVuY3Rpb24gc3coKXt0aGlzLnBhbmV8fCh0aGlzLnBhbmU9W10pLHRoaXMub3B0aW9ucy5wYW5lPXNQKHRoaXMub3B0aW9ucy5wYW5lfHx7fSksdGhpcy5vcHRpb25zLnBhbmUuZm9yRWFjaCh0PT57bmV3IEYodCx0aGlzKX0sdGhpcyl9ZnVuY3Rpb24gc0EodCl7bGV0IGU9dC5hcmdzLm1hcmtlcixpPXRoaXMuY2hhcnQueEF4aXNbMF0scz10aGlzLmNoYXJ0LnlBeGlzWzBdLG89dGhpcy5jaGFydC5pbnZlcnRlZCxhPW8/czppLHI9bz9pOnM7aWYodGhpcy5jaGFydC5wb2xhcil7dC5wcmV2ZW50RGVmYXVsdCgpO2xldCBpPShlLmF0dHI/ZS5hdHRyKFwic3RhcnRcIik6ZS5zdGFydCktYS5zdGFydEFuZ2xlUmFkLHM9ZS5hdHRyP2UuYXR0cihcInJcIik6ZS5yLG89KGUuYXR0cj9lLmF0dHIoXCJlbmRcIik6ZS5lbmQpLWEuc3RhcnRBbmdsZVJhZCxuPWUuYXR0cj9lLmF0dHIoXCJpbm5lclJcIik6ZS5pbm5lclI7dC5yZXN1bHQueD1pK2EucG9zLHQucmVzdWx0LndpZHRoPW8taSx0LnJlc3VsdC55PXIubGVuK3IucG9zLXMsdC5yZXN1bHQuaGVpZ2h0PXMtbn19ZnVuY3Rpb24gc1ModCl7bGV0IGU9dGhpcy5jaGFydDtpZihlLnBvbGFyJiZlLmhvdmVyUGFuZSYmZS5ob3ZlclBhbmUuYXhpcyl7dC5wcmV2ZW50RGVmYXVsdCgpO2xldCBpPWUuaG92ZXJQYW5lLmNlbnRlcixzPWUubW91c2VEb3duWHx8MCxvPWUubW91c2VEb3duWXx8MCxhPXQuYXJncy5jaGFydFkscj10LmFyZ3MuY2hhcnRYLG49MipNYXRoLlBJLGw9ZS5ob3ZlclBhbmUuYXhpcy5zdGFydEFuZ2xlUmFkLGg9ZS5ob3ZlclBhbmUuYXhpcy5lbmRBbmdsZVJhZCxwPWUuaW52ZXJ0ZWQ/ZS54QXhpc1swXTplLnlBeGlzWzBdLGQ9e30sYz1cImFyY1wiO2lmKGQueD1pWzBdK2UucGxvdExlZnQsZC55PWlbMV0rZS5wbG90VG9wLHRoaXMuem9vbUhvcil7bGV0IHQ9bD4wP2gtbDpNYXRoLmFicyhsKStNYXRoLmFicyhoKSx1PU1hdGguYXRhbjIoby1lLnBsb3RUb3AtaVsxXSxzLWUucGxvdExlZnQtaVswXSktbCxnPU1hdGguYXRhbjIoYS1lLnBsb3RUb3AtaVsxXSxyLWUucGxvdExlZnQtaVswXSktbDtkLnI9aVsyXS8yLGQuaW5uZXJSPWlbM10vMix1PD0wJiYodSs9biksZzw9MCYmKGcrPW4pLGc8dSYmKGc9W3UsdT1nXVswXSksdDxuJiZsK2c+aCsobi10KS8yJiYoZz11LHU9bDw9MD9sOjApO2xldCBmPWQuc3RhcnQ9TWF0aC5tYXgodStsLGwpLG09ZC5lbmQ9TWF0aC5taW4oZytsLGgpO2lmKFwicG9seWdvblwiPT09cC5vcHRpb25zLmdyaWRMaW5lSW50ZXJwb2xhdGlvbil7bGV0IHQ9ZS5ob3ZlclBhbmUuYXhpcyxzPWYtdC5zdGFydEFuZ2xlUmFkK3QucG9zLG89cC5nZXRQbG90TGluZVBhdGgoe3ZhbHVlOnAubWF4fSksYT10LnRvVmFsdWUocykscj10LnRvVmFsdWUocysobS1mKSk7aWYoYTx0LmdldEV4dHJlbWVzKCkubWluKXtsZXR7bWluOmUsbWF4Oml9PXQuZ2V0RXh0cmVtZXMoKTthPWktKGUtYSl9aWYocjx0LmdldEV4dHJlbWVzKCkubWluKXtsZXR7bWluOmUsbWF4Oml9PXQuZ2V0RXh0cmVtZXMoKTtyPWktKGUtcil9cjxhJiYocj1bYSxhPXJdWzBdKSwobz1zWChvLGEscix0KSkucHVzaChbXCJMXCIsaVswXStlLnBsb3RMZWZ0LGUucGxvdFRvcCtpWzFdXSksZC5kPW8sYz1cInBhdGhcIn19aWYodGhpcy56b29tVmVydCl7bGV0IHQ9ZS5pbnZlcnRlZD9lLnhBeGlzWzBdOmUueUF4aXNbMF0sbj1NYXRoLnNxcnQoTWF0aC5wb3cocy1lLnBsb3RMZWZ0LWlbMF0sMikrTWF0aC5wb3coby1lLnBsb3RUb3AtaVsxXSwyKSkscD1NYXRoLnNxcnQoTWF0aC5wb3coci1lLnBsb3RMZWZ0LWlbMF0sMikrTWF0aC5wb3coYS1lLnBsb3RUb3AtaVsxXSwyKSk7aWYocDxuJiYobj1bcCxwPW5dWzBdKSxwPmlbMl0vMiYmKHA9aVsyXS8yKSxuPGlbM10vMiYmKG49aVszXS8yKSx0aGlzLnpvb21Ib3J8fChkLnN0YXJ0PWwsZC5lbmQ9aCksZC5yPXAsZC5pbm5lclI9bixcInBvbHlnb25cIj09PXQub3B0aW9ucy5ncmlkTGluZUludGVycG9sYXRpb24pe2xldCBlPXQudG9WYWx1ZSh0Lmxlbit0LnBvcy1uKSxpPXQudG9WYWx1ZSh0Lmxlbit0LnBvcy1wKSxzPXQuZ2V0UGxvdExpbmVQYXRoKHt2YWx1ZTppfSkuY29uY2F0KHQuZ2V0UGxvdExpbmVQYXRoKHt2YWx1ZTplLHJldmVyc2U6ITB9KSk7ZC5kPXMsYz1cInBhdGhcIn19aWYodGhpcy56b29tSG9yJiZ0aGlzLnpvb21WZXJ0JiZcInBvbHlnb25cIj09PXAub3B0aW9ucy5ncmlkTGluZUludGVycG9sYXRpb24pe2xldCB0PWUuaG92ZXJQYW5lLmF4aXMsaT1kLnN0YXJ0fHwwLHM9ZC5lbmR8fDAsbz1pLXQuc3RhcnRBbmdsZVJhZCt0LnBvcyxhPXQudG9WYWx1ZShvKSxyPXQudG9WYWx1ZShvKyhzLWkpKTtpZihkLmQgaW5zdGFuY2VvZiBBcnJheSl7bGV0IHQ9ZC5kLnNsaWNlKDAsZC5kLmxlbmd0aC8yKSxpPWQuZC5zbGljZShkLmQubGVuZ3RoLzIsZC5kLmxlbmd0aCk7aT1bLi4uaV0ucmV2ZXJzZSgpO2xldCBzPWUuaG92ZXJQYW5lLmF4aXM7dD1zWCh0LGEscixzKSwoaT1zWChpLGEscixzKSkmJihpWzBdWzBdPVwiTFwiKSxpPVsuLi5pXS5yZXZlcnNlKCksZC5kPXQuY29uY2F0KGkpLGM9XCJwYXRoXCJ9fXQuYXR0cnM9ZCx0LnNoYXBlVHlwZT1jfX1mdW5jdGlvbiBzVCgpe2xldCB0PXRoaXMuY2hhcnQ7dC5wb2xhciYmKHRoaXMucG9sYXI9bmV3IHNXKHRoaXMpLHQuaW52ZXJ0ZWQmJih0aGlzLmlzUmFkaWFsU2VyaWVzPSEwLHRoaXMuaXMoXCJjb2x1bW5cIikmJih0aGlzLmlzUmFkaWFsQmFyPSEwKSkpfWZ1bmN0aW9uIHNDKCl7aWYodGhpcy5jaGFydC5wb2xhciYmdGhpcy54QXhpcyl7bGV0e3hBeGlzOnQseUF4aXM6ZX09dGhpcyxpPXRoaXMuY2hhcnQ7dGhpcy5rZEJ5QW5nbGU9aS50b29sdGlwJiZpLnRvb2x0aXAuc2hhcmVkLHRoaXMua2RCeUFuZ2xlfHxpLmludmVydGVkP3RoaXMuc2VhcmNoUG9pbnQ9c046dGhpcy5vcHRpb25zLmZpbmROZWFyZXN0UG9pbnRCeT1cInh5XCI7bGV0IHM9dGhpcy5wb2ludHMsbz1zLmxlbmd0aDtmb3IoO28tLTspdGhpcy5pcyhcImNvbHVtblwiKXx8dGhpcy5pcyhcImNvbHVtbnJhbmdlXCIpfHx0aGlzLnBvbGFyLnRvWFkoc1tvXSksaS5oYXNQYXJhbGxlbENvb3JkaW5hdGVzfHx0aGlzLnlBeGlzLnJldmVyc2VkfHwoc2Ioc1tvXS55LE51bWJlci5NSU5fVkFMVUUpPGUubWlufHxzW29dLng8dC5taW58fHNbb10ueD50Lm1heD8oc1tvXS5pc051bGw9ITAsc1tvXS5wbG90WT1OYU4pOnNbb10uaXNOdWxsPXNbb10uaXNWYWxpZCYmIXNbb10uaXNWYWxpZCgpKTt0aGlzLmhhc0NsaXBDaXJjbGVTZXR0ZXJ8fCh0aGlzLmhhc0NsaXBDaXJjbGVTZXR0ZXI9ISF0aGlzLmV2ZW50c1RvVW5iaW5kLnB1c2goc2ModGhpcyxcImFmdGVyUmVuZGVyXCIsZnVuY3Rpb24oKXtsZXQgdDtpLnBvbGFyJiYhMSE9PXRoaXMub3B0aW9ucy5jbGlwJiYodD10aGlzLnlBeGlzLnBhbmUuY2VudGVyLHRoaXMuY2xpcENpcmNsZT90aGlzLmNsaXBDaXJjbGUuYW5pbWF0ZSh7eDp0WzBdLHk6dFsxXSxyOnRbMl0vMixpbm5lclI6dFszXS8yfSk6dGhpcy5jbGlwQ2lyY2xlPWZ1bmN0aW9uKHQsZSxpLHMsbyl7bGV0IGE9c3YoKSxyPXQuY3JlYXRlRWxlbWVudChcImNsaXBQYXRoXCIpLmF0dHIoe2lkOmF9KS5hZGQodC5kZWZzKSxuPW8/dC5hcmMoZSxpLHMsbywwLDIqTWF0aC5QSSkuYWRkKHIpOnQuY2lyY2xlKGUsaSxzKS5hZGQocik7cmV0dXJuIG4uaWQ9YSxuLmNsaXBQYXRoPXIsbn0oaS5yZW5kZXJlcix0WzBdLHRbMV0sdFsyXS8yLHRbM10vMiksdGhpcy5ncm91cC5jbGlwKHRoaXMuY2xpcENpcmNsZSksdGhpcy5zZXRDbGlwPXkoKS5ub29wKX0pKSl9fWZ1bmN0aW9uIHNOKHQpe2xldCBlPXRoaXMuY2hhcnQsaT10aGlzLnhBeGlzLHM9dGhpcy55QXhpcyxvPWkucGFuZSYmaS5wYW5lLmNlbnRlcixhPXQuY2hhcnRYLShvJiZvWzBdfHwwKS1lLnBsb3RMZWZ0LHI9dC5jaGFydFktKG8mJm9bMV18fDApLWUucGxvdFRvcCxuPWUuaW52ZXJ0ZWQ/e2NsaWVudFg6dC5jaGFydFgtcy5wb3MscGxvdFk6dC5jaGFydFktaS5wb3N9OntjbGllbnRYOjE4MCstMTgwL01hdGguUEkqTWF0aC5hdGFuMihhLHIpfTtyZXR1cm4gdGhpcy5zZWFyY2hLRFRyZWUobil9ZnVuY3Rpb24gc1godCxlLGkscyl7bGV0IG89cy50aWNrSW50ZXJ2YWwsYT1zLnRpY2tQb3NpdGlvbnMscj1zZyhhLHQ9PnQ+PWkpLG49c2coWy4uLmFdLnJldmVyc2UoKSx0PT50PD1lKTtyZXR1cm4gc3Uocil8fChyPWFbYS5sZW5ndGgtMV0pLHN1KG4pfHwobj1hWzBdLHIrPW8sdFswXVswXT1cIkxcIix0LnVuc2hpZnQodFt0Lmxlbmd0aC0zXSkpLCh0PXQuc2xpY2UoYS5pbmRleE9mKG4pLGEuaW5kZXhPZihyKSsxKSlbMF1bMF09XCJNXCIsdH1mdW5jdGlvbiBzWSh0LGUpe3JldHVybiBzZyh0aGlzLnBhbmV8fFtdLHQ9PnQub3B0aW9ucy5pZD09PWUpfHx0LmNhbGwodGhpcyxlKX1mdW5jdGlvbiBzSSh0LGUsaSxzLG8sYSl7bGV0IHIsbixsO2xldCBoPXRoaXMuY2hhcnQscD1zYihzLmluc2lkZSwhIXRoaXMub3B0aW9ucy5zdGFja2luZyk7aWYoaC5wb2xhcil7aWYocj1lLnJlY3RQbG90WC9NYXRoLlBJKjE4MCxoLmludmVydGVkKXRoaXMuZm9yY2VETD1oLmlzSW5zaWRlUGxvdChlLnBsb3RYLGUucGxvdFkpLHAmJmUuc2hhcGVBcmdzPyhuPWUuc2hhcGVBcmdzLG89c20obyx7eDoobD10aGlzLnlBeGlzLnBvc3RUcmFuc2xhdGUoKChuLnN0YXJ0fHwwKSsobi5lbmR8fDApKS8yLXRoaXMueEF4aXMuc3RhcnRBbmdsZVJhZCxlLmJhclgrZS5wb2ludFdpZHRoLzIpKS54LWgucGxvdExlZnQseTpsLnktaC5wbG90VG9wfSkpOmUudG9vbHRpcFBvcyYmKG89c20obyx7eDplLnRvb2x0aXBQb3NbMF0seTplLnRvb2x0aXBQb3NbMV19KSkscy5hbGlnbj1zYihzLmFsaWduLFwiY2VudGVyXCIpLHMudmVydGljYWxBbGlnbj1zYihzLnZlcnRpY2FsQWxpZ24sXCJtaWRkbGVcIik7ZWxzZXt2YXIgZDtsZXQgdCxlO251bGw9PT0oZD1zKS5hbGlnbiYmKHQ9cj4yMCYmcjwxNjA/XCJsZWZ0XCI6cj4yMDAmJnI8MzQwP1wicmlnaHRcIjpcImNlbnRlclwiLGQuYWxpZ249dCksbnVsbD09PWQudmVydGljYWxBbGlnbiYmKGU9cjw0NXx8cj4zMTU/XCJib3R0b21cIjpyPjEzNSYmcjwyMjU/XCJ0b3BcIjpcIm1pZGRsZVwiLGQudmVydGljYWxBbGlnbj1lKSxzPWR9TSgpLnByb3RvdHlwZS5hbGlnbkRhdGFMYWJlbC5jYWxsKHRoaXMsZSxpLHMsbyxhKSx0aGlzLmlzUmFkaWFsQmFyJiZlLnNoYXBlQXJncyYmZS5zaGFwZUFyZ3Muc3RhcnQ9PT1lLnNoYXBlQXJncy5lbmQ/aS5oaWRlKCk6aS5zaG93KCl9ZWxzZSB0LmNhbGwodGhpcyxlLGkscyxvLGEpfWZ1bmN0aW9uIHNSKCl7bGV0IHQ9dGhpcy5vcHRpb25zLGU9dC5zdGFja2luZyxpPXRoaXMuY2hhcnQscz10aGlzLnhBeGlzLG89dGhpcy55QXhpcyxhPW8ucmV2ZXJzZWQscj1vLmNlbnRlcixuPXMuc3RhcnRBbmdsZVJhZCxsPXMuZW5kQW5nbGVSYWQtbixoPXQudGhyZXNob2xkLHA9MCxkLGMsdSxnLGYsbT0wLGI9MCx4LFAsdixNLEwsayx3LEE7aWYocy5pc1JhZGlhbClmb3IodT0oZD10aGlzLnBvaW50cykubGVuZ3RoLGc9by50cmFuc2xhdGUoby5taW4pLGY9by50cmFuc2xhdGUoby5tYXgpLGg9dC50aHJlc2hvbGR8fDAsaS5pbnZlcnRlZCYmc2YoaCkmJnN1KHA9by50cmFuc2xhdGUoaCkpJiYocDwwP3A9MDpwPmwmJihwPWwpLHRoaXMudHJhbnNsYXRlZFRocmVzaG9sZD1wK24pO3UtLTspe2lmKGs9KGM9ZFt1XSkuYmFyWCxQPWMueCx2PWMueSxjLnNoYXBlVHlwZT1cImFyY1wiLGkuaW52ZXJ0ZWQpe2MucGxvdFk9by50cmFuc2xhdGUodiksZSYmby5zdGFja2luZz8oTD1vLnN0YWNraW5nLnN0YWNrc1sodjwwP1wiLVwiOlwiXCIpK3RoaXMuc3RhY2tLZXldLHRoaXMudmlzaWJsZSYmTCYmTFtQXSYmIWMuaXNOdWxsJiYoTT1MW1BdLnBvaW50c1t0aGlzLmdldFN0YWNrSW5kaWNhdG9yKHZvaWQgMCxQLHRoaXMuaW5kZXgpLmtleV0sbT1vLnRyYW5zbGF0ZShNWzBdKSxiPW8udHJhbnNsYXRlKE1bMV0pLHN1KG0pJiYobT15KCkuY2xhbXAobSwwLGwpKSkpOihtPXAsYj1jLnBsb3RZKSxtPmImJihiPVttLG09Yl1bMF0pLGE/Yj5nP2I9ZzptPGY/bT1mOihtPmd8fGI8ZikmJihtPWI9bCk6bTxnP209ZzpiPmY/Yj1mOihiPGd8fG0+ZikmJihtPWI9MCksby5taW4+by5tYXgmJihtPWI9YT9sOjApLG0rPW4sYis9bixyJiYoYy5iYXJYPWsrPXJbM10vMiksdz1NYXRoLm1heChrLDApLEE9TWF0aC5tYXgoaytjLnBvaW50V2lkdGgsMCk7bGV0IGk9dC5ib3JkZXJSYWRpdXMscz1zeCgoXCJvYmplY3RcIj09dHlwZW9mIGk/aS5yYWRpdXM6aSl8fDAsQS13KTtjLnNoYXBlQXJncz17eDpyWzBdLHk6clsxXSxyOkEsaW5uZXJSOncsc3RhcnQ6bSxlbmQ6Yixib3JkZXJSYWRpdXM6c30sYy5vcGFjaXR5PW09PT1iPzA6dm9pZCAwLGMucGxvdFk9KHN1KHRoaXMudHJhbnNsYXRlZFRocmVzaG9sZCkmJihtPHRoaXMudHJhbnNsYXRlZFRocmVzaG9sZD9tOmIpKS1ufWVsc2UgbT1rK24sYy5zaGFwZUFyZ3M9dGhpcy5wb2xhci5hcmMoYy55Qm90dG9tLGMucGxvdFksbSxtK2MucG9pbnRXaWR0aCksYy5zaGFwZUFyZ3MuYm9yZGVyUmFkaXVzPTA7dGhpcy5wb2xhci50b1hZKGMpLGkuaW52ZXJ0ZWQ/KHg9by5wb3N0VHJhbnNsYXRlKGMucmVjdFBsb3RZLGsrYy5wb2ludFdpZHRoLzIpLGMudG9vbHRpcFBvcz1beC54LWkucGxvdExlZnQseC55LWkucGxvdFRvcF0pOmMudG9vbHRpcFBvcz1bYy5wbG90WCxjLnBsb3RZXSxyJiYoYy50dEJlbG93PWMucGxvdFk+clsxXSl9fWZ1bmN0aW9uIHNFKHQsZSl7bGV0IGkscztsZXQgbz10aGlzO2lmKHRoaXMuY2hhcnQucG9sYXIpe2U9ZXx8dGhpcy5wb2ludHM7Zm9yKGxldCB0PTA7dDxlLmxlbmd0aDt0KyspaWYoIWVbdF0uaXNOdWxsKXtpPXQ7YnJlYWt9ITEhPT10aGlzLm9wdGlvbnMuY29ubmVjdEVuZHMmJnZvaWQgMCE9PWkmJih0aGlzLmNvbm5lY3RFbmRzPSEwLGUuc3BsaWNlKGUubGVuZ3RoLDAsZVtpXSkscz0hMCksZS5mb3JFYWNoKHQ9Pnt2b2lkIDA9PT10LnBvbGFyUGxvdFkmJm8ucG9sYXIudG9YWSh0KX0pfWxldCBhPXQuYXBwbHkodGhpcyxbXS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKSk7cmV0dXJuIHMmJmUucG9wKCksYX1mdW5jdGlvbiBzeih0LGUpe2xldCBpPXRoaXMuY2hhcnQscz17eEF4aXM6W10seUF4aXM6W119O3JldHVybiBpLnBvbGFyP2kuYXhlcy5mb3JFYWNoKHQ9PntpZihcImNvbG9yQXhpc1wiPT09dC5jb2xsKXJldHVybjtsZXQgbz10LmlzWEF4aXMsYT10LmNlbnRlcixyPWUuY2hhcnRYLWFbMF0taS5wbG90TGVmdCxuPWUuY2hhcnRZLWFbMV0taS5wbG90VG9wO3Nbbz9cInhBeGlzXCI6XCJ5QXhpc1wiXS5wdXNoKHtheGlzOnQsdmFsdWU6dC50cmFuc2xhdGUobz9NYXRoLlBJLU1hdGguYXRhbjIocixuKTpNYXRoLnNxcnQoTWF0aC5wb3cociwyKStNYXRoLnBvdyhuLDIpKSwhMCl9KX0pOnM9dC5jYWxsKHRoaXMsZSksc31mdW5jdGlvbiBzRCh0LGUpe3RoaXMuY2hhcnQucG9sYXJ8fHQuY2FsbCh0aGlzLGUpfWZ1bmN0aW9uIHNPKHQsZSl7bGV0IGk9dGhpcyxzPXRoaXMuY2hhcnQsbz10aGlzLmdyb3VwLGE9dGhpcy5tYXJrZXJHcm91cCxyPXRoaXMueEF4aXMmJnRoaXMueEF4aXMuY2VudGVyLG49cy5wbG90TGVmdCxsPXMucGxvdFRvcCxoPXRoaXMub3B0aW9ucy5hbmltYXRpb24scCxkLGMsdSxnLGY7cy5wb2xhcj9pLmlzUmFkaWFsQmFyP2V8fChpLnN0YXJ0QW5nbGVSYWQ9c2IoaS50cmFuc2xhdGVkVGhyZXNob2xkLGkueEF4aXMuc3RhcnRBbmdsZVJhZCkseSgpLnNlcmllc1R5cGVzLnBpZS5wcm90b3R5cGUuYW5pbWF0ZS5jYWxsKGksZSkpOihoPXNwKGgpLGkuaXMoXCJjb2x1bW5cIik/ZXx8KGQ9clszXS8yLGkucG9pbnRzLmZvckVhY2godD0+e2M9dC5ncmFwaGljLGc9KHU9dC5zaGFwZUFyZ3MpJiZ1LnIsZj11JiZ1LmlubmVyUixjJiZ1JiYoYy5hdHRyKHtyOmQsaW5uZXJSOmR9KSxjLmFuaW1hdGUoe3I6Zyxpbm5lclI6Zn0saS5vcHRpb25zLmFuaW1hdGlvbikpfSkpOmU/KHA9e3RyYW5zbGF0ZVg6clswXStuLHRyYW5zbGF0ZVk6clsxXStsLHNjYWxlWDouMDAxLHNjYWxlWTouMDAxfSxvLmF0dHIocCksYSYmYS5hdHRyKHApKToocD17dHJhbnNsYXRlWDpuLHRyYW5zbGF0ZVk6bCxzY2FsZVg6MSxzY2FsZVk6MX0sby5hbmltYXRlKHAsaCksYSYmYS5hbmltYXRlKHAsaCkpKTp0LmNhbGwodGhpcyxlKX1mdW5jdGlvbiBzSCh0LGUsaSxzKXtsZXQgbyxhO2lmKHRoaXMuY2hhcnQucG9sYXIpe2lmKHMpe2xldCB0PShhPWZ1bmN0aW9uIHQoZSxpLHMsbyl7bGV0IGEscixuLGwsaCxwO2xldCBkPW8/MTowLGM9KGE9aT49MCYmaTw9ZS5sZW5ndGgtMT9pOmk8MD9lLmxlbmd0aC0xK2k6MCktMTwwP2UubGVuZ3RoLSgxK2QpOmEtMSx1PWErMT5lLmxlbmd0aC0xP2Q6YSsxLGc9ZVtjXSxmPWVbdV0sbT1nLnBsb3RYLGI9Zy5wbG90WSx5PWYucGxvdFgseD1mLnBsb3RZLFA9ZVthXS5wbG90WCx2PWVbYV0ucGxvdFk7cj0oMS41KlArbSkvMi41LG49KDEuNSp2K2IpLzIuNSxsPSgxLjUqUCt5KS8yLjUsaD0oMS41KnYreCkvMi41O2xldCBNPU1hdGguc3FydChNYXRoLnBvdyhyLVAsMikrTWF0aC5wb3cobi12LDIpKSxMPU1hdGguc3FydChNYXRoLnBvdyhsLVAsMikrTWF0aC5wb3coaC12LDIpKSxrPU1hdGguYXRhbjIobi12LHItUCk7cD1NYXRoLlBJLzIrKGsrTWF0aC5hdGFuMihoLXYsbC1QKSkvMixNYXRoLmFicyhrLXApPk1hdGguUEkvMiYmKHAtPU1hdGguUEkpLHI9UCtNYXRoLmNvcyhwKSpNLG49ditNYXRoLnNpbihwKSpNO2xldCB3PXtyaWdodENvbnRYOmw9UCtNYXRoLmNvcyhNYXRoLlBJK3ApKkwscmlnaHRDb250WTpoPXYrTWF0aC5zaW4oTWF0aC5QSStwKSpMLGxlZnRDb250WDpyLGxlZnRDb250WTpuLHBsb3RYOlAscGxvdFk6dn07cmV0dXJuIHMmJih3LnByZXZQb2ludENvbnQ9dChlLGMsITEsbykpLHd9KGUscywhMCx0aGlzLmNvbm5lY3RFbmRzKSkucHJldlBvaW50Q29udCYmYS5wcmV2UG9pbnRDb250LnJpZ2h0Q29udFgsaT1hLnByZXZQb2ludENvbnQmJmEucHJldlBvaW50Q29udC5yaWdodENvbnRZO289W1wiQ1wiLHNmKHQpP3Q6YS5wbG90WCxzZihpKT9pOmEucGxvdFksc2YoYS5sZWZ0Q29udFgpP2EubGVmdENvbnRYOmEucGxvdFgsc2YoYS5sZWZ0Q29udFkpP2EubGVmdENvbnRZOmEucGxvdFksYS5wbG90WCxhLnBsb3RZXX1lbHNlIG89W1wiTVwiLGkucGxvdFgsaS5wbG90WV19ZWxzZSBvPXQuY2FsbCh0aGlzLGUsaSxzKTtyZXR1cm4gb31mdW5jdGlvbiBzQih0LGUsaT10aGlzLnBsb3RZKXtpZighdGhpcy5kZXN0cm95ZWQpe2xldHtwbG90WDpzLHNlcmllczpvfT10aGlzLHtjaGFydDphfT1vO3JldHVybiBhLnBvbGFyJiZzZihzKSYmc2YoaSk/W3MrKGU/YS5wbG90TGVmdDowKSxpKyhlP2EucGxvdFRvcDowKV06dC5jYWxsKHRoaXMsZSxpKX19Y2xhc3Mgc1d7c3RhdGljIGNvbXBvc2UodCxlLGkscyxvLGEscixuLGwsaCl7aWYoRi5jb21wb3NlKGUsaSksc2guY29tcG9zZSh0LG8pLHN5KHNkLFwiUG9sYXJcIikpe2xldCB0PWUucHJvdG90eXBlLG89YS5wcm90b3R5cGUscD1pLnByb3RvdHlwZSxkPXMucHJvdG90eXBlO2lmKHNjKGUsXCJhZnRlckRyYXdDaGFydEJveFwiLHNMKSxzYyhlLFwiY3JlYXRlQXhlc1wiLHN3KSxzYyhlLFwiaW5pdFwiLHNrKSxzTSh0LFwiZ2V0XCIsc1kpLHNNKHAsXCJnZXRDb29yZGluYXRlc1wiLHN6KSxzTShwLFwicGluY2hcIixzRCksc2MoaSxcImdldFNlbGVjdGlvbk1hcmtlckF0dHJzXCIsc1MpLHNjKGksXCJnZXRTZWxlY3Rpb25Cb3hcIixzQSksc2MocyxcImFmdGVySW5pdFwiLHNUKSxzYyhzLFwiYWZ0ZXJUcmFuc2xhdGVcIixzQyx7b3JkZXI6Mn0pLHNjKHMsXCJhZnRlckNvbHVtblRyYW5zbGF0ZVwiLHNSLHtvcmRlcjo0fSksc00oZCxcImFuaW1hdGVcIixzTyksc00obyxcInBvc1wiLHNCKSxuKXtsZXQgdD1uLnByb3RvdHlwZTtzTSh0LFwiYWxpZ25EYXRhTGFiZWxcIixzSSksc00odCxcImFuaW1hdGVcIixzTyl9aWYobCYmc00obC5wcm90b3R5cGUsXCJnZXRHcmFwaFBhdGhcIixzRSksaCl7bGV0IHQ9aC5wcm90b3R5cGU7c00odCxcImdldFBvaW50U3BsaW5lXCIsc0gpLHImJihyLnByb3RvdHlwZS5nZXRQb2ludFNwbGluZT10LmdldFBvaW50U3BsaW5lKX19fWNvbnN0cnVjdG9yKHQpe3RoaXMuc2VyaWVzPXR9YXJjKHQsZSxpLHMpe2xldCBvPXRoaXMuc2VyaWVzLGE9by54QXhpcy5jZW50ZXIscj1vLnlBeGlzLmxlbixuPWFbM10vMixsPXItZStuLGg9ci1zYih0LHIpK247cmV0dXJuIG8ueUF4aXMucmV2ZXJzZWQmJihsPDAmJihsPW4pLGg8MCYmKGg9bikpLHt4OmFbMF0seTphWzFdLHI6bCxpbm5lclI6aCxzdGFydDppLGVuZDpzfX10b1hZKHQpe2xldCBlPXRoaXMuc2VyaWVzLGk9ZS5jaGFydCxzPWUueEF4aXMsbz1lLnlBeGlzLGE9dC5wbG90WCxyPWkuaW52ZXJ0ZWQsbj10LnksbD10LnBsb3RZLGg9cj9hOm8ubGVuLWwscDtpZihyJiZlJiYhZS5pc1JhZGlhbEJhciYmKHQucGxvdFk9bD1zZihuKT9vLnRyYW5zbGF0ZShuKTowKSx0LnJlY3RQbG90WD1hLHQucmVjdFBsb3RZPWwsby5jZW50ZXImJihoKz1vLmNlbnRlclszXS8yKSxzZihsKSl7bGV0IGU9cj9vLnBvc3RUcmFuc2xhdGUobCxoKTpzLnBvc3RUcmFuc2xhdGUoYSxoKTt0LnBsb3RYPXQucG9sYXJQbG90WD1lLngtaS5wbG90TGVmdCx0LnBsb3RZPXQucG9sYXJQbG90WT1lLnktaS5wbG90VG9wfWUua2RCeUFuZ2xlPygocD0oYS9NYXRoLlBJKjE4MCtzLnBhbmUub3B0aW9ucy5zdGFydEFuZ2xlKSUzNjApPDAmJihwKz0zNjApLHQuY2xpZW50WD1wKTp0LmNsaWVudFg9dC5wbG90WH19dmFyIHNGPWYoMTg0KSxzRz1mLm4oc0YpO2xldHtjb21wb3NlZDpzcX09eSgpLHthZGRFdmVudDpzVixvYmplY3RFYWNoOnNfLHB1c2hVbmlxdWU6c1V9PXkoKTshZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe2xldCB0PXRoaXMud2F0ZXJmYWxsLnN0YWNrczt0JiYodC5jaGFuZ2VkPSExLGRlbGV0ZSB0LmFscmVhZHlDaGFuZ2VkKX1mdW5jdGlvbiBpKCl7bGV0IHQ9dGhpcy5vcHRpb25zLnN0YWNrTGFiZWxzO3QmJnQuZW5hYmxlZCYmdGhpcy53YXRlcmZhbGwuc3RhY2tzJiZ0aGlzLndhdGVyZmFsbC5yZW5kZXJTdGFja1RvdGFscygpfWZ1bmN0aW9uIHMoKXt0aGlzLndhdGVyZmFsbHx8KHRoaXMud2F0ZXJmYWxsPW5ldyBhKHRoaXMpKX1mdW5jdGlvbiBvKCl7bGV0IHQ9dGhpcy5heGVzO2ZvcihsZXQgZSBvZiB0aGlzLnNlcmllcylpZihlLm9wdGlvbnMuc3RhY2tpbmcpe2ZvcihsZXQgZSBvZiB0KWUuaXNYQXhpc3x8KGUud2F0ZXJmYWxsLnN0YWNrcy5jaGFuZ2VkPSEwKTticmVha319dC5jb21wb3NlPWZ1bmN0aW9uKHQsYSl7c1Uoc3EsXCJBeGlzLldhdGVyZmFsbFwiKSYmKHNWKHQsXCJpbml0XCIscyksc1YodCxcImFmdGVyQnVpbGRTdGFja3NcIixlKSxzVih0LFwiYWZ0ZXJSZW5kZXJcIixpKSxzVihhLFwiYmVmb3JlUmVkcmF3XCIsbykpfTtjbGFzcyBhe2NvbnN0cnVjdG9yKHQpe3RoaXMuYXhpcz10LHRoaXMuc3RhY2tzPXtjaGFuZ2VkOiExfX1yZW5kZXJTdGFja1RvdGFscygpe2xldCB0PXRoaXMuYXhpcyxlPXQud2F0ZXJmYWxsLnN0YWNrcyxpPXQuc3RhY2tpbmcmJnQuc3RhY2tpbmcuc3RhY2tUb3RhbEdyb3VwLHM9bmV3KHNHKCkpKHQsdC5vcHRpb25zLnN0YWNrTGFiZWxzfHx7fSwhMSwwLHZvaWQgMCk7dGhpcy5kdW1teVN0YWNrSXRlbT1zLGkmJnNfKGUsdD0+e3NfKHQsKHQsZSk9PntzLnRvdGFsPXQuc3RhY2tUb3RhbCxzLng9K2UsdC5sYWJlbCYmKHMubGFiZWw9dC5sYWJlbCksc0coKS5wcm90b3R5cGUucmVuZGVyLmNhbGwocyxpKSx0LmxhYmVsPXMubGFiZWwsZGVsZXRlIHMubGFiZWx9KX0pLHMudG90YWw9bnVsbH19dC5Db21wb3NpdGlvbj1hfShjfHwoYz17fSkpO2xldCBzSz1jLHtpc051bWJlcjpzWn09eSgpO2NsYXNzIHNqIGV4dGVuZHMgdGMoKS5wcm90b3R5cGUucG9pbnRDbGFzc3tnZXRDbGFzc05hbWUoKXtsZXQgdD10WigpLnByb3RvdHlwZS5nZXRDbGFzc05hbWUuY2FsbCh0aGlzKTtyZXR1cm4gdGhpcy5pc1N1bT90Kz1cIiBoaWdoY2hhcnRzLXN1bVwiOnRoaXMuaXNJbnRlcm1lZGlhdGVTdW0mJih0Kz1cIiBoaWdoY2hhcnRzLWludGVybWVkaWF0ZS1zdW1cIiksdH1pc1ZhbGlkKCl7cmV0dXJuIHNaKHRoaXMueSl8fHRoaXMuaXNTdW18fCEhdGhpcy5pc0ludGVybWVkaWF0ZVN1bX19bGV0e2NvbHVtbjpzJCxsaW5lOnNRfT1QKCkuc2VyaWVzVHlwZXMse2FkZEV2ZW50OnNKLGFycmF5TWF4OnMwLGFycmF5TWluOnMxLGNvcnJlY3RGbG9hdDpzMixjcmlzcDpzMyxleHRlbmQ6czUsaXNOdW1iZXI6czgsbWVyZ2U6czYsb2JqZWN0RWFjaDpzNCxwaWNrOnM5fT15KCk7ZnVuY3Rpb24gczcodCxlKXtyZXR1cm4gT2JqZWN0Lmhhc093blByb3BlcnR5LmNhbGwodCxlKX1jbGFzcyBvdCBleHRlbmRzIHMke2dlbmVyYXRlUG9pbnRzKCl7cyQucHJvdG90eXBlLmdlbmVyYXRlUG9pbnRzLmFwcGx5KHRoaXMpO2xldCB0PXRoaXMuZ2V0Q29sdW1uKFwieVwiLCEwKTtmb3IobGV0IGU9MCxpPXRoaXMucG9pbnRzLmxlbmd0aDtlPGk7ZSsrKXtsZXQgaT10aGlzLnBvaW50c1tlXSxzPXRbZV07czgocykmJihpLmlzSW50ZXJtZWRpYXRlU3VtfHxpLmlzU3VtKSYmKGkueT1zMihzKSl9fXByb2Nlc3NEYXRhKHQpe2xldCBlLGkscyxvLGEscjtsZXQgbj10aGlzLm9wdGlvbnMsbD10aGlzLmdldENvbHVtbihcInlcIiksaD1uLmRhdGEscD1sLmxlbmd0aCxkPW4udGhyZXNob2xkfHwwO3M9aT1vPWE9MDtmb3IobGV0IHQ9MDt0PHA7dCsrKXI9bFt0XSxlPWg/Llt0XXx8e30sXCJzdW1cIj09PXJ8fGUuaXNTdW0/bFt0XT1zMihzKTpcImludGVybWVkaWF0ZVN1bVwiPT09cnx8ZS5pc0ludGVybWVkaWF0ZVN1bT8obFt0XT1zMihpKSxpPTApOihzKz1yLGkrPXIpLG89TWF0aC5taW4ocyxvKSxhPU1hdGgubWF4KHMsYSk7c3VwZXIucHJvY2Vzc0RhdGEuY2FsbCh0aGlzLHQpLG4uc3RhY2tpbmd8fCh0aGlzLmRhdGFNaW49bytkLHRoaXMuZGF0YU1heD1hKX10b1lEYXRhKHQpe3JldHVybiB0LmlzU3VtP1wic3VtXCI6dC5pc0ludGVybWVkaWF0ZVN1bT9cImludGVybWVkaWF0ZVN1bVwiOnQueX1wb2ludEF0dHJpYnModCxlKXtsZXQgaT10aGlzLm9wdGlvbnMudXBDb2xvcjtpJiYhdC5vcHRpb25zLmNvbG9yJiZzOCh0LnkpJiYodC5jb2xvcj10Lnk+MD9pOnZvaWQgMCk7bGV0IHM9cyQucHJvdG90eXBlLnBvaW50QXR0cmlicy5jYWxsKHRoaXMsdCxlKTtyZXR1cm4gZGVsZXRlIHMuZGFzaHN0eWxlLHN9Z2V0R3JhcGhQYXRoKCl7cmV0dXJuW1tcIk1cIiwwLDBdXX1nZXRDcmlzcFBhdGgoKXtsZXQgdD10aGlzLmRhdGEuZmlsdGVyKHQ9PnM4KHQueSkpLGU9dGhpcy55QXhpcyxpPXQubGVuZ3RoLHM9dGhpcy5ncmFwaD8uc3Ryb2tlV2lkdGgoKXx8MCxvPXRoaXMueEF4aXMucmV2ZXJzZWQsYT10aGlzLnlBeGlzLnJldmVyc2VkLHI9dGhpcy5vcHRpb25zLnN0YWNraW5nLG49W107Zm9yKGxldCBsPTE7bDxpO2wrKyl7aWYoISh0aGlzLm9wdGlvbnMuY29ubmVjdE51bGxzfHxzOCh0aGlzLmRhdGFbdFtsXS5pbmRleC0xXS55KSkpY29udGludWU7bGV0IGk9dFtsXS5ib3gsaD10W2wtMV0scD1oLnl8fDAsZD10W2wtMV0uYm94O2lmKCFpfHwhZCljb250aW51ZTtsZXQgYz1lLndhdGVyZmFsbC5zdGFja3NbdGhpcy5zdGFja0tleV0sdT1wPjA/LWQuaGVpZ2h0OjA7aWYoYyYmZCYmaSl7bGV0IHQ7bGV0IHA9Y1tsLTFdO2lmKHIpe2xldCBpPXAuY29ubmVjdG9yVGhyZXNob2xkO3Q9czMoZS50cmFuc2xhdGUoaSwhMSwhMCwhMSwhMCkrKGE/dTowKSxzKX1lbHNlIHQ9czMoZC55KyhoLm1pblBvaW50TGVuZ3RoT2Zmc2V0fHwwKSxzKTtuLnB1c2goW1wiTVwiLChkLnh8fDApKyhvPzA6ZC53aWR0aHx8MCksdF0sW1wiTFwiLChpLnh8fDApKyhvJiZpLndpZHRofHwwKSx0XSl9aWYoZCYmbi5sZW5ndGgmJighciYmcDwwJiYhYXx8cD4wJiZhKSl7bGV0IHQ9bltuLmxlbmd0aC0yXTt0JiZcIm51bWJlclwiPT10eXBlb2YgdFsyXSYmKHRbMl0rPWQuaGVpZ2h0fHwwKTtsZXQgZT1uW24ubGVuZ3RoLTFdO2UmJlwibnVtYmVyXCI9PXR5cGVvZiBlWzJdJiYoZVsyXSs9ZC5oZWlnaHR8fDApfX1yZXR1cm4gbn1kcmF3R3JhcGgoKXtzUS5wcm90b3R5cGUuZHJhd0dyYXBoLmNhbGwodGhpcyksdGhpcy5ncmFwaCYmdGhpcy5ncmFwaC5hdHRyKHtkOnRoaXMuZ2V0Q3Jpc3BQYXRoKCl9KX1zZXRTdGFja2VkUG9pbnRzKHQpe2xldCBlPXRoaXMub3B0aW9ucyxpPXQud2F0ZXJmYWxsPy5zdGFja3Mscz1lLnRocmVzaG9sZHx8MCxvPXRoaXMuc3RhY2tLZXksYT10aGlzLmdldENvbHVtbihcInhcIikscj10aGlzLmdldENvbHVtbihcInlcIiksbj1hLmxlbmd0aCxsPXMsaD1sLHAsZD0wLGM9MCx1PTAsZyxmLG0sYix5LHgsUCx2LE09KHQsZSxpLHMpPT57aWYocCl7aWYoZylmb3IoO2k8ZztpKyspcC5zdGFja1N0YXRlW2ldKz1zO2Vsc2UgcC5zdGFja1N0YXRlWzBdPXQsZz1wLnN0YWNrU3RhdGUubGVuZ3RoO3Auc3RhY2tTdGF0ZS5wdXNoKHAuc3RhY2tTdGF0ZVtnLTFdK2UpfX07aWYodC5zdGFja2luZyYmaSYmdGhpcy5yZXNlcnZlU3BhY2UoKSl7dj1pLmNoYW5nZWQsKFA9aS5hbHJlYWR5Q2hhbmdlZCkmJjA+UC5pbmRleE9mKG8pJiYodj0hMCksaVtvXXx8KGlbb109e30pO2xldCB0PWlbb107aWYodClmb3IobGV0IGk9MDtpPG47aSsrKSghdFt4PWFbaV1dfHx2KSYmKHRbeF09e25lZ1RvdGFsOjAscG9zVG90YWw6MCxzdGFja1RvdGFsOjAsdGhyZXNob2xkOjAsc3RhdGVJbmRleDowLHN0YWNrU3RhdGU6W10sbGFiZWw6diYmdFt4XT90W3hdLmxhYmVsOnZvaWQgMH0pLHA9dFt4XSwoeT1yW2ldKT49MD9wLnBvc1RvdGFsKz15OnAubmVnVG90YWwrPXksYj1lLmRhdGFbaV0sZj1wLmFic29sdXRlUG9zPXAucG9zVG90YWwsbT1wLmFic29sdXRlTmVnPXAubmVnVG90YWwscC5zdGFja1RvdGFsPWYrbSxnPXAuc3RhY2tTdGF0ZS5sZW5ndGgsYiYmYi5pc0ludGVybWVkaWF0ZVN1bT8oTSh1LGMsMCx1KSx1PWMsYz1zLGxePWgsaF49bCxsXj1oKTpiJiZiLmlzU3VtPyhNKHMsZCxnLDApLGw9cyk6KE0obCx5LDAsZCksYiYmKGQrPXksYys9eSkpLHAuc3RhdGVJbmRleCsrLHAudGhyZXNob2xkPWwsbCs9cC5zdGFja1RvdGFsO2kuY2hhbmdlZD0hMSxpLmFscmVhZHlDaGFuZ2VkfHwoaS5hbHJlYWR5Q2hhbmdlZD1bXSksaS5hbHJlYWR5Q2hhbmdlZC5wdXNoKG8pfX1nZXRFeHRyZW1lcygpe2xldCB0LGUsaTtsZXQgcz10aGlzLm9wdGlvbnMuc3RhY2tpbmc7cmV0dXJuIHM/KHQ9dGhpcy55QXhpcy53YXRlcmZhbGwuc3RhY2tzLGU9dGhpcy5zdGFja2VkWU5lZz1bXSxpPXRoaXMuc3RhY2tlZFlQb3M9W10sXCJvdmVybGFwXCI9PT1zP3M0KHRbdGhpcy5zdGFja0tleV0sZnVuY3Rpb24odCl7ZS5wdXNoKHMxKHQuc3RhY2tTdGF0ZSkpLGkucHVzaChzMCh0LnN0YWNrU3RhdGUpKX0pOnM0KHRbdGhpcy5zdGFja0tleV0sZnVuY3Rpb24odCl7ZS5wdXNoKHQubmVnVG90YWwrdC50aHJlc2hvbGQpLGkucHVzaCh0LnBvc1RvdGFsK3QudGhyZXNob2xkKX0pLHtkYXRhTWluOnMxKGUpLGRhdGFNYXg6czAoaSl9KTp7ZGF0YU1pbjp0aGlzLmRhdGFNaW4sZGF0YU1heDp0aGlzLmRhdGFNYXh9fX1vdC5kZWZhdWx0T3B0aW9ucz1zNihzJC5kZWZhdWx0T3B0aW9ucyx7ZGF0YUxhYmVsczp7aW5zaWRlOiEwfSxsaW5lV2lkdGg6MSxsaW5lQ29sb3I6XCIjMzMzMzMzXCIsZGFzaFN0eWxlOlwiRG90XCIsYm9yZGVyQ29sb3I6XCIjMzMzMzMzXCIsc3RhdGVzOntob3Zlcjp7bGluZVdpZHRoUGx1czowfX19KSxvdC5jb21wb3NlPXNLLmNvbXBvc2UsczUob3QucHJvdG90eXBlLHtwb2ludFZhbEtleTpcInlcIixzaG93TGluZTohMCxwb2ludENsYXNzOnNqfSksc0oob3QsXCJhZnRlckNvbHVtblRyYW5zbGF0ZVwiLGZ1bmN0aW9uKCl7bGV0e29wdGlvbnM6dCxwb2ludHM6ZSx5QXhpczppfT10aGlzLHM9czkodC5taW5Qb2ludExlbmd0aCw1KSxvPXMvMixhPXQudGhyZXNob2xkfHwwLHI9dC5zdGFja2luZyxuPWkud2F0ZXJmYWxsLnN0YWNrc1t0aGlzLnN0YWNrS2V5XSxsPXRoaXMuZ2V0Q29sdW1uKFwieVwiLCEwKSxoPWEscD1hLGQsYyx1LGc7Zm9yKGxldCB0PTA7dDxlLmxlbmd0aDt0Kyspe2xldCBmPWVbdF0sbT1sW3RdLGI9czUoe3g6MCx5OjAsd2lkdGg6MCxoZWlnaHQ6MH0sZi5zaGFwZUFyZ3N8fHt9KTtmLmJveD1iO2xldCB5PVswLG1dLHg9Zi55fHwwO2lmKHIpe2lmKG4pe2xldCBlPW5bdF07XCJvdmVybGFwXCI9PT1yPyhjPWUuc3RhY2tTdGF0ZVtlLnN0YXRlSW5kZXgtLV0sZD14Pj0wP2M6Yy14LHM3KGUsXCJhYnNvbHV0ZVBvc1wiKSYmZGVsZXRlIGUuYWJzb2x1dGVQb3MsczcoZSxcImFic29sdXRlTmVnXCIpJiZkZWxldGUgZS5hYnNvbHV0ZU5lZyk6KHg+PTA/KGM9ZS50aHJlc2hvbGQrZS5wb3NUb3RhbCxlLnBvc1RvdGFsLT14LGQ9Yyk6KGM9ZS50aHJlc2hvbGQrZS5uZWdUb3RhbCxlLm5lZ1RvdGFsLT14LGQ9Yy14KSwhZS5wb3NUb3RhbCYmczgoZS5hYnNvbHV0ZVBvcykmJnM3KGUsXCJhYnNvbHV0ZVBvc1wiKSYmKGUucG9zVG90YWw9ZS5hYnNvbHV0ZVBvcyxkZWxldGUgZS5hYnNvbHV0ZVBvcyksIWUubmVnVG90YWwmJnM4KGUuYWJzb2x1dGVOZWcpJiZzNyhlLFwiYWJzb2x1dGVOZWdcIikmJihlLm5lZ1RvdGFsPWUuYWJzb2x1dGVOZWcsZGVsZXRlIGUuYWJzb2x1dGVOZWcpKSxmLmlzU3VtfHwoZS5jb25uZWN0b3JUaHJlc2hvbGQ9ZS50aHJlc2hvbGQrZS5zdGFja1RvdGFsKSxpLnJldmVyc2VkPyh1PXg+PTA/ZC14OmQreCxnPWQpOih1PWQsZz1kLXgpLGYuYmVsb3c9dTw9YSxiLnk9aS50cmFuc2xhdGUodSwhMSwhMCwhMSwhMCksYi5oZWlnaHQ9TWF0aC5hYnMoYi55LWkudHJhbnNsYXRlKGcsITEsITAsITEsITApKTtsZXQgcz1pLndhdGVyZmFsbC5kdW1teVN0YWNrSXRlbTtzJiYocy54PXQscy5sYWJlbD1uW3RdLmxhYmVsLHMuc2V0T2Zmc2V0KHRoaXMucG9pbnRYT2Zmc2V0fHwwLHRoaXMuYmFyV3x8MCx0aGlzLnN0YWNrZWRZTmVnW3RdLHRoaXMuc3RhY2tlZFlQb3NbdF0sdm9pZCAwLHRoaXMueEF4aXMpKX19ZWxzZSBkPU1hdGgubWF4KHAscCt4KSt5WzBdLGIueT1pLnRyYW5zbGF0ZShkLCExLCEwLCExLCEwKSxmLmlzU3VtPyhiLnk9aS50cmFuc2xhdGUoeVsxXSwhMSwhMCwhMSwhMCksYi5oZWlnaHQ9TWF0aC5taW4oaS50cmFuc2xhdGUoeVswXSwhMSwhMCwhMSwhMCksaS5sZW4pLWIueSxmLmJlbG93PXlbMV08PWEpOmYuaXNJbnRlcm1lZGlhdGVTdW0/KHg+PTA/KHU9eVsxXStoLGc9aCk6KHU9aCxnPXlbMV0raCksaS5yZXZlcnNlZCYmKHVePWcsZ149dSx1Xj1nKSxiLnk9aS50cmFuc2xhdGUodSwhMSwhMCwhMSwhMCksYi5oZWlnaHQ9TWF0aC5hYnMoYi55LU1hdGgubWluKGkudHJhbnNsYXRlKGcsITEsITAsITEsITApLGkubGVuKSksaCs9eVsxXSxmLmJlbG93PXU8PWEpOihiLmhlaWdodD1tPjA/aS50cmFuc2xhdGUocCwhMSwhMCwhMSwhMCktYi55OmkudHJhbnNsYXRlKHAsITEsITAsITEsITApLWkudHJhbnNsYXRlKHAtbSwhMSwhMCwhMSwhMCkscCs9bSxmLmJlbG93PXA8YSksYi5oZWlnaHQ8MCYmKGIueSs9Yi5oZWlnaHQsYi5oZWlnaHQqPS0xKTtmLnBsb3RZPWIueSxmLnlCb3R0b209Yi55K2IuaGVpZ2h0LGIuaGVpZ2h0PD1zJiYhZi5pc051bGw/KGIuaGVpZ2h0PXMsYi55LT1vLGYueUJvdHRvbT1iLnkrYi5oZWlnaHQsZi5wbG90WT1iLnkseDwwP2YubWluUG9pbnRMZW5ndGhPZmZzZXQ9LW86Zi5taW5Qb2ludExlbmd0aE9mZnNldD1vKTooZi5pc051bGwmJihiLndpZHRoPTApLGYubWluUG9pbnRMZW5ndGhPZmZzZXQ9MCk7bGV0IFA9Zi5wbG90WSsoZi5uZWdhdGl2ZT9iLmhlaWdodDowKTtmLmJlbG93JiYoZi5wbG90WSs9Yi5oZWlnaHQpLGYudG9vbHRpcFBvcyYmKHRoaXMuY2hhcnQuaW52ZXJ0ZWQ/Zi50b29sdGlwUG9zWzBdPWkubGVuLVA6Zi50b29sdGlwUG9zWzFdPVApLGYuaXNJbnNpZGU9dGhpcy5pc1BvaW50SW5zaWRlKGYpO2xldCB2PXMzKGYueUJvdHRvbSx0aGlzLmJvcmRlcldpZHRoKTtiLnk9czMoYi55LHRoaXMuYm9yZGVyV2lkdGgpLGIuaGVpZ2h0PXYtYi55LHM2KCEwLGYuc2hhcGVBcmdzLGIpfX0se29yZGVyOjJ9KSxQKCkucmVnaXN0ZXJTZXJpZXNUeXBlKFwid2F0ZXJmYWxsXCIsb3QpO2xldCBvZT15KCk7b2UuUmFkaWFsQXhpcz1zaCxlci5jb21wb3NlKG9lLkF4aXMsb2UuQ2hhcnQsb2UuTGVnZW5kKSxpai5jb21wb3NlKG9lLkF4aXMsb2UuQ2hhcnQsb2UuTGVnZW5kKSxGLmNvbXBvc2Uob2UuQ2hhcnQsb2UuUG9pbnRlciksc1cuY29tcG9zZShvZS5BeGlzLG9lLkNoYXJ0LG9lLlBvaW50ZXIsb2UuU2VyaWVzLG9lLlRpY2ssb2UuUG9pbnQsUCgpLnNlcmllc1R5cGVzLmFyZWFzcGxpbmVyYW5nZSxQKCkuc2VyaWVzVHlwZXMuY29sdW1uLFAoKS5zZXJpZXNUeXBlcy5saW5lLFAoKS5zZXJpZXNUeXBlcy5zcGxpbmUpLG90LmNvbXBvc2Uob2UuQXhpcyxvZS5DaGFydCk7bGV0IG9pPW9lO3JldHVybiBtLmRlZmF1bHR9KSgpKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=